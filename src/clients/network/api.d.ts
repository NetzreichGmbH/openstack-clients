/**
 * OpenStack Network API
 * Network API provided by Neutron service
 *
 * The version of the OpenAPI document: 2.25
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 * Response of the address-groups/id:get operation
 * @export
 * @interface AddressGroupShowResponse
 */
export interface AddressGroupShowResponse {
    /**
     *
     * @type {AddressGroupsCreateResponseAddressGroup}
     * @memberof AddressGroupShowResponse
     */
    'address_group'?: AddressGroupsCreateResponseAddressGroup;
}
/**
 * Request of the address-groups/id:put operation
 * @export
 * @interface AddressGroupUpdateRequest
 */
export interface AddressGroupUpdateRequest {
    /**
     *
     * @type {AddressGroupUpdateRequestAddressGroup}
     * @memberof AddressGroupUpdateRequest
     */
    'address_group'?: AddressGroupUpdateRequestAddressGroup;
}
/**
 *
 * @export
 * @interface AddressGroupUpdateRequestAddressGroup
 */
export interface AddressGroupUpdateRequestAddressGroup {
    /**
     *
     * @type {string}
     * @memberof AddressGroupUpdateRequestAddressGroup
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressGroupUpdateRequestAddressGroup
     */
    'description'?: string;
}
/**
 * Response of the address-groups/id:put operation
 * @export
 * @interface AddressGroupUpdateResponse
 */
export interface AddressGroupUpdateResponse {
    /**
     *
     * @type {AddressGroupsCreateResponseAddressGroup}
     * @memberof AddressGroupUpdateResponse
     */
    'address_group'?: AddressGroupsCreateResponseAddressGroup;
}
/**
 *
 * @export
 * @interface AddressGroupsAddAddressesAddAddressesRequest
 */
export interface AddressGroupsAddAddressesAddAddressesRequest {
    /**
     *
     * @type {AddressGroupsAddAddressesAddAddressesRequestAddressGroup}
     * @memberof AddressGroupsAddAddressesAddAddressesRequest
     */
    'address_group'?: AddressGroupsAddAddressesAddAddressesRequestAddressGroup;
}
/**
 *
 * @export
 * @interface AddressGroupsAddAddressesAddAddressesRequestAddressGroup
 */
export interface AddressGroupsAddAddressesAddAddressesRequestAddressGroup {
    /**
     * A list of IP addresses.
     * @type {Array<string>}
     * @memberof AddressGroupsAddAddressesAddAddressesRequestAddressGroup
     */
    'addresses'?: Array<string>;
}
/**
 * Request of the address-groups:post operation
 * @export
 * @interface AddressGroupsCreateRequest
 */
export interface AddressGroupsCreateRequest {
    /**
     *
     * @type {AddressGroupsCreateRequestAddressGroup}
     * @memberof AddressGroupsCreateRequest
     */
    'address_group'?: AddressGroupsCreateRequestAddressGroup;
}
/**
 *
 * @export
 * @interface AddressGroupsCreateRequestAddressGroup
 */
export interface AddressGroupsCreateRequestAddressGroup {
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateRequestAddressGroup
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateRequestAddressGroup
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateRequestAddressGroup
     */
    'project_id'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof AddressGroupsCreateRequestAddressGroup
     */
    'addresses'?: Array<string>;
}
/**
 * Response of the address-groups:post operation
 * @export
 * @interface AddressGroupsCreateResponse
 */
export interface AddressGroupsCreateResponse {
    /**
     *
     * @type {AddressGroupsCreateResponseAddressGroup}
     * @memberof AddressGroupsCreateResponse
     */
    'address_group'?: AddressGroupsCreateResponseAddressGroup;
}
/**
 *
 * @export
 * @interface AddressGroupsCreateResponseAddressGroup
 */
export interface AddressGroupsCreateResponseAddressGroup {
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateResponseAddressGroup
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateResponseAddressGroup
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateResponseAddressGroup
     */
    'description'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressGroupsCreateResponseAddressGroup
     */
    'project_id'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof AddressGroupsCreateResponseAddressGroup
     */
    'addresses'?: Array<string>;
}
/**
 * Response of the address-groups:get operation
 * @export
 * @interface AddressGroupsIndexResponse
 */
export interface AddressGroupsIndexResponse {
    /**
     *
     * @type {Array<AddressGroupsCreateResponseAddressGroup>}
     * @memberof AddressGroupsIndexResponse
     */
    'address_groups'?: Array<AddressGroupsCreateResponseAddressGroup>;
}
/**
 *
 * @export
 * @interface AddressGroupsRemoveAddressesRemoveAddressesRequest
 */
export interface AddressGroupsRemoveAddressesRemoveAddressesRequest {
    /**
     *
     * @type {AddressGroupsAddAddressesAddAddressesRequestAddressGroup}
     * @memberof AddressGroupsRemoveAddressesRemoveAddressesRequest
     */
    'address_group'?: AddressGroupsAddAddressesAddAddressesRequestAddressGroup;
}
/**
 * Response of the address-scopes/id:get operation
 * @export
 * @interface AddressScopeShowResponse
 */
export interface AddressScopeShowResponse {
    /**
     *
     * @type {AddressScopesCreateResponseAddressScope}
     * @memberof AddressScopeShowResponse
     */
    'address_scope'?: AddressScopesCreateResponseAddressScope;
}
/**
 * Request of the address-scopes/id:put operation
 * @export
 * @interface AddressScopeUpdateRequest
 */
export interface AddressScopeUpdateRequest {
    /**
     *
     * @type {AddressScopeUpdateRequestAddressScope}
     * @memberof AddressScopeUpdateRequest
     */
    'address_scope'?: AddressScopeUpdateRequestAddressScope;
}
/**
 *
 * @export
 * @interface AddressScopeUpdateRequestAddressScope
 */
export interface AddressScopeUpdateRequestAddressScope {
    /**
     *
     * @type {string}
     * @memberof AddressScopeUpdateRequestAddressScope
     */
    'name'?: string;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof AddressScopeUpdateRequestAddressScope
     */
    'shared'?: AddressScopesCreateRequestAddressScopeShared;
}
/**
 * Response of the address-scopes/id:put operation
 * @export
 * @interface AddressScopeUpdateResponse
 */
export interface AddressScopeUpdateResponse {
    /**
     *
     * @type {AddressScopesCreateResponseAddressScope}
     * @memberof AddressScopeUpdateResponse
     */
    'address_scope'?: AddressScopesCreateResponseAddressScope;
}
/**
 * Request of the address-scopes:post operation
 * @export
 * @interface AddressScopesCreateRequest
 */
export interface AddressScopesCreateRequest {
    /**
     *
     * @type {AddressScopesCreateRequestAddressScope}
     * @memberof AddressScopesCreateRequest
     */
    'address_scope'?: AddressScopesCreateRequestAddressScope;
}
/**
 *
 * @export
 * @interface AddressScopesCreateRequestAddressScope
 */
export interface AddressScopesCreateRequestAddressScope {
    /**
     *
     * @type {string}
     * @memberof AddressScopesCreateRequestAddressScope
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressScopesCreateRequestAddressScope
     */
    'tenant_id'?: string;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof AddressScopesCreateRequestAddressScope
     */
    'shared'?: AddressScopesCreateRequestAddressScopeShared;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeIpVersion}
     * @memberof AddressScopesCreateRequestAddressScope
     */
    'ip_version'?: AddressScopesCreateRequestAddressScopeIpVersion;
}
/**
 *
 * @export
 * @interface AddressScopesCreateRequestAddressScopeIpVersion
 */
export interface AddressScopesCreateRequestAddressScopeIpVersion {
}
/**
 *
 * @export
 * @interface AddressScopesCreateRequestAddressScopeShared
 */
export interface AddressScopesCreateRequestAddressScopeShared {
}
/**
 * Response of the address-scopes:post operation
 * @export
 * @interface AddressScopesCreateResponse
 */
export interface AddressScopesCreateResponse {
    /**
     *
     * @type {AddressScopesCreateResponseAddressScope}
     * @memberof AddressScopesCreateResponse
     */
    'address_scope'?: AddressScopesCreateResponseAddressScope;
}
/**
 *
 * @export
 * @interface AddressScopesCreateResponseAddressScope
 */
export interface AddressScopesCreateResponseAddressScope {
    /**
     *
     * @type {string}
     * @memberof AddressScopesCreateResponseAddressScope
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressScopesCreateResponseAddressScope
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AddressScopesCreateResponseAddressScope
     */
    'tenant_id'?: string;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof AddressScopesCreateResponseAddressScope
     */
    'shared'?: AddressScopesCreateRequestAddressScopeShared;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeIpVersion}
     * @memberof AddressScopesCreateResponseAddressScope
     */
    'ip_version'?: AddressScopesCreateRequestAddressScopeIpVersion;
}
/**
 * Response of the address-scopes:get operation
 * @export
 * @interface AddressScopesIndexResponse
 */
export interface AddressScopesIndexResponse {
    /**
     *
     * @type {Array<AddressScopesCreateResponseAddressScope>}
     * @memberof AddressScopesIndexResponse
     */
    'address_scopes'?: Array<AddressScopesCreateResponseAddressScope>;
}
/**
 * Response of the agents/id:get operation
 * @export
 * @interface AgentShowResponse
 */
export interface AgentShowResponse {
    /**
     *
     * @type {AgentsCreateResponseAgent}
     * @memberof AgentShowResponse
     */
    'agent'?: AgentsCreateResponseAgent;
}
/**
 * Request of the agents/id:put operation
 * @export
 * @interface AgentUpdateRequest
 */
export interface AgentUpdateRequest {
    /**
     *
     * @type {AgentUpdateRequestAgent}
     * @memberof AgentUpdateRequest
     */
    'agent'?: AgentUpdateRequestAgent;
}
/**
 *
 * @export
 * @interface AgentUpdateRequestAgent
 */
export interface AgentUpdateRequestAgent {
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof AgentUpdateRequestAgent
     */
    'admin_state_up'?: AddressScopesCreateRequestAddressScopeShared;
    /**
     *
     * @type {string}
     * @memberof AgentUpdateRequestAgent
     */
    'description'?: string | null;
}
/**
 * Response of the agents/id:put operation
 * @export
 * @interface AgentUpdateResponse
 */
export interface AgentUpdateResponse {
    /**
     *
     * @type {AgentsCreateResponseAgent}
     * @memberof AgentUpdateResponse
     */
    'agent'?: AgentsCreateResponseAgent;
}
/**
 * Request of the agents:post operation
 * @export
 * @interface AgentsCreateRequest
 */
export interface AgentsCreateRequest {
    /**
     *
     * @type {object}
     * @memberof AgentsCreateRequest
     */
    'agent'?: object;
}
/**
 * Response of the agents:post operation
 * @export
 * @interface AgentsCreateResponse
 */
export interface AgentsCreateResponse {
    /**
     *
     * @type {AgentsCreateResponseAgent}
     * @memberof AgentsCreateResponse
     */
    'agent'?: AgentsCreateResponseAgent;
}
/**
 *
 * @export
 * @interface AgentsCreateResponseAgent
 */
export interface AgentsCreateResponseAgent {
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'agent_type'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'binary'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'topic'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'host'?: string;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof AgentsCreateResponseAgent
     */
    'admin_state_up'?: AddressScopesCreateRequestAddressScopeShared;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'created_at'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'started_at'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'heartbeat_timestamp'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'alive'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'configurations'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'resources_synced'?: string;
    /**
     *
     * @type {string}
     * @memberof AgentsCreateResponseAgent
     */
    'availability_zone'?: string;
}
/**
 * Response of the agents:get operation
 * @export
 * @interface AgentsIndexResponse
 */
export interface AgentsIndexResponse {
    /**
     *
     * @type {Array<AgentsCreateResponseAgent>}
     * @memberof AgentsIndexResponse
     */
    'agents'?: Array<AgentsCreateResponseAgent>;
}
/**
 *
 * @export
 * @interface AgentsL3RoutersCreateRequest
 */
export interface AgentsL3RoutersCreateRequest {
    /**
     * The ID of the router.
     * @type {any}
     * @memberof AgentsL3RoutersCreateRequest
     */
    'router_id'?: any;
}
/**
 *
 * @export
 * @interface AgentsL3RoutersIndexResponse
 */
export interface AgentsL3RoutersIndexResponse {
    /**
     * A list of router objects.
     * @type {any}
     * @memberof AgentsL3RoutersIndexResponse
     */
    'routers'?: any;
}
/**
 * Request of the auto-allocated-topology:post operation
 * @export
 * @interface AutoAllocatedTopologyCreateRequest
 */
export interface AutoAllocatedTopologyCreateRequest {
    /**
     *
     * @type {object}
     * @memberof AutoAllocatedTopologyCreateRequest
     */
    'auto_allocated_topology'?: object;
}
/**
 * Response of the auto-allocated-topology:post operation
 * @export
 * @interface AutoAllocatedTopologyCreateResponse
 */
export interface AutoAllocatedTopologyCreateResponse {
    /**
     *
     * @type {AutoAllocatedTopologyCreateResponseAutoAllocatedTopology}
     * @memberof AutoAllocatedTopologyCreateResponse
     */
    'auto_allocated_topology'?: AutoAllocatedTopologyCreateResponseAutoAllocatedTopology;
}
/**
 *
 * @export
 * @interface AutoAllocatedTopologyCreateResponseAutoAllocatedTopology
 */
export interface AutoAllocatedTopologyCreateResponseAutoAllocatedTopology {
    /**
     *
     * @type {string}
     * @memberof AutoAllocatedTopologyCreateResponseAutoAllocatedTopology
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof AutoAllocatedTopologyCreateResponseAutoAllocatedTopology
     */
    'tenant_id'?: string;
}
/**
 * Response of the auto-allocated-topology:get operation
 * @export
 * @interface AutoAllocatedTopologyIndexResponse
 */
export interface AutoAllocatedTopologyIndexResponse {
    /**
     *
     * @type {Array<AutoAllocatedTopologyCreateResponseAutoAllocatedTopology>}
     * @memberof AutoAllocatedTopologyIndexResponse
     */
    'auto_allocated_topologies'?: Array<AutoAllocatedTopologyCreateResponseAutoAllocatedTopology>;
}
/**
 * Response of the auto-allocated-topology/id:get operation
 * @export
 * @interface AutoAllocatedTopologyShowResponse
 */
export interface AutoAllocatedTopologyShowResponse {
    /**
     *
     * @type {AutoAllocatedTopologyCreateResponseAutoAllocatedTopology}
     * @memberof AutoAllocatedTopologyShowResponse
     */
    'auto_allocated_topology'?: AutoAllocatedTopologyCreateResponseAutoAllocatedTopology;
}
/**
 * Request of the auto-allocated-topology/id:put operation
 * @export
 * @interface AutoAllocatedTopologyUpdateRequest
 */
export interface AutoAllocatedTopologyUpdateRequest {
    /**
     *
     * @type {object}
     * @memberof AutoAllocatedTopologyUpdateRequest
     */
    'auto_allocated_topology'?: object;
}
/**
 * Response of the auto-allocated-topology/id:put operation
 * @export
 * @interface AutoAllocatedTopologyUpdateResponse
 */
export interface AutoAllocatedTopologyUpdateResponse {
    /**
     *
     * @type {AutoAllocatedTopologyCreateResponseAutoAllocatedTopology}
     * @memberof AutoAllocatedTopologyUpdateResponse
     */
    'auto_allocated_topology'?: AutoAllocatedTopologyCreateResponseAutoAllocatedTopology;
}
/**
 * Response of the availability_zones:get operation
 * @export
 * @interface AvailabilityZonesIndexResponse
 */
export interface AvailabilityZonesIndexResponse {
    /**
     *
     * @type {Array<AvailabilityZonesIndexResponseAvailabilityZonesInner>}
     * @memberof AvailabilityZonesIndexResponse
     */
    'availability_zones'?: Array<AvailabilityZonesIndexResponseAvailabilityZonesInner>;
}
/**
 *
 * @export
 * @interface AvailabilityZonesIndexResponseAvailabilityZonesInner
 */
export interface AvailabilityZonesIndexResponseAvailabilityZonesInner {
    /**
     *
     * @type {string}
     * @memberof AvailabilityZonesIndexResponseAvailabilityZonesInner
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityZonesIndexResponseAvailabilityZonesInner
     */
    'resource'?: string;
    /**
     *
     * @type {string}
     * @memberof AvailabilityZonesIndexResponseAvailabilityZonesInner
     */
    'state'?: string;
}
/**
 * Response of the default-security-group-rules/id:get operation
 * @export
 * @interface DefaultSecurityGroupRuleShowResponse
 */
export interface DefaultSecurityGroupRuleShowResponse {
    /**
     *
     * @type {DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule}
     * @memberof DefaultSecurityGroupRuleShowResponse
     */
    'default_security_group_rule'?: DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule;
}
/**
 * Request of the default-security-group-rules/id:put operation
 * @export
 * @interface DefaultSecurityGroupRuleUpdateRequest
 */
export interface DefaultSecurityGroupRuleUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRuleUpdateRequest
     */
    'default_security_group_rule'?: any;
}
/**
 * Response of the default-security-group-rules/id:put operation
 * @export
 * @interface DefaultSecurityGroupRuleUpdateResponse
 */
export interface DefaultSecurityGroupRuleUpdateResponse {
    /**
     *
     * @type {DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule}
     * @memberof DefaultSecurityGroupRuleUpdateResponse
     */
    'default_security_group_rule'?: DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule;
}
/**
 * Request of the default-security-group-rules:post operation
 * @export
 * @interface DefaultSecurityGroupRulesCreateRequest
 */
export interface DefaultSecurityGroupRulesCreateRequest {
    /**
     *
     * @type {DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule}
     * @memberof DefaultSecurityGroupRulesCreateRequest
     */
    'default_security_group_rule'?: DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule;
}
/**
 *
 * @export
 * @interface DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
 */
export interface DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule {
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'remote_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'remote_address_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'direction'?: DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'protocol'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'port_range_min'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'port_range_max'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'ethertype'?: DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleEthertypeEnum;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'remote_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'used_in_default_sg'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRule
     */
    'used_in_non_default_sg'?: any;
}
export declare const DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleDirectionEnum = typeof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleDirectionEnum[keyof typeof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleDirectionEnum];
export declare const DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleEthertypeEnum: {
    readonly Ipv4: "IPv4";
    readonly Ipv6: "IPv6";
};
export type DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleEthertypeEnum = typeof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleEthertypeEnum[keyof typeof DefaultSecurityGroupRulesCreateRequestDefaultSecurityGroupRuleEthertypeEnum];
/**
 * Response of the default-security-group-rules:post operation
 * @export
 * @interface DefaultSecurityGroupRulesCreateResponse
 */
export interface DefaultSecurityGroupRulesCreateResponse {
    /**
     *
     * @type {DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule}
     * @memberof DefaultSecurityGroupRulesCreateResponse
     */
    'default_security_group_rule'?: DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule;
}
/**
 *
 * @export
 * @interface DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
 */
export interface DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule {
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'remote_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'remote_address_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'direction'?: DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'protocol'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'port_range_min'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'port_range_max'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'ethertype'?: DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleEthertypeEnum;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'remote_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'used_in_default_sg'?: any;
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRule
     */
    'used_in_non_default_sg'?: any;
}
export declare const DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleDirectionEnum = typeof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleDirectionEnum[keyof typeof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleDirectionEnum];
export declare const DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleEthertypeEnum: {
    readonly Ipv4: "IPv4";
    readonly Ipv6: "IPv6";
};
export type DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleEthertypeEnum = typeof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleEthertypeEnum[keyof typeof DefaultSecurityGroupRulesCreateResponseDefaultSecurityGroupRuleEthertypeEnum];
/**
 * Response of the default-security-group-rules:get operation
 * @export
 * @interface DefaultSecurityGroupRulesIndexResponse
 */
export interface DefaultSecurityGroupRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof DefaultSecurityGroupRulesIndexResponse
     */
    'default_security_group_rules'?: any;
}
/**
 * Response of the extensions/id:get operation
 * @export
 * @interface ExtensionShowResponse
 */
export interface ExtensionShowResponse {
    /**
     *
     * @type {ExtensionsIndexResponseExtensionsInner}
     * @memberof ExtensionShowResponse
     */
    'extension'?: ExtensionsIndexResponseExtensionsInner;
}
/**
 * Response of the extensions:get operation
 * @export
 * @interface ExtensionsIndexResponse
 */
export interface ExtensionsIndexResponse {
    /**
     *
     * @type {Array<ExtensionsIndexResponseExtensionsInner>}
     * @memberof ExtensionsIndexResponse
     */
    'extensions'?: Array<ExtensionsIndexResponseExtensionsInner>;
}
/**
 *
 * @export
 * @interface ExtensionsIndexResponseExtensionsInner
 */
export interface ExtensionsIndexResponseExtensionsInner {
    /**
     * A short name by which this extension is also known.
     * @type {string}
     * @memberof ExtensionsIndexResponseExtensionsInner
     */
    'alias'?: string;
    /**
     * Text describing this extension’s purpose.
     * @type {string}
     * @memberof ExtensionsIndexResponseExtensionsInner
     */
    'description'?: string;
    /**
     * Name of the extension.
     * @type {string}
     * @memberof ExtensionsIndexResponseExtensionsInner
     */
    'name'?: string;
    /**
     * A URL pointing to the namespace for this extension.
     * @type {string}
     * @memberof ExtensionsIndexResponseExtensionsInner
     */
    'namespace'?: string;
    /**
     * The date and time when the resource was updated.
     * @type {string}
     * @memberof ExtensionsIndexResponseExtensionsInner
     */
    'updated'?: string;
}
/**
 * Response of the flavors/id:get operation
 * @export
 * @interface FlavorShowResponse
 */
export interface FlavorShowResponse {
    /**
     *
     * @type {FlavorsCreateResponseFlavor}
     * @memberof FlavorShowResponse
     */
    'flavor'?: FlavorsCreateResponseFlavor;
}
/**
 * Request of the flavors/id:put operation
 * @export
 * @interface FlavorUpdateRequest
 */
export interface FlavorUpdateRequest {
    /**
     *
     * @type {FlavorUpdateRequestFlavor}
     * @memberof FlavorUpdateRequest
     */
    'flavor'?: FlavorUpdateRequestFlavor;
}
/**
 *
 * @export
 * @interface FlavorUpdateRequestFlavor
 */
export interface FlavorUpdateRequestFlavor {
    /**
     *
     * @type {any}
     * @memberof FlavorUpdateRequestFlavor
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorUpdateRequestFlavor
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorUpdateRequestFlavor
     */
    'service_profiles'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorUpdateRequestFlavor
     */
    'enabled'?: any;
}
/**
 * Response of the flavors/id:put operation
 * @export
 * @interface FlavorUpdateResponse
 */
export interface FlavorUpdateResponse {
    /**
     *
     * @type {FlavorsCreateResponseFlavor}
     * @memberof FlavorUpdateResponse
     */
    'flavor'?: FlavorsCreateResponseFlavor;
}
/**
 * Request of the flavors:post operation
 * @export
 * @interface FlavorsCreateRequest
 */
export interface FlavorsCreateRequest {
    /**
     *
     * @type {FlavorsCreateRequestFlavor}
     * @memberof FlavorsCreateRequest
     */
    'flavor'?: FlavorsCreateRequestFlavor;
}
/**
 *
 * @export
 * @interface FlavorsCreateRequestFlavor
 */
export interface FlavorsCreateRequestFlavor {
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateRequestFlavor
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateRequestFlavor
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateRequestFlavor
     */
    'service_type'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateRequestFlavor
     */
    'service_profiles'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateRequestFlavor
     */
    'enabled'?: any;
}
/**
 * Response of the flavors:post operation
 * @export
 * @interface FlavorsCreateResponse
 */
export interface FlavorsCreateResponse {
    /**
     *
     * @type {FlavorsCreateResponseFlavor}
     * @memberof FlavorsCreateResponse
     */
    'flavor'?: FlavorsCreateResponseFlavor;
}
/**
 *
 * @export
 * @interface FlavorsCreateResponseFlavor
 */
export interface FlavorsCreateResponseFlavor {
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateResponseFlavor
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateResponseFlavor
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateResponseFlavor
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateResponseFlavor
     */
    'service_type'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateResponseFlavor
     */
    'service_profiles'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsCreateResponseFlavor
     */
    'enabled'?: any;
}
/**
 * Response of the flavors:get operation
 * @export
 * @interface FlavorsIndexResponse
 */
export interface FlavorsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FlavorsIndexResponse
     */
    'flavors'?: any;
}
/**
 * Response of the flavors/flavor_id/next_providers/id:get operation
 * @export
 * @interface FlavorsNextProviderShowResponse
 */
export interface FlavorsNextProviderShowResponse {
    /**
     *
     * @type {FlavorsNextProvidersCreateResponseNextProvider}
     * @memberof FlavorsNextProviderShowResponse
     */
    'next_provider'?: FlavorsNextProvidersCreateResponseNextProvider;
}
/**
 * Request of the flavors/flavor_id/next_providers/id:put operation
 * @export
 * @interface FlavorsNextProviderUpdateRequest
 */
export interface FlavorsNextProviderUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof FlavorsNextProviderUpdateRequest
     */
    'next_provider'?: any;
}
/**
 * Response of the flavors/flavor_id/next_providers/id:put operation
 * @export
 * @interface FlavorsNextProviderUpdateResponse
 */
export interface FlavorsNextProviderUpdateResponse {
    /**
     *
     * @type {FlavorsNextProvidersCreateResponseNextProvider}
     * @memberof FlavorsNextProviderUpdateResponse
     */
    'next_provider'?: FlavorsNextProvidersCreateResponseNextProvider;
}
/**
 * Request of the flavors/flavor_id/next_providers:post operation
 * @export
 * @interface FlavorsNextProvidersCreateRequest
 */
export interface FlavorsNextProvidersCreateRequest {
    /**
     *
     * @type {any}
     * @memberof FlavorsNextProvidersCreateRequest
     */
    'next_provider'?: any;
}
/**
 * Response of the flavors/flavor_id/next_providers:post operation
 * @export
 * @interface FlavorsNextProvidersCreateResponse
 */
export interface FlavorsNextProvidersCreateResponse {
    /**
     *
     * @type {FlavorsNextProvidersCreateResponseNextProvider}
     * @memberof FlavorsNextProvidersCreateResponse
     */
    'next_provider'?: FlavorsNextProvidersCreateResponseNextProvider;
}
/**
 *
 * @export
 * @interface FlavorsNextProvidersCreateResponseNextProvider
 */
export interface FlavorsNextProvidersCreateResponseNextProvider {
    /**
     *
     * @type {any}
     * @memberof FlavorsNextProvidersCreateResponseNextProvider
     */
    'provider'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsNextProvidersCreateResponseNextProvider
     */
    'driver'?: any;
    /**
     *
     * @type {any}
     * @memberof FlavorsNextProvidersCreateResponseNextProvider
     */
    'metainfo'?: any;
}
/**
 * Response of the flavors/flavor_id/next_providers:get operation
 * @export
 * @interface FlavorsNextProvidersIndexResponse
 */
export interface FlavorsNextProvidersIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FlavorsNextProvidersIndexResponse
     */
    'next_providers'?: any;
}
/**
 * Response of the flavors/flavor_id/service_profiles/id:get operation
 * @export
 * @interface FlavorsServiceProfileShowResponse
 */
export interface FlavorsServiceProfileShowResponse {
    /**
     *
     * @type {FlavorsServiceProfilesCreateRequestServiceProfile}
     * @memberof FlavorsServiceProfileShowResponse
     */
    'service_profile'?: FlavorsServiceProfilesCreateRequestServiceProfile;
}
/**
 * Request of the flavors/flavor_id/service_profiles/id:put operation
 * @export
 * @interface FlavorsServiceProfileUpdateRequest
 */
export interface FlavorsServiceProfileUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof FlavorsServiceProfileUpdateRequest
     */
    'service_profile'?: any;
}
/**
 * Response of the flavors/flavor_id/service_profiles/id:put operation
 * @export
 * @interface FlavorsServiceProfileUpdateResponse
 */
export interface FlavorsServiceProfileUpdateResponse {
    /**
     *
     * @type {FlavorsServiceProfilesCreateRequestServiceProfile}
     * @memberof FlavorsServiceProfileUpdateResponse
     */
    'service_profile'?: FlavorsServiceProfilesCreateRequestServiceProfile;
}
/**
 * Request of the flavors/flavor_id/service_profiles:post operation
 * @export
 * @interface FlavorsServiceProfilesCreateRequest
 */
export interface FlavorsServiceProfilesCreateRequest {
    /**
     *
     * @type {FlavorsServiceProfilesCreateRequestServiceProfile}
     * @memberof FlavorsServiceProfilesCreateRequest
     */
    'service_profile'?: FlavorsServiceProfilesCreateRequestServiceProfile;
}
/**
 *
 * @export
 * @interface FlavorsServiceProfilesCreateRequestServiceProfile
 */
export interface FlavorsServiceProfilesCreateRequestServiceProfile {
    /**
     *
     * @type {any}
     * @memberof FlavorsServiceProfilesCreateRequestServiceProfile
     */
    'id'?: any;
}
/**
 * Response of the flavors/flavor_id/service_profiles:post operation
 * @export
 * @interface FlavorsServiceProfilesCreateResponse
 */
export interface FlavorsServiceProfilesCreateResponse {
    /**
     *
     * @type {FlavorsServiceProfilesCreateRequestServiceProfile}
     * @memberof FlavorsServiceProfilesCreateResponse
     */
    'service_profile'?: FlavorsServiceProfilesCreateRequestServiceProfile;
}
/**
 * Response of the flavors/flavor_id/service_profiles:get operation
 * @export
 * @interface FlavorsServiceProfilesIndexResponse
 */
export interface FlavorsServiceProfilesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FlavorsServiceProfilesIndexResponse
     */
    'service_profiles'?: any;
}
/**
 * Response of the floatingip-pools/id:get operation
 * @export
 * @interface FloatingipPoolShowResponse
 */
export interface FloatingipPoolShowResponse {
    /**
     *
     * @type {FloatingipPoolsCreateResponseFloatingipPool}
     * @memberof FloatingipPoolShowResponse
     */
    'floatingip_pool'?: FloatingipPoolsCreateResponseFloatingipPool;
}
/**
 * Request of the floatingip-pools/id:put operation
 * @export
 * @interface FloatingipPoolUpdateRequest
 */
export interface FloatingipPoolUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolUpdateRequest
     */
    'floatingip_pool'?: any;
}
/**
 * Response of the floatingip-pools/id:put operation
 * @export
 * @interface FloatingipPoolUpdateResponse
 */
export interface FloatingipPoolUpdateResponse {
    /**
     *
     * @type {FloatingipPoolsCreateResponseFloatingipPool}
     * @memberof FloatingipPoolUpdateResponse
     */
    'floatingip_pool'?: FloatingipPoolsCreateResponseFloatingipPool;
}
/**
 * Request of the floatingip-pools:post operation
 * @export
 * @interface FloatingipPoolsCreateRequest
 */
export interface FloatingipPoolsCreateRequest {
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsCreateRequest
     */
    'floatingip_pool'?: any;
}
/**
 * Response of the floatingip-pools:post operation
 * @export
 * @interface FloatingipPoolsCreateResponse
 */
export interface FloatingipPoolsCreateResponse {
    /**
     *
     * @type {FloatingipPoolsCreateResponseFloatingipPool}
     * @memberof FloatingipPoolsCreateResponse
     */
    'floatingip_pool'?: FloatingipPoolsCreateResponseFloatingipPool;
}
/**
 *
 * @export
 * @interface FloatingipPoolsCreateResponseFloatingipPool
 */
export interface FloatingipPoolsCreateResponseFloatingipPool {
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsCreateResponseFloatingipPool
     */
    'subnet_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsCreateResponseFloatingipPool
     */
    'subnet_name'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsCreateResponseFloatingipPool
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsCreateResponseFloatingipPool
     */
    'cidr'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsCreateResponseFloatingipPool
     */
    'project_id'?: any;
}
/**
 * Response of the floatingip-pools:get operation
 * @export
 * @interface FloatingipPoolsIndexResponse
 */
export interface FloatingipPoolsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FloatingipPoolsIndexResponse
     */
    'floatingip_pools'?: any;
}
/**
 * Response of the floatingips/id:get operation
 * @export
 * @interface FloatingipShowResponse
 */
export interface FloatingipShowResponse {
    /**
     *
     * @type {FloatingipsCreateResponseFloatingip}
     * @memberof FloatingipShowResponse
     */
    'floatingip'?: FloatingipsCreateResponseFloatingip;
}
/**
 * Request of the floatingips/id:put operation
 * @export
 * @interface FloatingipUpdateRequest
 */
export interface FloatingipUpdateRequest {
    /**
     *
     * @type {FloatingipUpdateRequestFloatingip}
     * @memberof FloatingipUpdateRequest
     */
    'floatingip'?: FloatingipUpdateRequestFloatingip;
}
/**
 *
 * @export
 * @interface FloatingipUpdateRequestFloatingip
 */
export interface FloatingipUpdateRequestFloatingip {
    /**
     *
     * @type {any}
     * @memberof FloatingipUpdateRequestFloatingip
     */
    'port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipUpdateRequestFloatingip
     */
    'fixed_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipUpdateRequestFloatingip
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipUpdateRequestFloatingip
     */
    'description'?: any;
}
/**
 * Response of the floatingips/id:put operation
 * @export
 * @interface FloatingipUpdateResponse
 */
export interface FloatingipUpdateResponse {
    /**
     *
     * @type {FloatingipsCreateResponseFloatingip}
     * @memberof FloatingipUpdateResponse
     */
    'floatingip'?: FloatingipsCreateResponseFloatingip;
}
/**
 * Request of the floatingips:post operation
 * @export
 * @interface FloatingipsCreateRequest
 */
export interface FloatingipsCreateRequest {
    /**
     *
     * @type {FloatingipsCreateRequestFloatingip}
     * @memberof FloatingipsCreateRequest
     */
    'floatingip'?: FloatingipsCreateRequestFloatingip;
}
/**
 *
 * @export
 * @interface FloatingipsCreateRequestFloatingip
 */
export interface FloatingipsCreateRequestFloatingip {
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'floating_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'subnet_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'floating_network_id': any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'fixed_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'dns_name'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateRequestFloatingip
     */
    'description'?: any;
}
/**
 * Response of the floatingips:post operation
 * @export
 * @interface FloatingipsCreateResponse
 */
export interface FloatingipsCreateResponse {
    /**
     *
     * @type {FloatingipsCreateResponseFloatingip}
     * @memberof FloatingipsCreateResponse
     */
    'floatingip'?: FloatingipsCreateResponseFloatingip;
}
/**
 *
 * @export
 * @interface FloatingipsCreateResponseFloatingip
 */
export interface FloatingipsCreateResponseFloatingip {
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'floating_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'floating_network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'router_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'fixed_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'status'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'dns_name'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'port_details'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'port_forwardings'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsCreateResponseFloatingip
     */
    'description'?: any;
}
/**
 * Response of the floatingips:get operation
 * @export
 * @interface FloatingipsIndexResponse
 */
export interface FloatingipsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FloatingipsIndexResponse
     */
    'floatingips'?: any;
}
/**
 * Response of the floatingips/floatingip_id/port_forwardings/id:get operation
 * @export
 * @interface FloatingipsPortForwardingShowResponse
 */
export interface FloatingipsPortForwardingShowResponse {
    /**
     *
     * @type {FloatingipsPortForwardingsCreateResponsePortForwarding}
     * @memberof FloatingipsPortForwardingShowResponse
     */
    'port_forwarding'?: FloatingipsPortForwardingsCreateResponsePortForwarding;
}
/**
 * Request of the floatingips/floatingip_id/port_forwardings/id:put operation
 * @export
 * @interface FloatingipsPortForwardingUpdateRequest
 */
export interface FloatingipsPortForwardingUpdateRequest {
    /**
     *
     * @type {FloatingipsPortForwardingUpdateRequestPortForwarding}
     * @memberof FloatingipsPortForwardingUpdateRequest
     */
    'port_forwarding'?: FloatingipsPortForwardingUpdateRequestPortForwarding;
}
/**
 *
 * @export
 * @interface FloatingipsPortForwardingUpdateRequestPortForwarding
 */
export interface FloatingipsPortForwardingUpdateRequestPortForwarding {
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'external_port'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'internal_port'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'internal_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'protocol'?: FloatingipsPortForwardingUpdateRequestPortForwardingProtocolEnum;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'internal_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'external_port_range'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingUpdateRequestPortForwarding
     */
    'internal_port_range'?: any;
}
export declare const FloatingipsPortForwardingUpdateRequestPortForwardingProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type FloatingipsPortForwardingUpdateRequestPortForwardingProtocolEnum = typeof FloatingipsPortForwardingUpdateRequestPortForwardingProtocolEnum[keyof typeof FloatingipsPortForwardingUpdateRequestPortForwardingProtocolEnum];
/**
 * Response of the floatingips/floatingip_id/port_forwardings/id:put operation
 * @export
 * @interface FloatingipsPortForwardingUpdateResponse
 */
export interface FloatingipsPortForwardingUpdateResponse {
    /**
     *
     * @type {FloatingipsPortForwardingsCreateResponsePortForwarding}
     * @memberof FloatingipsPortForwardingUpdateResponse
     */
    'port_forwarding'?: FloatingipsPortForwardingsCreateResponsePortForwarding;
}
/**
 * Request of the floatingips/floatingip_id/port_forwardings:post operation
 * @export
 * @interface FloatingipsPortForwardingsCreateRequest
 */
export interface FloatingipsPortForwardingsCreateRequest {
    /**
     *
     * @type {FloatingipsPortForwardingsCreateRequestPortForwarding}
     * @memberof FloatingipsPortForwardingsCreateRequest
     */
    'port_forwarding'?: FloatingipsPortForwardingsCreateRequestPortForwarding;
}
/**
 *
 * @export
 * @interface FloatingipsPortForwardingsCreateRequestPortForwarding
 */
export interface FloatingipsPortForwardingsCreateRequestPortForwarding {
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'external_port'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'internal_port'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'internal_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'protocol'?: FloatingipsPortForwardingsCreateRequestPortForwardingProtocolEnum;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'internal_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'external_port_range'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateRequestPortForwarding
     */
    'internal_port_range'?: any;
}
export declare const FloatingipsPortForwardingsCreateRequestPortForwardingProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type FloatingipsPortForwardingsCreateRequestPortForwardingProtocolEnum = typeof FloatingipsPortForwardingsCreateRequestPortForwardingProtocolEnum[keyof typeof FloatingipsPortForwardingsCreateRequestPortForwardingProtocolEnum];
/**
 * Response of the floatingips/floatingip_id/port_forwardings:post operation
 * @export
 * @interface FloatingipsPortForwardingsCreateResponse
 */
export interface FloatingipsPortForwardingsCreateResponse {
    /**
     *
     * @type {FloatingipsPortForwardingsCreateResponsePortForwarding}
     * @memberof FloatingipsPortForwardingsCreateResponse
     */
    'port_forwarding'?: FloatingipsPortForwardingsCreateResponsePortForwarding;
}
/**
 *
 * @export
 * @interface FloatingipsPortForwardingsCreateResponsePortForwarding
 */
export interface FloatingipsPortForwardingsCreateResponsePortForwarding {
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'external_port'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'internal_port'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'internal_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'protocol'?: FloatingipsPortForwardingsCreateResponsePortForwardingProtocolEnum;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'internal_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'external_port_range'?: any;
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsCreateResponsePortForwarding
     */
    'internal_port_range'?: any;
}
export declare const FloatingipsPortForwardingsCreateResponsePortForwardingProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type FloatingipsPortForwardingsCreateResponsePortForwardingProtocolEnum = typeof FloatingipsPortForwardingsCreateResponsePortForwardingProtocolEnum[keyof typeof FloatingipsPortForwardingsCreateResponsePortForwardingProtocolEnum];
/**
 * Response of the floatingips/floatingip_id/port_forwardings:get operation
 * @export
 * @interface FloatingipsPortForwardingsIndexResponse
 */
export interface FloatingipsPortForwardingsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FloatingipsPortForwardingsIndexResponse
     */
    'port_forwardings'?: any;
}
/**
 * Response of the floatingips/floatingip_id/tags:get operation
 * @export
 * @interface FloatingipsTagsIndexResponse
 */
export interface FloatingipsTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof FloatingipsTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the floatingips/floatingip_id/tags:put operation
 * @export
 * @interface FloatingipsTagsUpdateAllRequest
 */
export interface FloatingipsTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof FloatingipsTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the floatingips/floatingip_id/tags:put operation
 * @export
 * @interface FloatingipsTagsUpdateAllResponse
 */
export interface FloatingipsTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof FloatingipsTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the local-ips/id:get operation
 * @export
 * @interface LocalIpShowResponse
 */
export interface LocalIpShowResponse {
    /**
     *
     * @type {LocalIpsCreateResponseLocalIp}
     * @memberof LocalIpShowResponse
     */
    'local_ip'?: LocalIpsCreateResponseLocalIp;
}
/**
 * Request of the local-ips/id:put operation
 * @export
 * @interface LocalIpUpdateRequest
 */
export interface LocalIpUpdateRequest {
    /**
     *
     * @type {NdpProxyUpdateRequestNdpProxy}
     * @memberof LocalIpUpdateRequest
     */
    'local_ip'?: NdpProxyUpdateRequestNdpProxy;
}
/**
 * Response of the local-ips/id:put operation
 * @export
 * @interface LocalIpUpdateResponse
 */
export interface LocalIpUpdateResponse {
    /**
     *
     * @type {LocalIpsCreateResponseLocalIp}
     * @memberof LocalIpUpdateResponse
     */
    'local_ip'?: LocalIpsCreateResponseLocalIp;
}
/**
 * Request of the local-ips:post operation
 * @export
 * @interface LocalIpsCreateRequest
 */
export interface LocalIpsCreateRequest {
    /**
     *
     * @type {LocalIpsCreateRequestLocalIp}
     * @memberof LocalIpsCreateRequest
     */
    'local_ip'?: LocalIpsCreateRequestLocalIp;
}
/**
 *
 * @export
 * @interface LocalIpsCreateRequestLocalIp
 */
export interface LocalIpsCreateRequestLocalIp {
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'local_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'local_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateRequestLocalIp
     */
    'ip_mode'?: LocalIpsCreateRequestLocalIpIpModeEnum;
}
export declare const LocalIpsCreateRequestLocalIpIpModeEnum: {
    readonly Translate: "translate";
    readonly Passthrough: "passthrough";
};
export type LocalIpsCreateRequestLocalIpIpModeEnum = typeof LocalIpsCreateRequestLocalIpIpModeEnum[keyof typeof LocalIpsCreateRequestLocalIpIpModeEnum];
/**
 * Response of the local-ips:post operation
 * @export
 * @interface LocalIpsCreateResponse
 */
export interface LocalIpsCreateResponse {
    /**
     *
     * @type {LocalIpsCreateResponseLocalIp}
     * @memberof LocalIpsCreateResponse
     */
    'local_ip'?: LocalIpsCreateResponseLocalIp;
}
/**
 *
 * @export
 * @interface LocalIpsCreateResponseLocalIp
 */
export interface LocalIpsCreateResponseLocalIp {
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'local_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'local_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'ip_mode'?: LocalIpsCreateResponseLocalIpIpModeEnum;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsCreateResponseLocalIp
     */
    'updated_at'?: any;
}
export declare const LocalIpsCreateResponseLocalIpIpModeEnum: {
    readonly Translate: "translate";
    readonly Passthrough: "passthrough";
};
export type LocalIpsCreateResponseLocalIpIpModeEnum = typeof LocalIpsCreateResponseLocalIpIpModeEnum[keyof typeof LocalIpsCreateResponseLocalIpIpModeEnum];
/**
 * Response of the local-ips:get operation
 * @export
 * @interface LocalIpsIndexResponse
 */
export interface LocalIpsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof LocalIpsIndexResponse
     */
    'local_ips'?: any;
}
/**
 * Response of the local_ips/local_ip_id/port_associations/id:get operation
 * @export
 * @interface LocalIpsPortAssociationShowResponse
 */
export interface LocalIpsPortAssociationShowResponse {
    /**
     *
     * @type {LocalIpsPortAssociationsCreateResponsePortAssociation}
     * @memberof LocalIpsPortAssociationShowResponse
     */
    'port_association'?: LocalIpsPortAssociationsCreateResponsePortAssociation;
}
/**
 * Request of the local_ips/local_ip_id/port_associations/id:put operation
 * @export
 * @interface LocalIpsPortAssociationUpdateRequest
 */
export interface LocalIpsPortAssociationUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationUpdateRequest
     */
    'port_association'?: any;
}
/**
 * Response of the local_ips/local_ip_id/port_associations/id:put operation
 * @export
 * @interface LocalIpsPortAssociationUpdateResponse
 */
export interface LocalIpsPortAssociationUpdateResponse {
    /**
     *
     * @type {LocalIpsPortAssociationsCreateResponsePortAssociation}
     * @memberof LocalIpsPortAssociationUpdateResponse
     */
    'port_association'?: LocalIpsPortAssociationsCreateResponsePortAssociation;
}
/**
 * Request of the local_ips/local_ip_id/port_associations:post operation
 * @export
 * @interface LocalIpsPortAssociationsCreateRequest
 */
export interface LocalIpsPortAssociationsCreateRequest {
    /**
     *
     * @type {LocalIpsPortAssociationsCreateRequestPortAssociation}
     * @memberof LocalIpsPortAssociationsCreateRequest
     */
    'port_association'?: LocalIpsPortAssociationsCreateRequestPortAssociation;
}
/**
 *
 * @export
 * @interface LocalIpsPortAssociationsCreateRequestPortAssociation
 */
export interface LocalIpsPortAssociationsCreateRequestPortAssociation {
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateRequestPortAssociation
     */
    'fixed_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateRequestPortAssociation
     */
    'fixed_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateRequestPortAssociation
     */
    'project_id'?: any;
}
/**
 * Response of the local_ips/local_ip_id/port_associations:post operation
 * @export
 * @interface LocalIpsPortAssociationsCreateResponse
 */
export interface LocalIpsPortAssociationsCreateResponse {
    /**
     *
     * @type {LocalIpsPortAssociationsCreateResponsePortAssociation}
     * @memberof LocalIpsPortAssociationsCreateResponse
     */
    'port_association'?: LocalIpsPortAssociationsCreateResponsePortAssociation;
}
/**
 *
 * @export
 * @interface LocalIpsPortAssociationsCreateResponsePortAssociation
 */
export interface LocalIpsPortAssociationsCreateResponsePortAssociation {
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateResponsePortAssociation
     */
    'local_ip_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateResponsePortAssociation
     */
    'local_ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateResponsePortAssociation
     */
    'fixed_port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateResponsePortAssociation
     */
    'fixed_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsCreateResponsePortAssociation
     */
    'host'?: any;
}
/**
 * Response of the local_ips/local_ip_id/port_associations:get operation
 * @export
 * @interface LocalIpsPortAssociationsIndexResponse
 */
export interface LocalIpsPortAssociationsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof LocalIpsPortAssociationsIndexResponse
     */
    'port_associations'?: any;
}
/**
 * Response of the log/logs/id:get operation
 * @export
 * @interface LogLogShowResponse
 */
export interface LogLogShowResponse {
    /**
     *
     * @type {LogLogsCreateResponseLog}
     * @memberof LogLogShowResponse
     */
    'log'?: LogLogsCreateResponseLog;
}
/**
 * Request of the log/logs/id:put operation
 * @export
 * @interface LogLogUpdateRequest
 */
export interface LogLogUpdateRequest {
    /**
     *
     * @type {LogLogUpdateRequestLog}
     * @memberof LogLogUpdateRequest
     */
    'log'?: LogLogUpdateRequestLog;
}
/**
 *
 * @export
 * @interface LogLogUpdateRequestLog
 */
export interface LogLogUpdateRequestLog {
    /**
     *
     * @type {any}
     * @memberof LogLogUpdateRequestLog
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogUpdateRequestLog
     */
    'enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogUpdateRequestLog
     */
    'description'?: any;
}
/**
 * Response of the log/logs/id:put operation
 * @export
 * @interface LogLogUpdateResponse
 */
export interface LogLogUpdateResponse {
    /**
     *
     * @type {LogLogsCreateResponseLog}
     * @memberof LogLogUpdateResponse
     */
    'log'?: LogLogsCreateResponseLog;
}
/**
 * Response of the log/loggable-resources/id:get operation
 * @export
 * @interface LogLoggableResourceShowResponse
 */
export interface LogLoggableResourceShowResponse {
    /**
     *
     * @type {LogLoggableResourcesCreateResponseLoggableResource}
     * @memberof LogLoggableResourceShowResponse
     */
    'loggable_resource'?: LogLoggableResourcesCreateResponseLoggableResource;
}
/**
 * Request of the log/loggable-resources/id:put operation
 * @export
 * @interface LogLoggableResourceUpdateRequest
 */
export interface LogLoggableResourceUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof LogLoggableResourceUpdateRequest
     */
    'loggable_resource'?: any;
}
/**
 * Response of the log/loggable-resources/id:put operation
 * @export
 * @interface LogLoggableResourceUpdateResponse
 */
export interface LogLoggableResourceUpdateResponse {
    /**
     *
     * @type {LogLoggableResourcesCreateResponseLoggableResource}
     * @memberof LogLoggableResourceUpdateResponse
     */
    'loggable_resource'?: LogLoggableResourcesCreateResponseLoggableResource;
}
/**
 * Request of the log/loggable-resources:post operation
 * @export
 * @interface LogLoggableResourcesCreateRequest
 */
export interface LogLoggableResourcesCreateRequest {
    /**
     *
     * @type {any}
     * @memberof LogLoggableResourcesCreateRequest
     */
    'loggable_resource'?: any;
}
/**
 * Response of the log/loggable-resources:post operation
 * @export
 * @interface LogLoggableResourcesCreateResponse
 */
export interface LogLoggableResourcesCreateResponse {
    /**
     *
     * @type {LogLoggableResourcesCreateResponseLoggableResource}
     * @memberof LogLoggableResourcesCreateResponse
     */
    'loggable_resource'?: LogLoggableResourcesCreateResponseLoggableResource;
}
/**
 *
 * @export
 * @interface LogLoggableResourcesCreateResponseLoggableResource
 */
export interface LogLoggableResourcesCreateResponseLoggableResource {
    /**
     *
     * @type {any}
     * @memberof LogLoggableResourcesCreateResponseLoggableResource
     */
    'type'?: any;
}
/**
 * Response of the log/loggable-resources:get operation
 * @export
 * @interface LogLoggableResourcesIndexResponse
 */
export interface LogLoggableResourcesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof LogLoggableResourcesIndexResponse
     */
    'loggable_resources'?: any;
}
/**
 * Request of the log/logs:post operation
 * @export
 * @interface LogLogsCreateRequest
 */
export interface LogLogsCreateRequest {
    /**
     *
     * @type {LogLogsCreateRequestLog}
     * @memberof LogLogsCreateRequest
     */
    'log'?: LogLogsCreateRequestLog;
}
/**
 *
 * @export
 * @interface LogLogsCreateRequestLog
 */
export interface LogLogsCreateRequestLog {
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'resource_type'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'resource_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'event'?: LogLogsCreateRequestLogEventEnum;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'target_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateRequestLog
     */
    'description'?: any;
}
export declare const LogLogsCreateRequestLogEventEnum: {
    readonly Accept: "ACCEPT";
    readonly Drop: "DROP";
    readonly All: "ALL";
};
export type LogLogsCreateRequestLogEventEnum = typeof LogLogsCreateRequestLogEventEnum[keyof typeof LogLogsCreateRequestLogEventEnum];
/**
 * Response of the log/logs:post operation
 * @export
 * @interface LogLogsCreateResponse
 */
export interface LogLogsCreateResponse {
    /**
     *
     * @type {LogLogsCreateResponseLog}
     * @memberof LogLogsCreateResponse
     */
    'log'?: LogLogsCreateResponseLog;
}
/**
 *
 * @export
 * @interface LogLogsCreateResponseLog
 */
export interface LogLogsCreateResponseLog {
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'resource_type'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'resource_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'event'?: LogLogsCreateResponseLogEventEnum;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'target_id'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof LogLogsCreateResponseLog
     */
    'description'?: any;
}
export declare const LogLogsCreateResponseLogEventEnum: {
    readonly Accept: "ACCEPT";
    readonly Drop: "DROP";
    readonly All: "ALL";
};
export type LogLogsCreateResponseLogEventEnum = typeof LogLogsCreateResponseLogEventEnum[keyof typeof LogLogsCreateResponseLogEventEnum];
/**
 * Response of the log/logs:get operation
 * @export
 * @interface LogLogsIndexResponse
 */
export interface LogLogsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof LogLogsIndexResponse
     */
    'logs'?: any;
}
/**
 * Response of the metering/metering-label-rules/id:get operation
 * @export
 * @interface MeteringMeteringLabelRuleShowResponse
 */
export interface MeteringMeteringLabelRuleShowResponse {
    /**
     *
     * @type {MeteringMeteringLabelRulesCreateResponseMeteringLabelRule}
     * @memberof MeteringMeteringLabelRuleShowResponse
     */
    'metering_label_rule'?: MeteringMeteringLabelRulesCreateResponseMeteringLabelRule;
}
/**
 * Request of the metering/metering-label-rules/id:put operation
 * @export
 * @interface MeteringMeteringLabelRuleUpdateRequest
 */
export interface MeteringMeteringLabelRuleUpdateRequest {
    /**
     *
     * @type {MeteringMeteringLabelRuleUpdateRequestMeteringLabelRule}
     * @memberof MeteringMeteringLabelRuleUpdateRequest
     */
    'metering_label_rule'?: MeteringMeteringLabelRuleUpdateRequestMeteringLabelRule;
}
/**
 *
 * @export
 * @interface MeteringMeteringLabelRuleUpdateRequestMeteringLabelRule
 */
export interface MeteringMeteringLabelRuleUpdateRequestMeteringLabelRule {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRuleUpdateRequestMeteringLabelRule
     */
    'source_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRuleUpdateRequestMeteringLabelRule
     */
    'destination_ip_prefix'?: any;
}
/**
 * Response of the metering/metering-label-rules/id:put operation
 * @export
 * @interface MeteringMeteringLabelRuleUpdateResponse
 */
export interface MeteringMeteringLabelRuleUpdateResponse {
    /**
     *
     * @type {MeteringMeteringLabelRulesCreateResponseMeteringLabelRule}
     * @memberof MeteringMeteringLabelRuleUpdateResponse
     */
    'metering_label_rule'?: MeteringMeteringLabelRulesCreateResponseMeteringLabelRule;
}
/**
 * Request of the metering/metering-label-rules:post operation
 * @export
 * @interface MeteringMeteringLabelRulesCreateRequest
 */
export interface MeteringMeteringLabelRulesCreateRequest {
    /**
     *
     * @type {MeteringMeteringLabelRulesCreateRequestMeteringLabelRule}
     * @memberof MeteringMeteringLabelRulesCreateRequest
     */
    'metering_label_rule'?: MeteringMeteringLabelRulesCreateRequestMeteringLabelRule;
}
/**
 *
 * @export
 * @interface MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
 */
export interface MeteringMeteringLabelRulesCreateRequestMeteringLabelRule {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'metering_label_id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'direction'?: MeteringMeteringLabelRulesCreateRequestMeteringLabelRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'excluded'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'remote_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'source_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateRequestMeteringLabelRule
     */
    'destination_ip_prefix'?: any;
}
export declare const MeteringMeteringLabelRulesCreateRequestMeteringLabelRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type MeteringMeteringLabelRulesCreateRequestMeteringLabelRuleDirectionEnum = typeof MeteringMeteringLabelRulesCreateRequestMeteringLabelRuleDirectionEnum[keyof typeof MeteringMeteringLabelRulesCreateRequestMeteringLabelRuleDirectionEnum];
/**
 * Response of the metering/metering-label-rules:post operation
 * @export
 * @interface MeteringMeteringLabelRulesCreateResponse
 */
export interface MeteringMeteringLabelRulesCreateResponse {
    /**
     *
     * @type {MeteringMeteringLabelRulesCreateResponseMeteringLabelRule}
     * @memberof MeteringMeteringLabelRulesCreateResponse
     */
    'metering_label_rule'?: MeteringMeteringLabelRulesCreateResponseMeteringLabelRule;
}
/**
 *
 * @export
 * @interface MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
 */
export interface MeteringMeteringLabelRulesCreateResponseMeteringLabelRule {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'metering_label_id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'direction'?: MeteringMeteringLabelRulesCreateResponseMeteringLabelRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'excluded'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'remote_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'source_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesCreateResponseMeteringLabelRule
     */
    'destination_ip_prefix'?: any;
}
export declare const MeteringMeteringLabelRulesCreateResponseMeteringLabelRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type MeteringMeteringLabelRulesCreateResponseMeteringLabelRuleDirectionEnum = typeof MeteringMeteringLabelRulesCreateResponseMeteringLabelRuleDirectionEnum[keyof typeof MeteringMeteringLabelRulesCreateResponseMeteringLabelRuleDirectionEnum];
/**
 * Response of the metering/metering-label-rules:get operation
 * @export
 * @interface MeteringMeteringLabelRulesIndexResponse
 */
export interface MeteringMeteringLabelRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelRulesIndexResponse
     */
    'metering_label_rules'?: any;
}
/**
 * Response of the metering/metering-labels/id:get operation
 * @export
 * @interface MeteringMeteringLabelShowResponse
 */
export interface MeteringMeteringLabelShowResponse {
    /**
     *
     * @type {MeteringMeteringLabelsCreateResponseMeteringLabel}
     * @memberof MeteringMeteringLabelShowResponse
     */
    'metering_label'?: MeteringMeteringLabelsCreateResponseMeteringLabel;
}
/**
 * Request of the metering/metering-labels/id:put operation
 * @export
 * @interface MeteringMeteringLabelUpdateRequest
 */
export interface MeteringMeteringLabelUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelUpdateRequest
     */
    'metering_label'?: any;
}
/**
 * Response of the metering/metering-labels/id:put operation
 * @export
 * @interface MeteringMeteringLabelUpdateResponse
 */
export interface MeteringMeteringLabelUpdateResponse {
    /**
     *
     * @type {MeteringMeteringLabelsCreateResponseMeteringLabel}
     * @memberof MeteringMeteringLabelUpdateResponse
     */
    'metering_label'?: MeteringMeteringLabelsCreateResponseMeteringLabel;
}
/**
 * Request of the metering/metering-labels:post operation
 * @export
 * @interface MeteringMeteringLabelsCreateRequest
 */
export interface MeteringMeteringLabelsCreateRequest {
    /**
     *
     * @type {MeteringMeteringLabelsCreateRequestMeteringLabel}
     * @memberof MeteringMeteringLabelsCreateRequest
     */
    'metering_label'?: MeteringMeteringLabelsCreateRequestMeteringLabel;
}
/**
 *
 * @export
 * @interface MeteringMeteringLabelsCreateRequestMeteringLabel
 */
export interface MeteringMeteringLabelsCreateRequestMeteringLabel {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateRequestMeteringLabel
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateRequestMeteringLabel
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateRequestMeteringLabel
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateRequestMeteringLabel
     */
    'shared'?: any;
}
/**
 * Response of the metering/metering-labels:post operation
 * @export
 * @interface MeteringMeteringLabelsCreateResponse
 */
export interface MeteringMeteringLabelsCreateResponse {
    /**
     *
     * @type {MeteringMeteringLabelsCreateResponseMeteringLabel}
     * @memberof MeteringMeteringLabelsCreateResponse
     */
    'metering_label'?: MeteringMeteringLabelsCreateResponseMeteringLabel;
}
/**
 *
 * @export
 * @interface MeteringMeteringLabelsCreateResponseMeteringLabel
 */
export interface MeteringMeteringLabelsCreateResponseMeteringLabel {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateResponseMeteringLabel
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateResponseMeteringLabel
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateResponseMeteringLabel
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateResponseMeteringLabel
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsCreateResponseMeteringLabel
     */
    'shared'?: any;
}
/**
 * Response of the metering/metering-labels:get operation
 * @export
 * @interface MeteringMeteringLabelsIndexResponse
 */
export interface MeteringMeteringLabelsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof MeteringMeteringLabelsIndexResponse
     */
    'metering_labels'?: any;
}
/**
 * Request of the ndp-proxies:post operation
 * @export
 * @interface NdpProxiesCreateRequest
 */
export interface NdpProxiesCreateRequest {
    /**
     *
     * @type {NdpProxiesCreateRequestNdpProxy}
     * @memberof NdpProxiesCreateRequest
     */
    'ndp_proxy'?: NdpProxiesCreateRequestNdpProxy;
}
/**
 *
 * @export
 * @interface NdpProxiesCreateRequestNdpProxy
 */
export interface NdpProxiesCreateRequestNdpProxy {
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateRequestNdpProxy
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateRequestNdpProxy
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateRequestNdpProxy
     */
    'router_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateRequestNdpProxy
     */
    'port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateRequestNdpProxy
     */
    'ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateRequestNdpProxy
     */
    'description'?: any;
}
/**
 * Response of the ndp-proxies:post operation
 * @export
 * @interface NdpProxiesCreateResponse
 */
export interface NdpProxiesCreateResponse {
    /**
     *
     * @type {NdpProxiesCreateResponseNdpProxy}
     * @memberof NdpProxiesCreateResponse
     */
    'ndp_proxy'?: NdpProxiesCreateResponseNdpProxy;
}
/**
 *
 * @export
 * @interface NdpProxiesCreateResponseNdpProxy
 */
export interface NdpProxiesCreateResponseNdpProxy {
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'router_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'port_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'ip_address'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxiesCreateResponseNdpProxy
     */
    'updated_at'?: any;
}
/**
 * Response of the ndp-proxies:get operation
 * @export
 * @interface NdpProxiesIndexResponse
 */
export interface NdpProxiesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof NdpProxiesIndexResponse
     */
    'ndp_proxies'?: any;
}
/**
 * Response of the ndp-proxies/id:get operation
 * @export
 * @interface NdpProxyShowResponse
 */
export interface NdpProxyShowResponse {
    /**
     *
     * @type {NdpProxiesCreateResponseNdpProxy}
     * @memberof NdpProxyShowResponse
     */
    'ndp_proxy'?: NdpProxiesCreateResponseNdpProxy;
}
/**
 * Request of the ndp-proxies/id:put operation
 * @export
 * @interface NdpProxyUpdateRequest
 */
export interface NdpProxyUpdateRequest {
    /**
     *
     * @type {NdpProxyUpdateRequestNdpProxy}
     * @memberof NdpProxyUpdateRequest
     */
    'ndp_proxy'?: NdpProxyUpdateRequestNdpProxy;
}
/**
 *
 * @export
 * @interface NdpProxyUpdateRequestNdpProxy
 */
export interface NdpProxyUpdateRequestNdpProxy {
    /**
     *
     * @type {any}
     * @memberof NdpProxyUpdateRequestNdpProxy
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NdpProxyUpdateRequestNdpProxy
     */
    'description'?: any;
}
/**
 * Response of the ndp-proxies/id:put operation
 * @export
 * @interface NdpProxyUpdateResponse
 */
export interface NdpProxyUpdateResponse {
    /**
     *
     * @type {NdpProxiesCreateResponseNdpProxy}
     * @memberof NdpProxyUpdateResponse
     */
    'ndp_proxy'?: NdpProxiesCreateResponseNdpProxy;
}
/**
 * Request of the network-ip-availabilities:post operation
 * @export
 * @interface NetworkIpAvailabilitiesCreateRequest
 */
export interface NetworkIpAvailabilitiesCreateRequest {
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateRequest
     */
    'network_ip_availability'?: any;
}
/**
 * Response of the network-ip-availabilities:post operation
 * @export
 * @interface NetworkIpAvailabilitiesCreateResponse
 */
export interface NetworkIpAvailabilitiesCreateResponse {
    /**
     *
     * @type {NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability}
     * @memberof NetworkIpAvailabilitiesCreateResponse
     */
    'network_ip_availability'?: NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability;
}
/**
 *
 * @export
 * @interface NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
 */
export interface NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability {
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
     */
    'network_name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
     */
    'total_ips'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
     */
    'used_ips'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability
     */
    'subnet_ip_availability'?: any;
}
/**
 * Response of the network-ip-availabilities:get operation
 * @export
 * @interface NetworkIpAvailabilitiesIndexResponse
 */
export interface NetworkIpAvailabilitiesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilitiesIndexResponse
     */
    'network_ip_availabilities'?: any;
}
/**
 * Response of the network-ip-availabilities/id:get operation
 * @export
 * @interface NetworkIpAvailabilityShowResponse
 */
export interface NetworkIpAvailabilityShowResponse {
    /**
     *
     * @type {NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability}
     * @memberof NetworkIpAvailabilityShowResponse
     */
    'network_ip_availability'?: NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability;
}
/**
 * Request of the network-ip-availabilities/id:put operation
 * @export
 * @interface NetworkIpAvailabilityUpdateRequest
 */
export interface NetworkIpAvailabilityUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof NetworkIpAvailabilityUpdateRequest
     */
    'network_ip_availability'?: any;
}
/**
 * Response of the network-ip-availabilities/id:put operation
 * @export
 * @interface NetworkIpAvailabilityUpdateResponse
 */
export interface NetworkIpAvailabilityUpdateResponse {
    /**
     *
     * @type {NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability}
     * @memberof NetworkIpAvailabilityUpdateResponse
     */
    'network_ip_availability'?: NetworkIpAvailabilitiesCreateResponseNetworkIpAvailability;
}
/**
 * Response of the network-segment-ranges/id:get operation
 * @export
 * @interface NetworkSegmentRangeShowResponse
 */
export interface NetworkSegmentRangeShowResponse {
    /**
     *
     * @type {NetworkSegmentRangesCreateResponseNetworkSegmentRange}
     * @memberof NetworkSegmentRangeShowResponse
     */
    'network_segment_range'?: NetworkSegmentRangesCreateResponseNetworkSegmentRange;
}
/**
 * Request of the network-segment-ranges/id:put operation
 * @export
 * @interface NetworkSegmentRangeUpdateRequest
 */
export interface NetworkSegmentRangeUpdateRequest {
    /**
     *
     * @type {NetworkSegmentRangeUpdateRequestNetworkSegmentRange}
     * @memberof NetworkSegmentRangeUpdateRequest
     */
    'network_segment_range'?: NetworkSegmentRangeUpdateRequestNetworkSegmentRange;
}
/**
 *
 * @export
 * @interface NetworkSegmentRangeUpdateRequestNetworkSegmentRange
 */
export interface NetworkSegmentRangeUpdateRequestNetworkSegmentRange {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangeUpdateRequestNetworkSegmentRange
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangeUpdateRequestNetworkSegmentRange
     */
    'minimum'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangeUpdateRequestNetworkSegmentRange
     */
    'maximum'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangeUpdateRequestNetworkSegmentRange
     */
    'description'?: any;
}
/**
 * Response of the network-segment-ranges/id:put operation
 * @export
 * @interface NetworkSegmentRangeUpdateResponse
 */
export interface NetworkSegmentRangeUpdateResponse {
    /**
     *
     * @type {NetworkSegmentRangesCreateResponseNetworkSegmentRange}
     * @memberof NetworkSegmentRangeUpdateResponse
     */
    'network_segment_range'?: NetworkSegmentRangesCreateResponseNetworkSegmentRange;
}
/**
 * Request of the network-segment-ranges:post operation
 * @export
 * @interface NetworkSegmentRangesCreateRequest
 */
export interface NetworkSegmentRangesCreateRequest {
    /**
     *
     * @type {NetworkSegmentRangesCreateRequestNetworkSegmentRange}
     * @memberof NetworkSegmentRangesCreateRequest
     */
    'network_segment_range'?: NetworkSegmentRangesCreateRequestNetworkSegmentRange;
}
/**
 *
 * @export
 * @interface NetworkSegmentRangesCreateRequestNetworkSegmentRange
 */
export interface NetworkSegmentRangesCreateRequestNetworkSegmentRange {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'network_type'?: NetworkSegmentRangesCreateRequestNetworkSegmentRangeNetworkTypeEnum;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'minimum'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'maximum'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateRequestNetworkSegmentRange
     */
    'description'?: any;
}
export declare const NetworkSegmentRangesCreateRequestNetworkSegmentRangeNetworkTypeEnum: {
    readonly Vlan: "vlan";
    readonly Vxlan: "vxlan";
    readonly Gre: "gre";
    readonly Geneve: "geneve";
};
export type NetworkSegmentRangesCreateRequestNetworkSegmentRangeNetworkTypeEnum = typeof NetworkSegmentRangesCreateRequestNetworkSegmentRangeNetworkTypeEnum[keyof typeof NetworkSegmentRangesCreateRequestNetworkSegmentRangeNetworkTypeEnum];
/**
 * Response of the network-segment-ranges:post operation
 * @export
 * @interface NetworkSegmentRangesCreateResponse
 */
export interface NetworkSegmentRangesCreateResponse {
    /**
     *
     * @type {NetworkSegmentRangesCreateResponseNetworkSegmentRange}
     * @memberof NetworkSegmentRangesCreateResponse
     */
    'network_segment_range'?: NetworkSegmentRangesCreateResponseNetworkSegmentRange;
}
/**
 *
 * @export
 * @interface NetworkSegmentRangesCreateResponseNetworkSegmentRange
 */
export interface NetworkSegmentRangesCreateResponseNetworkSegmentRange {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'default'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'network_type'?: NetworkSegmentRangesCreateResponseNetworkSegmentRangeNetworkTypeEnum;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'minimum'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'maximum'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'used'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'available'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesCreateResponseNetworkSegmentRange
     */
    'description'?: any;
}
export declare const NetworkSegmentRangesCreateResponseNetworkSegmentRangeNetworkTypeEnum: {
    readonly Vlan: "vlan";
    readonly Vxlan: "vxlan";
    readonly Gre: "gre";
    readonly Geneve: "geneve";
};
export type NetworkSegmentRangesCreateResponseNetworkSegmentRangeNetworkTypeEnum = typeof NetworkSegmentRangesCreateResponseNetworkSegmentRangeNetworkTypeEnum[keyof typeof NetworkSegmentRangesCreateResponseNetworkSegmentRangeNetworkTypeEnum];
/**
 * Response of the network-segment-ranges:get operation
 * @export
 * @interface NetworkSegmentRangesIndexResponse
 */
export interface NetworkSegmentRangesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesIndexResponse
     */
    'network_segment_ranges'?: any;
}
/**
 * Response of the network_segment_ranges/network_segment_range_id/tags:get operation
 * @export
 * @interface NetworkSegmentRangesTagsIndexResponse
 */
export interface NetworkSegmentRangesTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the network_segment_ranges/network_segment_range_id/tags:put operation
 * @export
 * @interface NetworkSegmentRangesTagsUpdateAllRequest
 */
export interface NetworkSegmentRangesTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the network_segment_ranges/network_segment_range_id/tags:put operation
 * @export
 * @interface NetworkSegmentRangesTagsUpdateAllResponse
 */
export interface NetworkSegmentRangesTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof NetworkSegmentRangesTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the networks/network_id:get operation
 * @export
 * @interface NetworkShowResponse
 */
export interface NetworkShowResponse {
    /**
     *
     * @type {NetworksCreateResponseNetwork}
     * @memberof NetworkShowResponse
     */
    'network'?: NetworksCreateResponseNetwork;
}
/**
 * Request of the networks/network_id:put operation
 * @export
 * @interface NetworkUpdateRequest
 */
export interface NetworkUpdateRequest {
    /**
     *
     * @type {NetworkUpdateRequestNetwork}
     * @memberof NetworkUpdateRequest
     */
    'network'?: NetworkUpdateRequestNetwork;
}
/**
 *
 * @export
 * @interface NetworkUpdateRequestNetwork
 */
export interface NetworkUpdateRequestNetwork {
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'router:external'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'segments'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'mtu'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'port_security_enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'provider:network_type'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'provider:physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'provider:segmentation_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworkUpdateRequestNetwork
     */
    'description'?: any;
}
/**
 * Response of the networks/network_id:put operation
 * @export
 * @interface NetworkUpdateResponse
 */
export interface NetworkUpdateResponse {
    /**
     *
     * @type {NetworksCreateResponseNetwork}
     * @memberof NetworkUpdateResponse
     */
    'network'?: NetworksCreateResponseNetwork;
}
/**
 * Request of the networks:post operation
 * @export
 * @interface NetworksCreateRequest
 */
export interface NetworksCreateRequest {
    /**
     *
     * @type {NetworksCreateRequestNetwork}
     * @memberof NetworksCreateRequest
     */
    'network'?: NetworksCreateRequestNetwork;
}
/**
 *
 * @export
 * @interface NetworksCreateRequestNetwork
 */
export interface NetworksCreateRequestNetwork {
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'router:external'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'segments'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'mtu'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'availability_zone_hints'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'ha'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'port_security_enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'provider:network_type'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'provider:physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'provider:segmentation_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateRequestNetwork
     */
    'description'?: any;
}
/**
 * Response of the networks:post operation
 * @export
 * @interface NetworksCreateResponse
 */
export interface NetworksCreateResponse {
    /**
     *
     * @type {NetworksCreateResponseNetwork}
     * @memberof NetworksCreateResponse
     */
    'network'?: NetworksCreateResponseNetwork;
}
/**
 *
 * @export
 * @interface NetworksCreateResponseNetwork
 */
export interface NetworksCreateResponseNetwork {
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'subnets'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'status'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'ipv4_address_scope'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'ipv6_address_scope'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'router:external'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'l2_adjacency'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'segments'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'mtu'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'availability_zones'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'availability_zone_hints'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'port_security_enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'provider:network_type'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'provider:physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'provider:segmentation_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof NetworksCreateResponseNetwork
     */
    'description'?: any;
}
/**
 * Response of the networks:get operation
 * @export
 * @interface NetworksIndexResponse
 */
export interface NetworksIndexResponse {
    /**
     *
     * @type {any}
     * @memberof NetworksIndexResponse
     */
    'networks'?: any;
}
/**
 * Response of the networks/network_id/tags:get operation
 * @export
 * @interface NetworksTagsIndexResponse
 */
export interface NetworksTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof NetworksTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the networks/network_id/tags:put operation
 * @export
 * @interface NetworksTagsUpdateAllRequest
 */
export interface NetworksTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof NetworksTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the networks/network_id/tags:put operation
 * @export
 * @interface NetworksTagsUpdateAllResponse
 */
export interface NetworksTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof NetworksTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the policies/policy_id/packet_rate_limit_rules/id:get operation
 * @export
 * @interface PoliciesPacketRateLimitRuleShowResponse
 */
export interface PoliciesPacketRateLimitRuleShowResponse {
    /**
     *
     * @type {PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule}
     * @memberof PoliciesPacketRateLimitRuleShowResponse
     */
    'packet_rate_limit_rule'?: PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule;
}
/**
 * Request of the policies/policy_id/packet_rate_limit_rules/id:put operation
 * @export
 * @interface PoliciesPacketRateLimitRuleUpdateRequest
 */
export interface PoliciesPacketRateLimitRuleUpdateRequest {
    /**
     *
     * @type {PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule}
     * @memberof PoliciesPacketRateLimitRuleUpdateRequest
     */
    'packet_rate_limit_rule'?: PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule;
}
/**
 * Response of the policies/policy_id/packet_rate_limit_rules/id:put operation
 * @export
 * @interface PoliciesPacketRateLimitRuleUpdateResponse
 */
export interface PoliciesPacketRateLimitRuleUpdateResponse {
    /**
     *
     * @type {PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule}
     * @memberof PoliciesPacketRateLimitRuleUpdateResponse
     */
    'packet_rate_limit_rule'?: PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule;
}
/**
 * Request of the policies/policy_id/packet_rate_limit_rules:post operation
 * @export
 * @interface PoliciesPacketRateLimitRulesCreateRequest
 */
export interface PoliciesPacketRateLimitRulesCreateRequest {
    /**
     *
     * @type {PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule}
     * @memberof PoliciesPacketRateLimitRulesCreateRequest
     */
    'packet_rate_limit_rule'?: PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule;
}
/**
 *
 * @export
 * @interface PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule
 */
export interface PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule {
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule
     */
    'max_kpps'?: any;
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule
     */
    'max_burst_kpps'?: any;
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRule
     */
    'direction'?: PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRuleDirectionEnum;
}
export declare const PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRuleDirectionEnum = typeof PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRuleDirectionEnum[keyof typeof PoliciesPacketRateLimitRulesCreateRequestPacketRateLimitRuleDirectionEnum];
/**
 * Response of the policies/policy_id/packet_rate_limit_rules:post operation
 * @export
 * @interface PoliciesPacketRateLimitRulesCreateResponse
 */
export interface PoliciesPacketRateLimitRulesCreateResponse {
    /**
     *
     * @type {PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule}
     * @memberof PoliciesPacketRateLimitRulesCreateResponse
     */
    'packet_rate_limit_rule'?: PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule;
}
/**
 *
 * @export
 * @interface PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule
 */
export interface PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule {
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule
     */
    'max_kpps'?: any;
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule
     */
    'max_burst_kpps'?: any;
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRule
     */
    'direction'?: PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRuleDirectionEnum;
}
export declare const PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRuleDirectionEnum = typeof PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRuleDirectionEnum[keyof typeof PoliciesPacketRateLimitRulesCreateResponsePacketRateLimitRuleDirectionEnum];
/**
 * Response of the policies/policy_id/packet_rate_limit_rules:get operation
 * @export
 * @interface PoliciesPacketRateLimitRulesIndexResponse
 */
export interface PoliciesPacketRateLimitRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof PoliciesPacketRateLimitRulesIndexResponse
     */
    'packet_rate_limit_rules'?: any;
}
/**
 * Response of the policies/policy_id/tags:get operation
 * @export
 * @interface PoliciesTagsIndexResponse
 */
export interface PoliciesTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof PoliciesTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the policies/policy_id/tags:put operation
 * @export
 * @interface PoliciesTagsUpdateAllRequest
 */
export interface PoliciesTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof PoliciesTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the policies/policy_id/tags:put operation
 * @export
 * @interface PoliciesTagsUpdateAllResponse
 */
export interface PoliciesTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof PoliciesTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the ports/port_id:get operation
 * @export
 * @interface PortShowResponse
 */
export interface PortShowResponse {
    /**
     *
     * @type {PortsCreateResponsePort}
     * @memberof PortShowResponse
     */
    'port'?: PortsCreateResponsePort;
}
/**
 * Request of the ports/port_id:put operation
 * @export
 * @interface PortUpdateRequest
 */
export interface PortUpdateRequest {
    /**
     *
     * @type {PortUpdateRequestPort}
     * @memberof PortUpdateRequest
     */
    'port'?: PortUpdateRequestPort;
}
/**
 *
 * @export
 * @interface PortUpdateRequestPort
 */
export interface PortUpdateRequestPort {
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'mac_address'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'fixed_ips'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'device_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'device_owner'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'allowed_address_pairs'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'data_plane_status'?: PortUpdateRequestPortDataPlaneStatusEnum;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'extra_dhcp_opts'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'hints'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'numa_affinity_policy'?: PortUpdateRequestPortNumaAffinityPolicyEnum;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'binding:vnic_type'?: PortUpdateRequestPortBindingvnicTypeEnum;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'binding:host_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'binding:profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'port_security_enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'dns_name'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof PortUpdateRequestPort
     */
    'security_groups'?: any;
}
export declare const PortUpdateRequestPortDataPlaneStatusEnum: {
    readonly Null: "null";
    readonly Active: "ACTIVE";
    readonly Down: "DOWN";
};
export type PortUpdateRequestPortDataPlaneStatusEnum = typeof PortUpdateRequestPortDataPlaneStatusEnum[keyof typeof PortUpdateRequestPortDataPlaneStatusEnum];
export declare const PortUpdateRequestPortNumaAffinityPolicyEnum: {
    readonly Required: "required";
    readonly Preferred: "preferred";
    readonly Legacy: "legacy";
    readonly Socket: "socket";
    readonly Null: "null";
};
export type PortUpdateRequestPortNumaAffinityPolicyEnum = typeof PortUpdateRequestPortNumaAffinityPolicyEnum[keyof typeof PortUpdateRequestPortNumaAffinityPolicyEnum];
export declare const PortUpdateRequestPortBindingvnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortUpdateRequestPortBindingvnicTypeEnum = typeof PortUpdateRequestPortBindingvnicTypeEnum[keyof typeof PortUpdateRequestPortBindingvnicTypeEnum];
/**
 * Response of the ports/port_id:put operation
 * @export
 * @interface PortUpdateResponse
 */
export interface PortUpdateResponse {
    /**
     *
     * @type {PortsCreateResponsePort}
     * @memberof PortUpdateResponse
     */
    'port'?: PortsCreateResponsePort;
}
/**
 * Response of the ports/port_id/bindings/id:get operation
 * @export
 * @interface PortsBindingShowResponse
 */
export interface PortsBindingShowResponse {
    /**
     *
     * @type {PortsBindingsCreateResponseBinding}
     * @memberof PortsBindingShowResponse
     */
    'binding'?: PortsBindingsCreateResponseBinding;
}
/**
 * Request of the ports/port_id/bindings/id:put operation
 * @export
 * @interface PortsBindingUpdateRequest
 */
export interface PortsBindingUpdateRequest {
    /**
     *
     * @type {PortsBindingUpdateRequestBinding}
     * @memberof PortsBindingUpdateRequest
     */
    'binding'?: PortsBindingUpdateRequestBinding;
}
/**
 *
 * @export
 * @interface PortsBindingUpdateRequestBinding
 */
export interface PortsBindingUpdateRequestBinding {
    /**
     *
     * @type {any}
     * @memberof PortsBindingUpdateRequestBinding
     */
    'host'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingUpdateRequestBinding
     */
    'vnic_type'?: PortsBindingUpdateRequestBindingVnicTypeEnum;
    /**
     *
     * @type {any}
     * @memberof PortsBindingUpdateRequestBinding
     */
    'profile'?: any;
}
export declare const PortsBindingUpdateRequestBindingVnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortsBindingUpdateRequestBindingVnicTypeEnum = typeof PortsBindingUpdateRequestBindingVnicTypeEnum[keyof typeof PortsBindingUpdateRequestBindingVnicTypeEnum];
/**
 * Response of the ports/port_id/bindings/id:put operation
 * @export
 * @interface PortsBindingUpdateResponse
 */
export interface PortsBindingUpdateResponse {
    /**
     *
     * @type {PortsBindingsCreateResponseBinding}
     * @memberof PortsBindingUpdateResponse
     */
    'binding'?: PortsBindingsCreateResponseBinding;
}
/**
 *
 * @export
 * @interface PortsBindingsActivateActivateRequest
 */
export interface PortsBindingsActivateActivateRequest {
    /**
     * The hostname of the system the agent is running on.
     * @type {any}
     * @memberof PortsBindingsActivateActivateRequest
     */
    'host'?: any;
}
/**
 * Request of the ports/port_id/bindings:post operation
 * @export
 * @interface PortsBindingsCreateRequest
 */
export interface PortsBindingsCreateRequest {
    /**
     *
     * @type {PortsBindingsCreateRequestBinding}
     * @memberof PortsBindingsCreateRequest
     */
    'binding'?: PortsBindingsCreateRequestBinding;
}
/**
 *
 * @export
 * @interface PortsBindingsCreateRequestBinding
 */
export interface PortsBindingsCreateRequestBinding {
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateRequestBinding
     */
    'host'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateRequestBinding
     */
    'vnic_type'?: PortsBindingsCreateRequestBindingVnicTypeEnum;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateRequestBinding
     */
    'profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateRequestBinding
     */
    'project_id'?: any;
}
export declare const PortsBindingsCreateRequestBindingVnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortsBindingsCreateRequestBindingVnicTypeEnum = typeof PortsBindingsCreateRequestBindingVnicTypeEnum[keyof typeof PortsBindingsCreateRequestBindingVnicTypeEnum];
/**
 * Response of the ports/port_id/bindings:post operation
 * @export
 * @interface PortsBindingsCreateResponse
 */
export interface PortsBindingsCreateResponse {
    /**
     *
     * @type {PortsBindingsCreateResponseBinding}
     * @memberof PortsBindingsCreateResponse
     */
    'binding'?: PortsBindingsCreateResponseBinding;
}
/**
 *
 * @export
 * @interface PortsBindingsCreateResponseBinding
 */
export interface PortsBindingsCreateResponseBinding {
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'host'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'vif_type'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'vif_details'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'vnic_type'?: PortsBindingsCreateResponseBindingVnicTypeEnum;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'status'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsBindingsCreateResponseBinding
     */
    'project_id'?: any;
}
export declare const PortsBindingsCreateResponseBindingVnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortsBindingsCreateResponseBindingVnicTypeEnum = typeof PortsBindingsCreateResponseBindingVnicTypeEnum[keyof typeof PortsBindingsCreateResponseBindingVnicTypeEnum];
/**
 * Response of the ports/port_id/bindings:get operation
 * @export
 * @interface PortsBindingsIndexResponse
 */
export interface PortsBindingsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof PortsBindingsIndexResponse
     */
    'bindings'?: any;
}
/**
 * Request of the ports:post operation
 * @export
 * @interface PortsCreateRequest
 */
export interface PortsCreateRequest {
    /**
     *
     * @type {PortsCreateRequestPort}
     * @memberof PortsCreateRequest
     */
    'port'?: PortsCreateRequestPort;
}
/**
 *
 * @export
 * @interface PortsCreateRequestPort
 */
export interface PortsCreateRequestPort {
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'mac_address'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'fixed_ips'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'device_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'device_owner'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'allowed_address_pairs'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'extra_dhcp_opts'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'device_profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'hints'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'numa_affinity_policy'?: PortsCreateRequestPortNumaAffinityPolicyEnum;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'binding:vnic_type'?: PortsCreateRequestPortBindingvnicTypeEnum;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'binding:host_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'binding:profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'port_security_enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'propagate_uplink_status'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'dns_name'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateRequestPort
     */
    'security_groups'?: any;
}
export declare const PortsCreateRequestPortNumaAffinityPolicyEnum: {
    readonly Required: "required";
    readonly Preferred: "preferred";
    readonly Legacy: "legacy";
    readonly Socket: "socket";
    readonly Null: "null";
};
export type PortsCreateRequestPortNumaAffinityPolicyEnum = typeof PortsCreateRequestPortNumaAffinityPolicyEnum[keyof typeof PortsCreateRequestPortNumaAffinityPolicyEnum];
export declare const PortsCreateRequestPortBindingvnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortsCreateRequestPortBindingvnicTypeEnum = typeof PortsCreateRequestPortBindingvnicTypeEnum[keyof typeof PortsCreateRequestPortBindingvnicTypeEnum];
/**
 * Response of the ports:post operation
 * @export
 * @interface PortsCreateResponse
 */
export interface PortsCreateResponse {
    /**
     *
     * @type {PortsCreateResponsePort}
     * @memberof PortsCreateResponse
     */
    'port'?: PortsCreateResponsePort;
}
/**
 *
 * @export
 * @interface PortsCreateResponsePort
 */
export interface PortsCreateResponsePort {
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'mac_address'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'fixed_ips'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'device_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'device_owner'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'status'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'allowed_address_pairs'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'data_plane_status'?: PortsCreateResponsePortDataPlaneStatusEnum;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'extra_dhcp_opts'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'ip_allocation'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'device_profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'hints'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'numa_affinity_policy'?: PortsCreateResponsePortNumaAffinityPolicyEnum;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'resource_request'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'binding:vif_type'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'binding:vif_details'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'binding:vnic_type'?: PortsCreateResponsePortBindingvnicTypeEnum;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'binding:host_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'binding:profile'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'port_security_enabled'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'qos_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'qos_network_policy_id'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'propagate_uplink_status'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'dns_name'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'dns_assignment'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'dns_domain'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof PortsCreateResponsePort
     */
    'security_groups'?: any;
}
export declare const PortsCreateResponsePortDataPlaneStatusEnum: {
    readonly Null: "null";
    readonly Active: "ACTIVE";
    readonly Down: "DOWN";
};
export type PortsCreateResponsePortDataPlaneStatusEnum = typeof PortsCreateResponsePortDataPlaneStatusEnum[keyof typeof PortsCreateResponsePortDataPlaneStatusEnum];
export declare const PortsCreateResponsePortNumaAffinityPolicyEnum: {
    readonly Required: "required";
    readonly Preferred: "preferred";
    readonly Legacy: "legacy";
    readonly Socket: "socket";
    readonly Null: "null";
};
export type PortsCreateResponsePortNumaAffinityPolicyEnum = typeof PortsCreateResponsePortNumaAffinityPolicyEnum[keyof typeof PortsCreateResponsePortNumaAffinityPolicyEnum];
export declare const PortsCreateResponsePortBindingvnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortsCreateResponsePortBindingvnicTypeEnum = typeof PortsCreateResponsePortBindingvnicTypeEnum[keyof typeof PortsCreateResponsePortBindingvnicTypeEnum];
/**
 * Response of the ports:get operation
 * @export
 * @interface PortsIndexResponse
 */
export interface PortsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof PortsIndexResponse
     */
    'ports'?: any;
}
/**
 * Response of the ports/port_id/tags:get operation
 * @export
 * @interface PortsTagsIndexResponse
 */
export interface PortsTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof PortsTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the ports/port_id/tags:put operation
 * @export
 * @interface PortsTagsUpdateAllRequest
 */
export interface PortsTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof PortsTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the ports/port_id/tags:put operation
 * @export
 * @interface PortsTagsUpdateAllResponse
 */
export interface PortsTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof PortsTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the qos/alias-bandwidth-limit-rules/id:get operation
 * @export
 * @interface QosAliasBandwidthLimitRuleShowResponse
 */
export interface QosAliasBandwidthLimitRuleShowResponse {
    /**
     *
     * @type {QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule}
     * @memberof QosAliasBandwidthLimitRuleShowResponse
     */
    'alias_bandwidth_limit_rule'?: QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule;
}
/**
 * Request of the qos/alias-bandwidth-limit-rules/id:put operation
 * @export
 * @interface QosAliasBandwidthLimitRuleUpdateRequest
 */
export interface QosAliasBandwidthLimitRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule}
     * @memberof QosAliasBandwidthLimitRuleUpdateRequest
     */
    'alias_bandwidth_limit_rule'?: QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule;
}
/**
 * Response of the qos/alias-bandwidth-limit-rules/id:put operation
 * @export
 * @interface QosAliasBandwidthLimitRuleUpdateResponse
 */
export interface QosAliasBandwidthLimitRuleUpdateResponse {
    /**
     *
     * @type {QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule}
     * @memberof QosAliasBandwidthLimitRuleUpdateResponse
     */
    'alias_bandwidth_limit_rule'?: QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule;
}
/**
 * Request of the qos/alias-bandwidth-limit-rules:post operation
 * @export
 * @interface QosAliasBandwidthLimitRulesCreateRequest
 */
export interface QosAliasBandwidthLimitRulesCreateRequest {
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesCreateRequest
     */
    'alias_bandwidth_limit_rule'?: any;
}
/**
 * Response of the qos/alias-bandwidth-limit-rules:post operation
 * @export
 * @interface QosAliasBandwidthLimitRulesCreateResponse
 */
export interface QosAliasBandwidthLimitRulesCreateResponse {
    /**
     *
     * @type {QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule}
     * @memberof QosAliasBandwidthLimitRulesCreateResponse
     */
    'alias_bandwidth_limit_rule'?: QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule;
}
/**
 *
 * @export
 * @interface QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule
 */
export interface QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule {
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule
     */
    'max_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule
     */
    'direction'?: QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRule
     */
    'max_burst_kbps'?: any;
}
export declare const QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRuleDirectionEnum = typeof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRuleDirectionEnum[keyof typeof QosAliasBandwidthLimitRulesCreateResponseAliasBandwidthLimitRuleDirectionEnum];
/**
 * Response of the qos/alias-bandwidth-limit-rules:get operation
 * @export
 * @interface QosAliasBandwidthLimitRulesIndexResponse
 */
export interface QosAliasBandwidthLimitRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosAliasBandwidthLimitRulesIndexResponse
     */
    'alias_bandwidth_limit_rules'?: any;
}
/**
 * Response of the qos/alias-dscp-marking-rules/id:get operation
 * @export
 * @interface QosAliasDscpMarkingRuleShowResponse
 */
export interface QosAliasDscpMarkingRuleShowResponse {
    /**
     *
     * @type {QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule}
     * @memberof QosAliasDscpMarkingRuleShowResponse
     */
    'alias_dscp_marking_rule'?: QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule;
}
/**
 * Request of the qos/alias-dscp-marking-rules/id:put operation
 * @export
 * @interface QosAliasDscpMarkingRuleUpdateRequest
 */
export interface QosAliasDscpMarkingRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule}
     * @memberof QosAliasDscpMarkingRuleUpdateRequest
     */
    'alias_dscp_marking_rule'?: QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule;
}
/**
 * Response of the qos/alias-dscp-marking-rules/id:put operation
 * @export
 * @interface QosAliasDscpMarkingRuleUpdateResponse
 */
export interface QosAliasDscpMarkingRuleUpdateResponse {
    /**
     *
     * @type {QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule}
     * @memberof QosAliasDscpMarkingRuleUpdateResponse
     */
    'alias_dscp_marking_rule'?: QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule;
}
/**
 * Request of the qos/alias-dscp-marking-rules:post operation
 * @export
 * @interface QosAliasDscpMarkingRulesCreateRequest
 */
export interface QosAliasDscpMarkingRulesCreateRequest {
    /**
     *
     * @type {any}
     * @memberof QosAliasDscpMarkingRulesCreateRequest
     */
    'alias_dscp_marking_rule'?: any;
}
/**
 * Response of the qos/alias-dscp-marking-rules:post operation
 * @export
 * @interface QosAliasDscpMarkingRulesCreateResponse
 */
export interface QosAliasDscpMarkingRulesCreateResponse {
    /**
     *
     * @type {QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule}
     * @memberof QosAliasDscpMarkingRulesCreateResponse
     */
    'alias_dscp_marking_rule'?: QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule;
}
/**
 *
 * @export
 * @interface QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule
 */
export interface QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule {
    /**
     *
     * @type {any}
     * @memberof QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRule
     */
    'dscp_mark'?: QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRuleDscpMarkEnum;
}
export declare const QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRuleDscpMarkEnum: {
    readonly _0: "0";
    readonly _8: "8";
    readonly _10: "10";
    readonly _12: "12";
    readonly _14: "14";
    readonly _16: "16";
    readonly _18: "18";
    readonly _20: "20";
    readonly _22: "22";
    readonly _24: "24";
    readonly _26: "26";
    readonly _28: "28";
    readonly _30: "30";
    readonly _32: "32";
    readonly _34: "34";
    readonly _36: "36";
    readonly _38: "38";
    readonly _40: "40";
    readonly _44: "44";
    readonly _46: "46";
    readonly _48: "48";
    readonly _56: "56";
};
export type QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRuleDscpMarkEnum = typeof QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRuleDscpMarkEnum[keyof typeof QosAliasDscpMarkingRulesCreateResponseAliasDscpMarkingRuleDscpMarkEnum];
/**
 * Response of the qos/alias-dscp-marking-rules:get operation
 * @export
 * @interface QosAliasDscpMarkingRulesIndexResponse
 */
export interface QosAliasDscpMarkingRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosAliasDscpMarkingRulesIndexResponse
     */
    'alias_dscp_marking_rules'?: any;
}
/**
 * Response of the qos/alias-minimum-bandwidth-rules/id:get operation
 * @export
 * @interface QosAliasMinimumBandwidthRuleShowResponse
 */
export interface QosAliasMinimumBandwidthRuleShowResponse {
    /**
     *
     * @type {QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule}
     * @memberof QosAliasMinimumBandwidthRuleShowResponse
     */
    'alias_minimum_bandwidth_rule'?: QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule;
}
/**
 * Request of the qos/alias-minimum-bandwidth-rules/id:put operation
 * @export
 * @interface QosAliasMinimumBandwidthRuleUpdateRequest
 */
export interface QosAliasMinimumBandwidthRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule}
     * @memberof QosAliasMinimumBandwidthRuleUpdateRequest
     */
    'alias_minimum_bandwidth_rule'?: QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule;
}
/**
 * Response of the qos/alias-minimum-bandwidth-rules/id:put operation
 * @export
 * @interface QosAliasMinimumBandwidthRuleUpdateResponse
 */
export interface QosAliasMinimumBandwidthRuleUpdateResponse {
    /**
     *
     * @type {QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule}
     * @memberof QosAliasMinimumBandwidthRuleUpdateResponse
     */
    'alias_minimum_bandwidth_rule'?: QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule;
}
/**
 * Request of the qos/alias-minimum-bandwidth-rules:post operation
 * @export
 * @interface QosAliasMinimumBandwidthRulesCreateRequest
 */
export interface QosAliasMinimumBandwidthRulesCreateRequest {
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumBandwidthRulesCreateRequest
     */
    'alias_minimum_bandwidth_rule'?: any;
}
/**
 * Response of the qos/alias-minimum-bandwidth-rules:post operation
 * @export
 * @interface QosAliasMinimumBandwidthRulesCreateResponse
 */
export interface QosAliasMinimumBandwidthRulesCreateResponse {
    /**
     *
     * @type {QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule}
     * @memberof QosAliasMinimumBandwidthRulesCreateResponse
     */
    'alias_minimum_bandwidth_rule'?: QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule;
}
/**
 *
 * @export
 * @interface QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule
 */
export interface QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule {
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule
     */
    'min_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRule
     */
    'direction'?: QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRuleDirectionEnum;
}
export declare const QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRuleDirectionEnum = typeof QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRuleDirectionEnum[keyof typeof QosAliasMinimumBandwidthRulesCreateResponseAliasMinimumBandwidthRuleDirectionEnum];
/**
 * Response of the qos/alias-minimum-bandwidth-rules:get operation
 * @export
 * @interface QosAliasMinimumBandwidthRulesIndexResponse
 */
export interface QosAliasMinimumBandwidthRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumBandwidthRulesIndexResponse
     */
    'alias_minimum_bandwidth_rules'?: any;
}
/**
 * Response of the qos/alias-minimum-packet-rate-rules/id:get operation
 * @export
 * @interface QosAliasMinimumPacketRateRuleShowResponse
 */
export interface QosAliasMinimumPacketRateRuleShowResponse {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule}
     * @memberof QosAliasMinimumPacketRateRuleShowResponse
     */
    'alias_minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule;
}
/**
 * Request of the qos/alias-minimum-packet-rate-rules/id:put operation
 * @export
 * @interface QosAliasMinimumPacketRateRuleUpdateRequest
 */
export interface QosAliasMinimumPacketRateRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule}
     * @memberof QosAliasMinimumPacketRateRuleUpdateRequest
     */
    'alias_minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule;
}
/**
 * Response of the qos/alias-minimum-packet-rate-rules/id:put operation
 * @export
 * @interface QosAliasMinimumPacketRateRuleUpdateResponse
 */
export interface QosAliasMinimumPacketRateRuleUpdateResponse {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule}
     * @memberof QosAliasMinimumPacketRateRuleUpdateResponse
     */
    'alias_minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule;
}
/**
 * Request of the qos/alias-minimum-packet-rate-rules:post operation
 * @export
 * @interface QosAliasMinimumPacketRateRulesCreateRequest
 */
export interface QosAliasMinimumPacketRateRulesCreateRequest {
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumPacketRateRulesCreateRequest
     */
    'alias_minimum_packet_rate_rule'?: any;
}
/**
 * Response of the qos/alias-minimum-packet-rate-rules:post operation
 * @export
 * @interface QosAliasMinimumPacketRateRulesCreateResponse
 */
export interface QosAliasMinimumPacketRateRulesCreateResponse {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule}
     * @memberof QosAliasMinimumPacketRateRulesCreateResponse
     */
    'alias_minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule;
}
/**
 * Response of the qos/alias-minimum-packet-rate-rules:get operation
 * @export
 * @interface QosAliasMinimumPacketRateRulesIndexResponse
 */
export interface QosAliasMinimumPacketRateRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosAliasMinimumPacketRateRulesIndexResponse
     */
    'alias_minimum_packet_rate_rules'?: any;
}
/**
 * Response of the qos/policies/policy_id/bandwidth_limit_rules/id:get operation
 * @export
 * @interface QosPoliciesBandwidthLimitRuleShowResponse
 */
export interface QosPoliciesBandwidthLimitRuleShowResponse {
    /**
     *
     * @type {QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule}
     * @memberof QosPoliciesBandwidthLimitRuleShowResponse
     */
    'bandwidth_limit_rule'?: QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule;
}
/**
 * Request of the qos/policies/policy_id/bandwidth_limit_rules/id:put operation
 * @export
 * @interface QosPoliciesBandwidthLimitRuleUpdateRequest
 */
export interface QosPoliciesBandwidthLimitRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule}
     * @memberof QosPoliciesBandwidthLimitRuleUpdateRequest
     */
    'bandwidth_limit_rule'?: QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule;
}
/**
 * Response of the qos/policies/policy_id/bandwidth_limit_rules/id:put operation
 * @export
 * @interface QosPoliciesBandwidthLimitRuleUpdateResponse
 */
export interface QosPoliciesBandwidthLimitRuleUpdateResponse {
    /**
     *
     * @type {QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule}
     * @memberof QosPoliciesBandwidthLimitRuleUpdateResponse
     */
    'bandwidth_limit_rule'?: QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule;
}
/**
 * Request of the qos/policies/policy_id/bandwidth_limit_rules:post operation
 * @export
 * @interface QosPoliciesBandwidthLimitRulesCreateRequest
 */
export interface QosPoliciesBandwidthLimitRulesCreateRequest {
    /**
     *
     * @type {QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule}
     * @memberof QosPoliciesBandwidthLimitRulesCreateRequest
     */
    'bandwidth_limit_rule'?: QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule;
}
/**
 *
 * @export
 * @interface QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule
 */
export interface QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule
     */
    'max_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule
     */
    'max_burst_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRule
     */
    'direction'?: QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRuleDirectionEnum;
}
export declare const QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRuleDirectionEnum = typeof QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRuleDirectionEnum[keyof typeof QosPoliciesBandwidthLimitRulesCreateRequestBandwidthLimitRuleDirectionEnum];
/**
 * Response of the qos/policies/policy_id/bandwidth_limit_rules:post operation
 * @export
 * @interface QosPoliciesBandwidthLimitRulesCreateResponse
 */
export interface QosPoliciesBandwidthLimitRulesCreateResponse {
    /**
     *
     * @type {QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule}
     * @memberof QosPoliciesBandwidthLimitRulesCreateResponse
     */
    'bandwidth_limit_rule'?: QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule;
}
/**
 *
 * @export
 * @interface QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule
 */
export interface QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule
     */
    'max_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule
     */
    'max_burst_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRule
     */
    'direction'?: QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRuleDirectionEnum;
}
export declare const QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRuleDirectionEnum = typeof QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRuleDirectionEnum[keyof typeof QosPoliciesBandwidthLimitRulesCreateResponseBandwidthLimitRuleDirectionEnum];
/**
 * Response of the qos/policies/policy_id/bandwidth_limit_rules:get operation
 * @export
 * @interface QosPoliciesBandwidthLimitRulesIndexResponse
 */
export interface QosPoliciesBandwidthLimitRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesBandwidthLimitRulesIndexResponse
     */
    'bandwidth_limit_rules'?: any;
}
/**
 * Request of the qos/policies:post operation
 * @export
 * @interface QosPoliciesCreateRequest
 */
export interface QosPoliciesCreateRequest {
    /**
     *
     * @type {QosPoliciesCreateRequestPolicy}
     * @memberof QosPoliciesCreateRequest
     */
    'policy'?: QosPoliciesCreateRequestPolicy;
}
/**
 *
 * @export
 * @interface QosPoliciesCreateRequestPolicy
 */
export interface QosPoliciesCreateRequestPolicy {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateRequestPolicy
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateRequestPolicy
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateRequestPolicy
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateRequestPolicy
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateRequestPolicy
     */
    'description'?: any;
}
/**
 * Response of the qos/policies:post operation
 * @export
 * @interface QosPoliciesCreateResponse
 */
export interface QosPoliciesCreateResponse {
    /**
     *
     * @type {QosPoliciesCreateResponsePolicy}
     * @memberof QosPoliciesCreateResponse
     */
    'policy'?: QosPoliciesCreateResponsePolicy;
}
/**
 *
 * @export
 * @interface QosPoliciesCreateResponsePolicy
 */
export interface QosPoliciesCreateResponsePolicy {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'rules'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesCreateResponsePolicy
     */
    'description'?: any;
}
/**
 * Response of the qos/policies/policy_id/dscp_marking_rules/id:get operation
 * @export
 * @interface QosPoliciesDscpMarkingRuleShowResponse
 */
export interface QosPoliciesDscpMarkingRuleShowResponse {
    /**
     *
     * @type {QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule}
     * @memberof QosPoliciesDscpMarkingRuleShowResponse
     */
    'dscp_marking_rule'?: QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule;
}
/**
 * Request of the qos/policies/policy_id/dscp_marking_rules/id:put operation
 * @export
 * @interface QosPoliciesDscpMarkingRuleUpdateRequest
 */
export interface QosPoliciesDscpMarkingRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule}
     * @memberof QosPoliciesDscpMarkingRuleUpdateRequest
     */
    'dscp_marking_rule'?: QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule;
}
/**
 * Response of the qos/policies/policy_id/dscp_marking_rules/id:put operation
 * @export
 * @interface QosPoliciesDscpMarkingRuleUpdateResponse
 */
export interface QosPoliciesDscpMarkingRuleUpdateResponse {
    /**
     *
     * @type {QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule}
     * @memberof QosPoliciesDscpMarkingRuleUpdateResponse
     */
    'dscp_marking_rule'?: QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule;
}
/**
 * Request of the qos/policies/policy_id/dscp_marking_rules:post operation
 * @export
 * @interface QosPoliciesDscpMarkingRulesCreateRequest
 */
export interface QosPoliciesDscpMarkingRulesCreateRequest {
    /**
     *
     * @type {QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule}
     * @memberof QosPoliciesDscpMarkingRulesCreateRequest
     */
    'dscp_marking_rule'?: QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule;
}
/**
 *
 * @export
 * @interface QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule
 */
export interface QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRule
     */
    'dscp_mark'?: QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRuleDscpMarkEnum;
}
export declare const QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRuleDscpMarkEnum: {
    readonly _0: "0";
    readonly _8: "8";
    readonly _10: "10";
    readonly _12: "12";
    readonly _14: "14";
    readonly _16: "16";
    readonly _18: "18";
    readonly _20: "20";
    readonly _22: "22";
    readonly _24: "24";
    readonly _26: "26";
    readonly _28: "28";
    readonly _30: "30";
    readonly _32: "32";
    readonly _34: "34";
    readonly _36: "36";
    readonly _38: "38";
    readonly _40: "40";
    readonly _44: "44";
    readonly _46: "46";
    readonly _48: "48";
    readonly _56: "56";
};
export type QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRuleDscpMarkEnum = typeof QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRuleDscpMarkEnum[keyof typeof QosPoliciesDscpMarkingRulesCreateRequestDscpMarkingRuleDscpMarkEnum];
/**
 * Response of the qos/policies/policy_id/dscp_marking_rules:post operation
 * @export
 * @interface QosPoliciesDscpMarkingRulesCreateResponse
 */
export interface QosPoliciesDscpMarkingRulesCreateResponse {
    /**
     *
     * @type {QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule}
     * @memberof QosPoliciesDscpMarkingRulesCreateResponse
     */
    'dscp_marking_rule'?: QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule;
}
/**
 *
 * @export
 * @interface QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule
 */
export interface QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRule
     */
    'dscp_mark'?: QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRuleDscpMarkEnum;
}
export declare const QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRuleDscpMarkEnum: {
    readonly _0: "0";
    readonly _8: "8";
    readonly _10: "10";
    readonly _12: "12";
    readonly _14: "14";
    readonly _16: "16";
    readonly _18: "18";
    readonly _20: "20";
    readonly _22: "22";
    readonly _24: "24";
    readonly _26: "26";
    readonly _28: "28";
    readonly _30: "30";
    readonly _32: "32";
    readonly _34: "34";
    readonly _36: "36";
    readonly _38: "38";
    readonly _40: "40";
    readonly _44: "44";
    readonly _46: "46";
    readonly _48: "48";
    readonly _56: "56";
};
export type QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRuleDscpMarkEnum = typeof QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRuleDscpMarkEnum[keyof typeof QosPoliciesDscpMarkingRulesCreateResponseDscpMarkingRuleDscpMarkEnum];
/**
 * Response of the qos/policies/policy_id/dscp_marking_rules:get operation
 * @export
 * @interface QosPoliciesDscpMarkingRulesIndexResponse
 */
export interface QosPoliciesDscpMarkingRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesDscpMarkingRulesIndexResponse
     */
    'dscp_marking_rules'?: any;
}
/**
 * Response of the qos/policies:get operation
 * @export
 * @interface QosPoliciesIndexResponse
 */
export interface QosPoliciesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesIndexResponse
     */
    'policies'?: any;
}
/**
 * Response of the qos/policies/policy_id/minimum_bandwidth_rules/id:get operation
 * @export
 * @interface QosPoliciesMinimumBandwidthRuleShowResponse
 */
export interface QosPoliciesMinimumBandwidthRuleShowResponse {
    /**
     *
     * @type {QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule}
     * @memberof QosPoliciesMinimumBandwidthRuleShowResponse
     */
    'minimum_bandwidth_rule'?: QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule;
}
/**
 * Request of the qos/policies/policy_id/minimum_bandwidth_rules/id:put operation
 * @export
 * @interface QosPoliciesMinimumBandwidthRuleUpdateRequest
 */
export interface QosPoliciesMinimumBandwidthRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule}
     * @memberof QosPoliciesMinimumBandwidthRuleUpdateRequest
     */
    'minimum_bandwidth_rule'?: QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule;
}
/**
 * Response of the qos/policies/policy_id/minimum_bandwidth_rules/id:put operation
 * @export
 * @interface QosPoliciesMinimumBandwidthRuleUpdateResponse
 */
export interface QosPoliciesMinimumBandwidthRuleUpdateResponse {
    /**
     *
     * @type {QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule}
     * @memberof QosPoliciesMinimumBandwidthRuleUpdateResponse
     */
    'minimum_bandwidth_rule'?: QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule;
}
/**
 * Request of the qos/policies/policy_id/minimum_bandwidth_rules:post operation
 * @export
 * @interface QosPoliciesMinimumBandwidthRulesCreateRequest
 */
export interface QosPoliciesMinimumBandwidthRulesCreateRequest {
    /**
     *
     * @type {QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateRequest
     */
    'minimum_bandwidth_rule'?: QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule;
}
/**
 *
 * @export
 * @interface QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule
 */
export interface QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule
     */
    'min_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRule
     */
    'direction'?: QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRuleDirectionEnum;
}
export declare const QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRuleDirectionEnum = typeof QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRuleDirectionEnum[keyof typeof QosPoliciesMinimumBandwidthRulesCreateRequestMinimumBandwidthRuleDirectionEnum];
/**
 * Response of the qos/policies/policy_id/minimum_bandwidth_rules:post operation
 * @export
 * @interface QosPoliciesMinimumBandwidthRulesCreateResponse
 */
export interface QosPoliciesMinimumBandwidthRulesCreateResponse {
    /**
     *
     * @type {QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateResponse
     */
    'minimum_bandwidth_rule'?: QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule;
}
/**
 *
 * @export
 * @interface QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule
 */
export interface QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule
     */
    'min_kbps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRule
     */
    'direction'?: QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRuleDirectionEnum;
}
export declare const QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRuleDirectionEnum = typeof QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRuleDirectionEnum[keyof typeof QosPoliciesMinimumBandwidthRulesCreateResponseMinimumBandwidthRuleDirectionEnum];
/**
 * Response of the qos/policies/policy_id/minimum_bandwidth_rules:get operation
 * @export
 * @interface QosPoliciesMinimumBandwidthRulesIndexResponse
 */
export interface QosPoliciesMinimumBandwidthRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumBandwidthRulesIndexResponse
     */
    'minimum_bandwidth_rules'?: any;
}
/**
 * Response of the qos/policies/policy_id/minimum-packet-rate-rules/id:get operation
 * @export
 * @interface QosPoliciesMinimumPacketRateRuleShowResponse
 */
export interface QosPoliciesMinimumPacketRateRuleShowResponse {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule}
     * @memberof QosPoliciesMinimumPacketRateRuleShowResponse
     */
    'minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule;
}
/**
 * Request of the qos/policies/policy_id/minimum-packet-rate-rules/id:put operation
 * @export
 * @interface QosPoliciesMinimumPacketRateRuleUpdateRequest
 */
export interface QosPoliciesMinimumPacketRateRuleUpdateRequest {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule}
     * @memberof QosPoliciesMinimumPacketRateRuleUpdateRequest
     */
    'minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule;
}
/**
 * Response of the qos/policies/policy_id/minimum-packet-rate-rules/id:put operation
 * @export
 * @interface QosPoliciesMinimumPacketRateRuleUpdateResponse
 */
export interface QosPoliciesMinimumPacketRateRuleUpdateResponse {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule}
     * @memberof QosPoliciesMinimumPacketRateRuleUpdateResponse
     */
    'minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule;
}
/**
 * Request of the qos/policies/policy_id/minimum-packet-rate-rules:post operation
 * @export
 * @interface QosPoliciesMinimumPacketRateRulesCreateRequest
 */
export interface QosPoliciesMinimumPacketRateRulesCreateRequest {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateRequest
     */
    'minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule;
}
/**
 *
 * @export
 * @interface QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule
 */
export interface QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule
     */
    'min_kpps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRule
     */
    'direction'?: QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRuleDirectionEnum;
}
export declare const QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRuleDirectionEnum: {
    readonly Any: "any";
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRuleDirectionEnum = typeof QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRuleDirectionEnum[keyof typeof QosPoliciesMinimumPacketRateRulesCreateRequestMinimumPacketRateRuleDirectionEnum];
/**
 * Response of the qos/policies/policy_id/minimum-packet-rate-rules:post operation
 * @export
 * @interface QosPoliciesMinimumPacketRateRulesCreateResponse
 */
export interface QosPoliciesMinimumPacketRateRulesCreateResponse {
    /**
     *
     * @type {QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateResponse
     */
    'minimum_packet_rate_rule'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule;
}
/**
 *
 * @export
 * @interface QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule
 */
export interface QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule
     */
    'min_kpps'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRule
     */
    'direction'?: QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRuleDirectionEnum;
}
export declare const QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRuleDirectionEnum: {
    readonly Any: "any";
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRuleDirectionEnum = typeof QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRuleDirectionEnum[keyof typeof QosPoliciesMinimumPacketRateRulesCreateResponseMinimumPacketRateRuleDirectionEnum];
/**
 * Response of the qos/policies/policy_id/minimum-packet-rate-rules:get operation
 * @export
 * @interface QosPoliciesMinimumPacketRateRulesIndexResponse
 */
export interface QosPoliciesMinimumPacketRateRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosPoliciesMinimumPacketRateRulesIndexResponse
     */
    'minimum_packet_rate_rules'?: any;
}
/**
 * Response of the qos/policies/id:get operation
 * @export
 * @interface QosPolicyShowResponse
 */
export interface QosPolicyShowResponse {
    /**
     *
     * @type {QosPoliciesCreateResponsePolicy}
     * @memberof QosPolicyShowResponse
     */
    'policy'?: QosPoliciesCreateResponsePolicy;
}
/**
 * Request of the qos/policies/id:put operation
 * @export
 * @interface QosPolicyUpdateRequest
 */
export interface QosPolicyUpdateRequest {
    /**
     *
     * @type {QosPolicyUpdateRequestPolicy}
     * @memberof QosPolicyUpdateRequest
     */
    'policy'?: QosPolicyUpdateRequestPolicy;
}
/**
 *
 * @export
 * @interface QosPolicyUpdateRequestPolicy
 */
export interface QosPolicyUpdateRequestPolicy {
    /**
     *
     * @type {any}
     * @memberof QosPolicyUpdateRequestPolicy
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPolicyUpdateRequestPolicy
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPolicyUpdateRequestPolicy
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof QosPolicyUpdateRequestPolicy
     */
    'description'?: any;
}
/**
 * Response of the qos/policies/id:put operation
 * @export
 * @interface QosPolicyUpdateResponse
 */
export interface QosPolicyUpdateResponse {
    /**
     *
     * @type {QosPoliciesCreateResponsePolicy}
     * @memberof QosPolicyUpdateResponse
     */
    'policy'?: QosPoliciesCreateResponsePolicy;
}
/**
 * Response of the qos/rule-types/id:get operation
 * @export
 * @interface QosRuleTypeShowResponse
 */
export interface QosRuleTypeShowResponse {
    /**
     *
     * @type {QosRuleTypesCreateResponseRuleType}
     * @memberof QosRuleTypeShowResponse
     */
    'rule_type'?: QosRuleTypesCreateResponseRuleType;
}
/**
 * Request of the qos/rule-types/id:put operation
 * @export
 * @interface QosRuleTypeUpdateRequest
 */
export interface QosRuleTypeUpdateRequest {
    /**
     *
     * @type {QosRuleTypesCreateRequestRuleType}
     * @memberof QosRuleTypeUpdateRequest
     */
    'rule_type'?: QosRuleTypesCreateRequestRuleType;
}
/**
 * Response of the qos/rule-types/id:put operation
 * @export
 * @interface QosRuleTypeUpdateResponse
 */
export interface QosRuleTypeUpdateResponse {
    /**
     *
     * @type {QosRuleTypesCreateResponseRuleType}
     * @memberof QosRuleTypeUpdateResponse
     */
    'rule_type'?: QosRuleTypesCreateResponseRuleType;
}
/**
 * Request of the qos/rule-types:post operation
 * @export
 * @interface QosRuleTypesCreateRequest
 */
export interface QosRuleTypesCreateRequest {
    /**
     *
     * @type {QosRuleTypesCreateRequestRuleType}
     * @memberof QosRuleTypesCreateRequest
     */
    'rule_type'?: QosRuleTypesCreateRequestRuleType;
}
/**
 *
 * @export
 * @interface QosRuleTypesCreateRequestRuleType
 */
export interface QosRuleTypesCreateRequestRuleType {
    /**
     *
     * @type {any}
     * @memberof QosRuleTypesCreateRequestRuleType
     */
    'all_rules'?: any;
    /**
     *
     * @type {any}
     * @memberof QosRuleTypesCreateRequestRuleType
     */
    'all_supported'?: any;
}
/**
 * Response of the qos/rule-types:post operation
 * @export
 * @interface QosRuleTypesCreateResponse
 */
export interface QosRuleTypesCreateResponse {
    /**
     *
     * @type {QosRuleTypesCreateResponseRuleType}
     * @memberof QosRuleTypesCreateResponse
     */
    'rule_type'?: QosRuleTypesCreateResponseRuleType;
}
/**
 *
 * @export
 * @interface QosRuleTypesCreateResponseRuleType
 */
export interface QosRuleTypesCreateResponseRuleType {
    /**
     *
     * @type {any}
     * @memberof QosRuleTypesCreateResponseRuleType
     */
    'type'?: any;
    /**
     *
     * @type {any}
     * @memberof QosRuleTypesCreateResponseRuleType
     */
    'drivers'?: any;
}
/**
 * Response of the qos/rule-types:get operation
 * @export
 * @interface QosRuleTypesIndexResponse
 */
export interface QosRuleTypesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QosRuleTypesIndexResponse
     */
    'rule_types'?: any;
}
/**
 * Response of the quotas/id:get operation
 * @export
 * @interface QuotaShowResponse
 */
export interface QuotaShowResponse {
    /**
     *
     * @type {QuotasDefaultDefaultResponseQuota}
     * @memberof QuotaShowResponse
     */
    'quota'?: QuotasDefaultDefaultResponseQuota;
}
/**
 * Request of the quotas/id:put operation
 * @export
 * @interface QuotaUpdateRequest
 */
export interface QuotaUpdateRequest {
    /**
     *
     * @type {QuotasDefaultDefaultResponseQuota}
     * @memberof QuotaUpdateRequest
     */
    'quota'?: QuotasDefaultDefaultResponseQuota;
}
/**
 * Response of the quotas/id:put operation
 * @export
 * @interface QuotaUpdateResponse
 */
export interface QuotaUpdateResponse {
    /**
     *
     * @type {QuotasDefaultDefaultResponseQuota}
     * @memberof QuotaUpdateResponse
     */
    'quota'?: QuotasDefaultDefaultResponseQuota;
}
/**
 * Response of the quotas/id/default:get operation
 * @export
 * @interface QuotasDefaultDefaultResponse
 */
export interface QuotasDefaultDefaultResponse {
    /**
     *
     * @type {QuotasDefaultDefaultResponseQuota}
     * @memberof QuotasDefaultDefaultResponse
     */
    'quota'?: QuotasDefaultDefaultResponseQuota;
}
/**
 *
 * @export
 * @interface QuotasDefaultDefaultResponseQuota
 */
export interface QuotasDefaultDefaultResponseQuota {
    /**
     * The number of floating IP addresses allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'floatingip'?: any;
    /**
     * The number of networks allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'network'?: any;
    /**
     * The number of ports allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'port'?: any;
    /**
     * The number of role-based access control (RBAC) policies for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'rbac_policy'?: any;
    /**
     * The number of routers allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'router'?: any;
    /**
     * The number of security groups allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'security_group'?: any;
    /**
     * The number of security group rules allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'security_group_rule'?: any;
    /**
     * The number of subnets allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'subnet'?: any;
    /**
     * The number of subnet pools allowed for each project. A value of -1 means no limit.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'subnetpool'?: any;
    /**
     * The ID of the project.
     * @type {any}
     * @memberof QuotasDefaultDefaultResponseQuota
     */
    'project_id'?: any;
}
/**
 * Response of the quotas/id/details:get operation
 * @export
 * @interface QuotasDetailsDetailsResponse
 */
export interface QuotasDetailsDetailsResponse {
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuota}
     * @memberof QuotasDetailsDetailsResponse
     */
    'quota'?: QuotasDetailsDetailsResponseQuota;
}
/**
 *
 * @export
 * @interface QuotasDetailsDetailsResponseQuota
 */
export interface QuotasDetailsDetailsResponseQuota {
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaFloatingip}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'floatingip'?: QuotasDetailsDetailsResponseQuotaFloatingip;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaNetwork}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'network'?: QuotasDetailsDetailsResponseQuotaNetwork;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaPort}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'port'?: QuotasDetailsDetailsResponseQuotaPort;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaRbacPolicy}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'rbac_policy'?: QuotasDetailsDetailsResponseQuotaRbacPolicy;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaRouter}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'router'?: QuotasDetailsDetailsResponseQuotaRouter;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaSecurityGroup}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'security_group'?: QuotasDetailsDetailsResponseQuotaSecurityGroup;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaSecurityGroupRule}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'security_group_rule'?: QuotasDetailsDetailsResponseQuotaSecurityGroupRule;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaSubnet}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'subnet'?: QuotasDetailsDetailsResponseQuotaSubnet;
    /**
     *
     * @type {QuotasDetailsDetailsResponseQuotaSubnetpool}
     * @memberof QuotasDetailsDetailsResponseQuota
     */
    'subnetpool'?: QuotasDetailsDetailsResponseQuotaSubnetpool;
}
/**
 * The number of floating IP addresses allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaFloatingip
 */
export interface QuotasDetailsDetailsResponseQuotaFloatingip {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaFloatingip
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaFloatingip
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaFloatingip
     */
    'reserved'?: any;
}
/**
 * The number of networks allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaNetwork
 */
export interface QuotasDetailsDetailsResponseQuotaNetwork {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaNetwork
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaNetwork
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaNetwork
     */
    'reserved'?: any;
}
/**
 * The number of ports allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaPort
 */
export interface QuotasDetailsDetailsResponseQuotaPort {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaPort
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaPort
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaPort
     */
    'reserved'?: any;
}
/**
 * The number of role-based access control (RBAC) policies for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaRbacPolicy
 */
export interface QuotasDetailsDetailsResponseQuotaRbacPolicy {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaRbacPolicy
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaRbacPolicy
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaRbacPolicy
     */
    'reserved'?: any;
}
/**
 * The number of routers allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaRouter
 */
export interface QuotasDetailsDetailsResponseQuotaRouter {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaRouter
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaRouter
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaRouter
     */
    'reserved'?: any;
}
/**
 * The number of security groups allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaSecurityGroup
 */
export interface QuotasDetailsDetailsResponseQuotaSecurityGroup {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSecurityGroup
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSecurityGroup
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSecurityGroup
     */
    'reserved'?: any;
}
/**
 * The number of security group rules allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaSecurityGroupRule
 */
export interface QuotasDetailsDetailsResponseQuotaSecurityGroupRule {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSecurityGroupRule
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSecurityGroupRule
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSecurityGroupRule
     */
    'reserved'?: any;
}
/**
 * The number of subnets allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaSubnet
 */
export interface QuotasDetailsDetailsResponseQuotaSubnet {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSubnet
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSubnet
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSubnet
     */
    'reserved'?: any;
}
/**
 * The number of subnet pools allowed for each project.
 * @export
 * @interface QuotasDetailsDetailsResponseQuotaSubnetpool
 */
export interface QuotasDetailsDetailsResponseQuotaSubnetpool {
    /**
     * Used quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSubnetpool
     */
    'used'?: any;
    /**
     * Current quota limit
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSubnetpool
     */
    'limit'?: any;
    /**
     * Reserved quota
     * @type {any}
     * @memberof QuotasDetailsDetailsResponseQuotaSubnetpool
     */
    'reserved'?: any;
}
/**
 * Response of the quotas:get operation
 * @export
 * @interface QuotasIndexResponse
 */
export interface QuotasIndexResponse {
    /**
     *
     * @type {any}
     * @memberof QuotasIndexResponse
     */
    'quotas'?: any;
}
/**
 * Request of the rbac-policies:post operation
 * @export
 * @interface RbacPoliciesCreateRequest
 */
export interface RbacPoliciesCreateRequest {
    /**
     *
     * @type {RbacPoliciesCreateRequestRbacPolicy}
     * @memberof RbacPoliciesCreateRequest
     */
    'rbac_policy'?: RbacPoliciesCreateRequestRbacPolicy;
}
/**
 *
 * @export
 * @interface RbacPoliciesCreateRequestRbacPolicy
 */
export interface RbacPoliciesCreateRequestRbacPolicy {
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateRequestRbacPolicy
     */
    'object_type'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateRequestRbacPolicy
     */
    'object_id'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateRequestRbacPolicy
     */
    'target_tenant'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateRequestRbacPolicy
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateRequestRbacPolicy
     */
    'action'?: any;
}
/**
 * Response of the rbac-policies:post operation
 * @export
 * @interface RbacPoliciesCreateResponse
 */
export interface RbacPoliciesCreateResponse {
    /**
     *
     * @type {RbacPoliciesCreateResponseRbacPolicy}
     * @memberof RbacPoliciesCreateResponse
     */
    'rbac_policy'?: RbacPoliciesCreateResponseRbacPolicy;
}
/**
 *
 * @export
 * @interface RbacPoliciesCreateResponseRbacPolicy
 */
export interface RbacPoliciesCreateResponseRbacPolicy {
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateResponseRbacPolicy
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateResponseRbacPolicy
     */
    'object_type'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateResponseRbacPolicy
     */
    'object_id'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateResponseRbacPolicy
     */
    'target_tenant'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateResponseRbacPolicy
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesCreateResponseRbacPolicy
     */
    'action'?: any;
}
/**
 * Response of the rbac-policies:get operation
 * @export
 * @interface RbacPoliciesIndexResponse
 */
export interface RbacPoliciesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof RbacPoliciesIndexResponse
     */
    'rbac_policies'?: any;
}
/**
 * Response of the rbac-policies/id:get operation
 * @export
 * @interface RbacPolicyShowResponse
 */
export interface RbacPolicyShowResponse {
    /**
     *
     * @type {RbacPoliciesCreateResponseRbacPolicy}
     * @memberof RbacPolicyShowResponse
     */
    'rbac_policy'?: RbacPoliciesCreateResponseRbacPolicy;
}
/**
 * Request of the rbac-policies/id:put operation
 * @export
 * @interface RbacPolicyUpdateRequest
 */
export interface RbacPolicyUpdateRequest {
    /**
     *
     * @type {RbacPolicyUpdateRequestRbacPolicy}
     * @memberof RbacPolicyUpdateRequest
     */
    'rbac_policy'?: RbacPolicyUpdateRequestRbacPolicy;
}
/**
 *
 * @export
 * @interface RbacPolicyUpdateRequestRbacPolicy
 */
export interface RbacPolicyUpdateRequestRbacPolicy {
    /**
     *
     * @type {any}
     * @memberof RbacPolicyUpdateRequestRbacPolicy
     */
    'target_tenant'?: any;
}
/**
 * Response of the rbac-policies/id:put operation
 * @export
 * @interface RbacPolicyUpdateResponse
 */
export interface RbacPolicyUpdateResponse {
    /**
     *
     * @type {RbacPoliciesCreateResponseRbacPolicy}
     * @memberof RbacPolicyUpdateResponse
     */
    'rbac_policy'?: RbacPoliciesCreateResponseRbacPolicy;
}
/**
 * Response of the routers/id:get operation
 * @export
 * @interface RouterShowResponse
 */
export interface RouterShowResponse {
    /**
     *
     * @type {RouterUpdateResponseRouter}
     * @memberof RouterShowResponse
     */
    'router'?: RouterUpdateResponseRouter;
}
/**
 * Request of the routers/id:put operation
 * @export
 * @interface RouterUpdateRequest
 */
export interface RouterUpdateRequest {
    /**
     *
     * @type {RouterUpdateRequestRouter}
     * @memberof RouterUpdateRequest
     */
    'router'?: RouterUpdateRequestRouter;
}
/**
 *
 * @export
 * @interface RouterUpdateRequestRouter
 */
export interface RouterUpdateRequestRouter {
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {RouterUpdateRequestRouterExternalGatewayInfo}
     * @memberof RouterUpdateRequestRouter
     */
    'external_gateway_info'?: RouterUpdateRequestRouterExternalGatewayInfo;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'ha'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'enable_ndp_proxy'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'distributed'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'routes'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouter
     */
    'description'?: any;
}
/**
 *
 * @export
 * @interface RouterUpdateRequestRouterExternalGatewayInfo
 */
export interface RouterUpdateRequestRouterExternalGatewayInfo {
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouterExternalGatewayInfo
     */
    'network_id': any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouterExternalGatewayInfo
     */
    'enable_snat'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateRequestRouterExternalGatewayInfo
     */
    'external_fixed_ips'?: any;
}
/**
 * Response of the routers/id:put operation
 * @export
 * @interface RouterUpdateResponse
 */
export interface RouterUpdateResponse {
    /**
     *
     * @type {RouterUpdateResponseRouter}
     * @memberof RouterUpdateResponse
     */
    'router'?: RouterUpdateResponseRouter;
}
/**
 *
 * @export
 * @interface RouterUpdateResponseRouter
 */
export interface RouterUpdateResponseRouter {
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'admin_state_up'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'status'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'tenant_id'?: any;
    /**
     *
     * @type {RouterUpdateRequestRouterExternalGatewayInfo}
     * @memberof RouterUpdateResponseRouter
     */
    'external_gateway_info'?: RouterUpdateRequestRouterExternalGatewayInfo;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'ha'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'enable_ndp_proxy'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'flavor_id'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'availability_zones'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'availability_zone_hints'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'distributed'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'conntrack_helpers'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'routes'?: any;
    /**
     *
     * @type {any}
     * @memberof RouterUpdateResponseRouter
     */
    'description'?: any;
}
/**
 * Request body
 * @export
 * @interface RoutersAddExternalGatewaysAddExternalGatewaysRequest
 */
export interface RoutersAddExternalGatewaysAddExternalGatewaysRequest {
    /**
     *
     * @type {RoutersAddExternalGatewaysAddExternalGatewaysRequestRouter}
     * @memberof RoutersAddExternalGatewaysAddExternalGatewaysRequest
     */
    'router'?: RoutersAddExternalGatewaysAddExternalGatewaysRequestRouter;
}
/**
 *
 * @export
 * @interface RoutersAddExternalGatewaysAddExternalGatewaysRequestRouter
 */
export interface RoutersAddExternalGatewaysAddExternalGatewaysRequestRouter {
    /**
     * The list of external gateways of the router.
     * @type {any}
     * @memberof RoutersAddExternalGatewaysAddExternalGatewaysRequestRouter
     */
    'external_gateways'?: any;
}
/**
 * Request body
 * @export
 * @interface RoutersAddExternalGatewaysAddExternalGatewaysResponse
 */
export interface RoutersAddExternalGatewaysAddExternalGatewaysResponse {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesRequestRouter}
     * @memberof RoutersAddExternalGatewaysAddExternalGatewaysResponse
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesRequestRouter;
}
/**
 * Request body
 * @export
 * @interface RoutersAddExtraroutesAddExtraroutesRequest
 */
export interface RoutersAddExtraroutesAddExtraroutesRequest {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesRequestRouter}
     * @memberof RoutersAddExtraroutesAddExtraroutesRequest
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesRequestRouter;
}
/**
 *
 * @export
 * @interface RoutersAddExtraroutesAddExtraroutesRequestRouter
 */
export interface RoutersAddExtraroutesAddExtraroutesRequestRouter {
    /**
     * The extra routes configuration for L3 router. A list of dictionaries with destination and nexthop parameters. It is available when extraroute extension is enabled.
     * @type {any}
     * @memberof RoutersAddExtraroutesAddExtraroutesRequestRouter
     */
    'routes'?: any;
}
/**
 *
 * @export
 * @interface RoutersAddExtraroutesAddExtraroutesResponse
 */
export interface RoutersAddExtraroutesAddExtraroutesResponse {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesResponseRouter}
     * @memberof RoutersAddExtraroutesAddExtraroutesResponse
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesResponseRouter;
}
/**
 *
 * @export
 * @interface RoutersAddExtraroutesAddExtraroutesResponseRouter
 */
export interface RoutersAddExtraroutesAddExtraroutesResponseRouter {
    /**
     * The ID of the router.
     * @type {any}
     * @memberof RoutersAddExtraroutesAddExtraroutesResponseRouter
     */
    'id'?: any;
    /**
     * The name of the router.
     * @type {any}
     * @memberof RoutersAddExtraroutesAddExtraroutesResponseRouter
     */
    'name'?: any;
    /**
     * The extra routes configuration for L3 router. A list of dictionaries with destination and nexthop parameters. It is available when extraroute extension is enabled.
     * @type {any}
     * @memberof RoutersAddExtraroutesAddExtraroutesResponseRouter
     */
    'routes'?: any;
}
/**
 * @type RoutersAddRouterInterfaceAddRouterInterfaceRequest
 * Request body
 * @export
 */
export type RoutersAddRouterInterfaceAddRouterInterfaceRequest = any;
/**
 *
 * @export
 * @interface RoutersAddRouterInterfaceAddRouterInterfaceResponse
 */
export interface RoutersAddRouterInterfaceAddRouterInterfaceResponse {
    /**
     * The ID of the router.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'id'?: any;
    /**
     * The ID of the subnet which the router interface belongs to.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'subnet_id'?: any;
    /**
     * A list of the ID of the subnet which the router interface belongs to. The list contains only one member.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'subnet_ids'?: any;
    /**
     * The ID of the project who owns the router interface.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'tenant_id'?: any;
    /**
     * The ID of the project who owns the router interface.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'project_id'?: any;
    /**
     * The ID of the port which represents the router interface.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'port_id'?: any;
    /**
     * Network ID which the router interface is connected to.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'network_id'?: any;
    /**
     * The list of tags on the resource.
     * @type {any}
     * @memberof RoutersAddRouterInterfaceAddRouterInterfaceResponse
     */
    'tags'?: any;
}
/**
 * Response of the routers/router_id/conntrack_helpers/id:get operation
 * @export
 * @interface RoutersConntrackHelperShowResponse
 */
export interface RoutersConntrackHelperShowResponse {
    /**
     *
     * @type {RoutersConntrackHelpersCreateResponseConntrackHelper}
     * @memberof RoutersConntrackHelperShowResponse
     */
    'conntrack_helper'?: RoutersConntrackHelpersCreateResponseConntrackHelper;
}
/**
 * Request of the routers/router_id/conntrack_helpers/id:put operation
 * @export
 * @interface RoutersConntrackHelperUpdateRequest
 */
export interface RoutersConntrackHelperUpdateRequest {
    /**
     *
     * @type {RoutersConntrackHelperUpdateRequestConntrackHelper}
     * @memberof RoutersConntrackHelperUpdateRequest
     */
    'conntrack_helper'?: RoutersConntrackHelperUpdateRequestConntrackHelper;
}
/**
 *
 * @export
 * @interface RoutersConntrackHelperUpdateRequestConntrackHelper
 */
export interface RoutersConntrackHelperUpdateRequestConntrackHelper {
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelperUpdateRequestConntrackHelper
     */
    'protocol'?: RoutersConntrackHelperUpdateRequestConntrackHelperProtocolEnum;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelperUpdateRequestConntrackHelper
     */
    'port'?: any;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelperUpdateRequestConntrackHelper
     */
    'helper'?: any;
}
export declare const RoutersConntrackHelperUpdateRequestConntrackHelperProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type RoutersConntrackHelperUpdateRequestConntrackHelperProtocolEnum = typeof RoutersConntrackHelperUpdateRequestConntrackHelperProtocolEnum[keyof typeof RoutersConntrackHelperUpdateRequestConntrackHelperProtocolEnum];
/**
 * Response of the routers/router_id/conntrack_helpers/id:put operation
 * @export
 * @interface RoutersConntrackHelperUpdateResponse
 */
export interface RoutersConntrackHelperUpdateResponse {
    /**
     *
     * @type {RoutersConntrackHelpersCreateResponseConntrackHelper}
     * @memberof RoutersConntrackHelperUpdateResponse
     */
    'conntrack_helper'?: RoutersConntrackHelpersCreateResponseConntrackHelper;
}
/**
 * Request of the routers/router_id/conntrack_helpers:post operation
 * @export
 * @interface RoutersConntrackHelpersCreateRequest
 */
export interface RoutersConntrackHelpersCreateRequest {
    /**
     *
     * @type {RoutersConntrackHelpersCreateRequestConntrackHelper}
     * @memberof RoutersConntrackHelpersCreateRequest
     */
    'conntrack_helper'?: RoutersConntrackHelpersCreateRequestConntrackHelper;
}
/**
 *
 * @export
 * @interface RoutersConntrackHelpersCreateRequestConntrackHelper
 */
export interface RoutersConntrackHelpersCreateRequestConntrackHelper {
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateRequestConntrackHelper
     */
    'project_id'?: any;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateRequestConntrackHelper
     */
    'protocol'?: RoutersConntrackHelpersCreateRequestConntrackHelperProtocolEnum;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateRequestConntrackHelper
     */
    'port'?: any;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateRequestConntrackHelper
     */
    'helper'?: any;
}
export declare const RoutersConntrackHelpersCreateRequestConntrackHelperProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type RoutersConntrackHelpersCreateRequestConntrackHelperProtocolEnum = typeof RoutersConntrackHelpersCreateRequestConntrackHelperProtocolEnum[keyof typeof RoutersConntrackHelpersCreateRequestConntrackHelperProtocolEnum];
/**
 * Response of the routers/router_id/conntrack_helpers:post operation
 * @export
 * @interface RoutersConntrackHelpersCreateResponse
 */
export interface RoutersConntrackHelpersCreateResponse {
    /**
     *
     * @type {RoutersConntrackHelpersCreateResponseConntrackHelper}
     * @memberof RoutersConntrackHelpersCreateResponse
     */
    'conntrack_helper'?: RoutersConntrackHelpersCreateResponseConntrackHelper;
}
/**
 *
 * @export
 * @interface RoutersConntrackHelpersCreateResponseConntrackHelper
 */
export interface RoutersConntrackHelpersCreateResponseConntrackHelper {
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateResponseConntrackHelper
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateResponseConntrackHelper
     */
    'protocol'?: RoutersConntrackHelpersCreateResponseConntrackHelperProtocolEnum;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateResponseConntrackHelper
     */
    'port'?: any;
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersCreateResponseConntrackHelper
     */
    'helper'?: any;
}
export declare const RoutersConntrackHelpersCreateResponseConntrackHelperProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type RoutersConntrackHelpersCreateResponseConntrackHelperProtocolEnum = typeof RoutersConntrackHelpersCreateResponseConntrackHelperProtocolEnum[keyof typeof RoutersConntrackHelpersCreateResponseConntrackHelperProtocolEnum];
/**
 * Response of the routers/router_id/conntrack_helpers:get operation
 * @export
 * @interface RoutersConntrackHelpersIndexResponse
 */
export interface RoutersConntrackHelpersIndexResponse {
    /**
     *
     * @type {any}
     * @memberof RoutersConntrackHelpersIndexResponse
     */
    'conntrack_helpers'?: any;
}
/**
 * Request of the routers:post operation
 * @export
 * @interface RoutersCreateRequest
 */
export interface RoutersCreateRequest {
    /**
     *
     * @type {RoutersCreateRequestRouter}
     * @memberof RoutersCreateRequest
     */
    'router'?: RoutersCreateRequestRouter;
}
/**
 *
 * @export
 * @interface RoutersCreateRequestRouter
 */
export interface RoutersCreateRequestRouter {
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouter
     */
    'name'?: string;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof RoutersCreateRequestRouter
     */
    'admin_state_up'?: AddressScopesCreateRequestAddressScopeShared;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouter
     */
    'tenant_id'?: string;
    /**
     *
     * @type {RoutersCreateRequestRouterExternalGatewayInfo}
     * @memberof RoutersCreateRequestRouter
     */
    'external_gateway_info'?: RoutersCreateRequestRouterExternalGatewayInfo;
    /**
     *
     * @type {RoutersCreateRequestRouterHa}
     * @memberof RoutersCreateRequestRouter
     */
    'ha'?: RoutersCreateRequestRouterHa | null;
    /**
     *
     * @type {RoutersCreateRequestRouterHa}
     * @memberof RoutersCreateRequestRouter
     */
    'enable_ndp_proxy'?: RoutersCreateRequestRouterHa | null;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouter
     */
    'flavor_id'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof RoutersCreateRequestRouter
     */
    'availability_zone_hints'?: Array<string>;
    /**
     *
     * @type {RoutersCreateRequestRouterHa}
     * @memberof RoutersCreateRequestRouter
     */
    'distributed'?: RoutersCreateRequestRouterHa | null;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouter
     */
    'description'?: string;
}
/**
 *
 * @export
 * @interface RoutersCreateRequestRouterExternalGatewayInfo
 */
export interface RoutersCreateRequestRouterExternalGatewayInfo {
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouterExternalGatewayInfo
     */
    'network_id': string;
    /**
     *
     * @type {boolean}
     * @memberof RoutersCreateRequestRouterExternalGatewayInfo
     */
    'enable_snat'?: boolean;
    /**
     *
     * @type {Array<RoutersCreateRequestRouterExternalGatewayInfoExternalFixedIpsInner>}
     * @memberof RoutersCreateRequestRouterExternalGatewayInfo
     */
    'external_fixed_ips'?: Array<RoutersCreateRequestRouterExternalGatewayInfoExternalFixedIpsInner>;
}
/**
 *
 * @export
 * @interface RoutersCreateRequestRouterExternalGatewayInfoExternalFixedIpsInner
 */
export interface RoutersCreateRequestRouterExternalGatewayInfoExternalFixedIpsInner {
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouterExternalGatewayInfoExternalFixedIpsInner
     */
    'ip_address'?: string;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateRequestRouterExternalGatewayInfoExternalFixedIpsInner
     */
    'subnet_id'?: string;
}
/**
 *
 * @export
 * @interface RoutersCreateRequestRouterHa
 */
export interface RoutersCreateRequestRouterHa {
}
/**
 * Response of the routers:post operation
 * @export
 * @interface RoutersCreateResponse
 */
export interface RoutersCreateResponse {
    /**
     *
     * @type {RoutersCreateResponseRouter}
     * @memberof RoutersCreateResponse
     */
    'router'?: RoutersCreateResponseRouter;
}
/**
 *
 * @export
 * @interface RoutersCreateResponseRouter
 */
export interface RoutersCreateResponseRouter {
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'name'?: string;
    /**
     *
     * @type {AddressScopesCreateRequestAddressScopeShared}
     * @memberof RoutersCreateResponseRouter
     */
    'admin_state_up'?: AddressScopesCreateRequestAddressScopeShared;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'status'?: string;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'tenant_id'?: string;
    /**
     *
     * @type {RoutersCreateRequestRouterExternalGatewayInfo}
     * @memberof RoutersCreateResponseRouter
     */
    'external_gateway_info'?: RoutersCreateRequestRouterExternalGatewayInfo;
    /**
     *
     * @type {RoutersCreateRequestRouterHa}
     * @memberof RoutersCreateResponseRouter
     */
    'ha'?: RoutersCreateRequestRouterHa | null;
    /**
     *
     * @type {RoutersCreateRequestRouterHa}
     * @memberof RoutersCreateResponseRouter
     */
    'enable_ndp_proxy'?: RoutersCreateRequestRouterHa | null;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'flavor_id'?: string;
    /**
     *
     * @type {number}
     * @memberof RoutersCreateResponseRouter
     */
    'revision_number'?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof RoutersCreateResponseRouter
     */
    'availability_zones'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RoutersCreateResponseRouter
     */
    'availability_zone_hints'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof RoutersCreateResponseRouter
     */
    'tags'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'created_at'?: string;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'updated_at'?: string;
    /**
     *
     * @type {RoutersCreateRequestRouterHa}
     * @memberof RoutersCreateResponseRouter
     */
    'distributed'?: RoutersCreateRequestRouterHa | null;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'conntrack_helpers'?: string;
    /**
     *
     * @type {Array<RoutersCreateResponseRouterRoutesInner>}
     * @memberof RoutersCreateResponseRouter
     */
    'routes'?: Array<RoutersCreateResponseRouterRoutesInner>;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouter
     */
    'description'?: string;
}
/**
 *
 * @export
 * @interface RoutersCreateResponseRouterRoutesInner
 */
export interface RoutersCreateResponseRouterRoutesInner {
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouterRoutesInner
     */
    'destination'?: string;
    /**
     *
     * @type {string}
     * @memberof RoutersCreateResponseRouterRoutesInner
     */
    'nexthop'?: string;
}
/**
 * Response of the routers:get operation
 * @export
 * @interface RoutersIndexResponse
 */
export interface RoutersIndexResponse {
    /**
     *
     * @type {Array<RoutersCreateResponseRouter>}
     * @memberof RoutersIndexResponse
     */
    'routers'?: Array<RoutersCreateResponseRouter>;
}
/**
 * Request body
 * @export
 * @interface RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest
 */
export interface RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest {
    /**
     *
     * @type {RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequestRouter}
     * @memberof RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest
     */
    'router'?: RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequestRouter;
}
/**
 *
 * @export
 * @interface RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequestRouter
 */
export interface RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequestRouter {
    /**
     * The list of external gateways of the router.
     * @type {any}
     * @memberof RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequestRouter
     */
    'external_gateways'?: any;
}
/**
 * Request body
 * @export
 * @interface RoutersRemoveExternalGatewaysRemoveExternalGatewaysResponse
 */
export interface RoutersRemoveExternalGatewaysRemoveExternalGatewaysResponse {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesRequestRouter}
     * @memberof RoutersRemoveExternalGatewaysRemoveExternalGatewaysResponse
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesRequestRouter;
}
/**
 * Request body
 * @export
 * @interface RoutersRemoveExtraroutesRemoveExtraroutesRequest
 */
export interface RoutersRemoveExtraroutesRemoveExtraroutesRequest {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesRequestRouter}
     * @memberof RoutersRemoveExtraroutesRemoveExtraroutesRequest
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesRequestRouter;
}
/**
 *
 * @export
 * @interface RoutersRemoveExtraroutesRemoveExtraroutesResponse
 */
export interface RoutersRemoveExtraroutesRemoveExtraroutesResponse {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesResponseRouter}
     * @memberof RoutersRemoveExtraroutesRemoveExtraroutesResponse
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesResponseRouter;
}
/**
 * @type RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest
 * Request body
 * @export
 */
export type RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest = any;
/**
 *
 * @export
 * @interface RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
 */
export interface RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse {
    /**
     * The ID of the router.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'id'?: any;
    /**
     * The ID of the subnet which the router interface belongs to.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'subnet_id'?: any;
    /**
     * A list of the ID of the subnet which the router interface belongs to. The list contains only one member.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'subnet_ids'?: any;
    /**
     * The ID of the project who owns the router interface.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'tenant_id'?: any;
    /**
     * The ID of the project who owns the router interface.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'project_id'?: any;
    /**
     * The ID of the port which represents the router interface.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'port_id'?: any;
    /**
     * Network ID which the router interface is connected to.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'network_id'?: any;
    /**
     * The list of tags on the resource.
     * @type {any}
     * @memberof RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse
     */
    'tags'?: any;
}
/**
 * Response of the routers/router_id/tags:get operation
 * @export
 * @interface RoutersTagsIndexResponse
 */
export interface RoutersTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof RoutersTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the routers/router_id/tags:put operation
 * @export
 * @interface RoutersTagsUpdateAllRequest
 */
export interface RoutersTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof RoutersTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the routers/router_id/tags:put operation
 * @export
 * @interface RoutersTagsUpdateAllResponse
 */
export interface RoutersTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof RoutersTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Request body
 * @export
 * @interface RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest
 */
export interface RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest {
    /**
     *
     * @type {RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequestRouter}
     * @memberof RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest
     */
    'router'?: RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequestRouter;
}
/**
 *
 * @export
 * @interface RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequestRouter
 */
export interface RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequestRouter {
    /**
     * The list of external gateways of the router.
     * @type {any}
     * @memberof RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequestRouter
     */
    'external_gateways'?: any;
}
/**
 * Request body
 * @export
 * @interface RoutersUpdateExternalGatewaysUpdateExternalGatewaysResponse
 */
export interface RoutersUpdateExternalGatewaysUpdateExternalGatewaysResponse {
    /**
     *
     * @type {RoutersAddExtraroutesAddExtraroutesRequestRouter}
     * @memberof RoutersUpdateExternalGatewaysUpdateExternalGatewaysResponse
     */
    'router'?: RoutersAddExtraroutesAddExtraroutesRequestRouter;
}
/**
 * Response of the security-group-rules/id:get operation
 * @export
 * @interface SecurityGroupRuleShowResponse
 */
export interface SecurityGroupRuleShowResponse {
    /**
     *
     * @type {SecurityGroupRulesCreateResponseSecurityGroupRule}
     * @memberof SecurityGroupRuleShowResponse
     */
    'security_group_rule'?: SecurityGroupRulesCreateResponseSecurityGroupRule;
}
/**
 * Request of the security-group-rules/id:put operation
 * @export
 * @interface SecurityGroupRuleUpdateRequest
 */
export interface SecurityGroupRuleUpdateRequest {
    /**
     *
     * @type {SecurityGroupRuleUpdateRequestSecurityGroupRule}
     * @memberof SecurityGroupRuleUpdateRequest
     */
    'security_group_rule'?: SecurityGroupRuleUpdateRequestSecurityGroupRule;
}
/**
 *
 * @export
 * @interface SecurityGroupRuleUpdateRequestSecurityGroupRule
 */
export interface SecurityGroupRuleUpdateRequestSecurityGroupRule {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRuleUpdateRequestSecurityGroupRule
     */
    'description'?: any;
}
/**
 * Response of the security-group-rules/id:put operation
 * @export
 * @interface SecurityGroupRuleUpdateResponse
 */
export interface SecurityGroupRuleUpdateResponse {
    /**
     *
     * @type {SecurityGroupRulesCreateResponseSecurityGroupRule}
     * @memberof SecurityGroupRuleUpdateResponse
     */
    'security_group_rule'?: SecurityGroupRulesCreateResponseSecurityGroupRule;
}
/**
 * Request of the security-group-rules:post operation
 * @export
 * @interface SecurityGroupRulesCreateRequest
 */
export interface SecurityGroupRulesCreateRequest {
    /**
     *
     * @type {SecurityGroupRulesCreateRequestSecurityGroupRule}
     * @memberof SecurityGroupRulesCreateRequest
     */
    'security_group_rule'?: SecurityGroupRulesCreateRequestSecurityGroupRule;
}
/**
 *
 * @export
 * @interface SecurityGroupRulesCreateRequestSecurityGroupRule
 */
export interface SecurityGroupRulesCreateRequestSecurityGroupRule {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'security_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'remote_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'direction'?: SecurityGroupRulesCreateRequestSecurityGroupRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'protocol'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'port_range_min'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'port_range_max'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'ethertype'?: SecurityGroupRulesCreateRequestSecurityGroupRuleEthertypeEnum;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'remote_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateRequestSecurityGroupRule
     */
    'remote_address_group_id'?: any;
}
export declare const SecurityGroupRulesCreateRequestSecurityGroupRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type SecurityGroupRulesCreateRequestSecurityGroupRuleDirectionEnum = typeof SecurityGroupRulesCreateRequestSecurityGroupRuleDirectionEnum[keyof typeof SecurityGroupRulesCreateRequestSecurityGroupRuleDirectionEnum];
export declare const SecurityGroupRulesCreateRequestSecurityGroupRuleEthertypeEnum: {
    readonly Ipv4: "IPv4";
    readonly Ipv6: "IPv6";
};
export type SecurityGroupRulesCreateRequestSecurityGroupRuleEthertypeEnum = typeof SecurityGroupRulesCreateRequestSecurityGroupRuleEthertypeEnum[keyof typeof SecurityGroupRulesCreateRequestSecurityGroupRuleEthertypeEnum];
/**
 * Response of the security-group-rules:post operation
 * @export
 * @interface SecurityGroupRulesCreateResponse
 */
export interface SecurityGroupRulesCreateResponse {
    /**
     *
     * @type {SecurityGroupRulesCreateResponseSecurityGroupRule}
     * @memberof SecurityGroupRulesCreateResponse
     */
    'security_group_rule'?: SecurityGroupRulesCreateResponseSecurityGroupRule;
}
/**
 *
 * @export
 * @interface SecurityGroupRulesCreateResponseSecurityGroupRule
 */
export interface SecurityGroupRulesCreateResponseSecurityGroupRule {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'security_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'remote_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'direction'?: SecurityGroupRulesCreateResponseSecurityGroupRuleDirectionEnum;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'protocol'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'port_range_min'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'port_range_max'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'ethertype'?: SecurityGroupRulesCreateResponseSecurityGroupRuleEthertypeEnum;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'remote_ip_prefix'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'normalized_cidr'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'remote_address_group_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesCreateResponseSecurityGroupRule
     */
    'belongs_to_default_sg'?: any;
}
export declare const SecurityGroupRulesCreateResponseSecurityGroupRuleDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type SecurityGroupRulesCreateResponseSecurityGroupRuleDirectionEnum = typeof SecurityGroupRulesCreateResponseSecurityGroupRuleDirectionEnum[keyof typeof SecurityGroupRulesCreateResponseSecurityGroupRuleDirectionEnum];
export declare const SecurityGroupRulesCreateResponseSecurityGroupRuleEthertypeEnum: {
    readonly Ipv4: "IPv4";
    readonly Ipv6: "IPv6";
};
export type SecurityGroupRulesCreateResponseSecurityGroupRuleEthertypeEnum = typeof SecurityGroupRulesCreateResponseSecurityGroupRuleEthertypeEnum[keyof typeof SecurityGroupRulesCreateResponseSecurityGroupRuleEthertypeEnum];
/**
 * Response of the security-group-rules:get operation
 * @export
 * @interface SecurityGroupRulesIndexResponse
 */
export interface SecurityGroupRulesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupRulesIndexResponse
     */
    'security_group_rules'?: any;
}
/**
 * Response of the security-groups/id:get operation
 * @export
 * @interface SecurityGroupShowResponse
 */
export interface SecurityGroupShowResponse {
    /**
     *
     * @type {SecurityGroupsCreateResponseSecurityGroup}
     * @memberof SecurityGroupShowResponse
     */
    'security_group'?: SecurityGroupsCreateResponseSecurityGroup;
}
/**
 * Request of the security-groups/id:put operation
 * @export
 * @interface SecurityGroupUpdateRequest
 */
export interface SecurityGroupUpdateRequest {
    /**
     *
     * @type {SecurityGroupUpdateRequestSecurityGroup}
     * @memberof SecurityGroupUpdateRequest
     */
    'security_group'?: SecurityGroupUpdateRequestSecurityGroup;
}
/**
 *
 * @export
 * @interface SecurityGroupUpdateRequestSecurityGroup
 */
export interface SecurityGroupUpdateRequestSecurityGroup {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupUpdateRequestSecurityGroup
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupUpdateRequestSecurityGroup
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupUpdateRequestSecurityGroup
     */
    'stateful'?: any;
}
/**
 * Response of the security-groups/id:put operation
 * @export
 * @interface SecurityGroupUpdateResponse
 */
export interface SecurityGroupUpdateResponse {
    /**
     *
     * @type {SecurityGroupsCreateResponseSecurityGroup}
     * @memberof SecurityGroupUpdateResponse
     */
    'security_group'?: SecurityGroupsCreateResponseSecurityGroup;
}
/**
 * Request of the security-groups:post operation
 * @export
 * @interface SecurityGroupsCreateRequest
 */
export interface SecurityGroupsCreateRequest {
    /**
     *
     * @type {SecurityGroupsCreateRequestSecurityGroup}
     * @memberof SecurityGroupsCreateRequest
     */
    'security_group'?: SecurityGroupsCreateRequestSecurityGroup;
}
/**
 *
 * @export
 * @interface SecurityGroupsCreateRequestSecurityGroup
 */
export interface SecurityGroupsCreateRequestSecurityGroup {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateRequestSecurityGroup
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateRequestSecurityGroup
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateRequestSecurityGroup
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateRequestSecurityGroup
     */
    'stateful'?: any;
}
/**
 * Response of the security-groups:post operation
 * @export
 * @interface SecurityGroupsCreateResponse
 */
export interface SecurityGroupsCreateResponse {
    /**
     *
     * @type {SecurityGroupsCreateResponseSecurityGroup}
     * @memberof SecurityGroupsCreateResponse
     */
    'security_group'?: SecurityGroupsCreateResponseSecurityGroup;
}
/**
 *
 * @export
 * @interface SecurityGroupsCreateResponseSecurityGroup
 */
export interface SecurityGroupsCreateResponseSecurityGroup {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'tenant_id'?: any;
    /**
     * A list of security_group_rule objects.
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'security_group_rules'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'stateful'?: any;
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsCreateResponseSecurityGroup
     */
    'shared'?: any;
}
/**
 * Response of the security-groups:get operation
 * @export
 * @interface SecurityGroupsIndexResponse
 */
export interface SecurityGroupsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsIndexResponse
     */
    'security_groups'?: any;
}
/**
 * Response of the security-groups/security_group_id/tags:get operation
 * @export
 * @interface SecurityGroupsTagsIndexResponse
 */
export interface SecurityGroupsTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the security-groups/security_group_id/tags:put operation
 * @export
 * @interface SecurityGroupsTagsUpdateAllRequest
 */
export interface SecurityGroupsTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the security-groups/security_group_id/tags:put operation
 * @export
 * @interface SecurityGroupsTagsUpdateAllResponse
 */
export interface SecurityGroupsTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof SecurityGroupsTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the segments/id:get operation
 * @export
 * @interface SegmentShowResponse
 */
export interface SegmentShowResponse {
    /**
     *
     * @type {SegmentsCreateResponseSegment}
     * @memberof SegmentShowResponse
     */
    'segment'?: SegmentsCreateResponseSegment;
}
/**
 * Request of the segments/id:put operation
 * @export
 * @interface SegmentUpdateRequest
 */
export interface SegmentUpdateRequest {
    /**
     *
     * @type {NdpProxyUpdateRequestNdpProxy}
     * @memberof SegmentUpdateRequest
     */
    'segment'?: NdpProxyUpdateRequestNdpProxy;
}
/**
 * Response of the segments/id:put operation
 * @export
 * @interface SegmentUpdateResponse
 */
export interface SegmentUpdateResponse {
    /**
     *
     * @type {SegmentsCreateResponseSegment}
     * @memberof SegmentUpdateResponse
     */
    'segment'?: SegmentsCreateResponseSegment;
}
/**
 * Request of the segments:post operation
 * @export
 * @interface SegmentsCreateRequest
 */
export interface SegmentsCreateRequest {
    /**
     *
     * @type {SegmentsCreateRequestSegment}
     * @memberof SegmentsCreateRequest
     */
    'segment'?: SegmentsCreateRequestSegment;
}
/**
 *
 * @export
 * @interface SegmentsCreateRequestSegment
 */
export interface SegmentsCreateRequestSegment {
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'network_type'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'segmentation_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateRequestSegment
     */
    'description'?: any;
}
/**
 * Response of the segments:post operation
 * @export
 * @interface SegmentsCreateResponse
 */
export interface SegmentsCreateResponse {
    /**
     *
     * @type {SegmentsCreateResponseSegment}
     * @memberof SegmentsCreateResponse
     */
    'segment'?: SegmentsCreateResponseSegment;
}
/**
 *
 * @export
 * @interface SegmentsCreateResponseSegment
 */
export interface SegmentsCreateResponseSegment {
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'physical_network'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'network_type'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'segmentation_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SegmentsCreateResponseSegment
     */
    'description'?: any;
}
/**
 * Response of the segments:get operation
 * @export
 * @interface SegmentsIndexResponse
 */
export interface SegmentsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SegmentsIndexResponse
     */
    'segments'?: any;
}
/**
 * Response of the service_profiles/id:get operation
 * @export
 * @interface ServiceProfileShowResponse
 */
export interface ServiceProfileShowResponse {
    /**
     *
     * @type {ServiceProfilesCreateResponseServiceProfile}
     * @memberof ServiceProfileShowResponse
     */
    'service_profile'?: ServiceProfilesCreateResponseServiceProfile;
}
/**
 * Request of the service_profiles/id:put operation
 * @export
 * @interface ServiceProfileUpdateRequest
 */
export interface ServiceProfileUpdateRequest {
    /**
     *
     * @type {ServiceProfilesCreateRequestServiceProfile}
     * @memberof ServiceProfileUpdateRequest
     */
    'service_profile'?: ServiceProfilesCreateRequestServiceProfile;
}
/**
 * Response of the service_profiles/id:put operation
 * @export
 * @interface ServiceProfileUpdateResponse
 */
export interface ServiceProfileUpdateResponse {
    /**
     *
     * @type {ServiceProfilesCreateResponseServiceProfile}
     * @memberof ServiceProfileUpdateResponse
     */
    'service_profile'?: ServiceProfilesCreateResponseServiceProfile;
}
/**
 * Request of the service_profiles:post operation
 * @export
 * @interface ServiceProfilesCreateRequest
 */
export interface ServiceProfilesCreateRequest {
    /**
     *
     * @type {ServiceProfilesCreateRequestServiceProfile}
     * @memberof ServiceProfilesCreateRequest
     */
    'service_profile'?: ServiceProfilesCreateRequestServiceProfile;
}
/**
 *
 * @export
 * @interface ServiceProfilesCreateRequestServiceProfile
 */
export interface ServiceProfilesCreateRequestServiceProfile {
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateRequestServiceProfile
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateRequestServiceProfile
     */
    'driver'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateRequestServiceProfile
     */
    'metainfo'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateRequestServiceProfile
     */
    'enabled'?: any;
}
/**
 * Response of the service_profiles:post operation
 * @export
 * @interface ServiceProfilesCreateResponse
 */
export interface ServiceProfilesCreateResponse {
    /**
     *
     * @type {ServiceProfilesCreateResponseServiceProfile}
     * @memberof ServiceProfilesCreateResponse
     */
    'service_profile'?: ServiceProfilesCreateResponseServiceProfile;
}
/**
 *
 * @export
 * @interface ServiceProfilesCreateResponseServiceProfile
 */
export interface ServiceProfilesCreateResponseServiceProfile {
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateResponseServiceProfile
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateResponseServiceProfile
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateResponseServiceProfile
     */
    'driver'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateResponseServiceProfile
     */
    'metainfo'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesCreateResponseServiceProfile
     */
    'enabled'?: any;
}
/**
 * Response of the service_profiles:get operation
 * @export
 * @interface ServiceProfilesIndexResponse
 */
export interface ServiceProfilesIndexResponse {
    /**
     *
     * @type {any}
     * @memberof ServiceProfilesIndexResponse
     */
    'service_profiles'?: any;
}
/**
 * Response of the service-providers/id:get operation
 * @export
 * @interface ServiceProviderShowResponse
 */
export interface ServiceProviderShowResponse {
    /**
     *
     * @type {ServiceProvidersCreateResponseServiceProvider}
     * @memberof ServiceProviderShowResponse
     */
    'service_provider'?: ServiceProvidersCreateResponseServiceProvider;
}
/**
 * Request of the service-providers/id:put operation
 * @export
 * @interface ServiceProviderUpdateRequest
 */
export interface ServiceProviderUpdateRequest {
    /**
     *
     * @type {any}
     * @memberof ServiceProviderUpdateRequest
     */
    'service_provider'?: any;
}
/**
 * Response of the service-providers/id:put operation
 * @export
 * @interface ServiceProviderUpdateResponse
 */
export interface ServiceProviderUpdateResponse {
    /**
     *
     * @type {ServiceProvidersCreateResponseServiceProvider}
     * @memberof ServiceProviderUpdateResponse
     */
    'service_provider'?: ServiceProvidersCreateResponseServiceProvider;
}
/**
 * Request of the service-providers:post operation
 * @export
 * @interface ServiceProvidersCreateRequest
 */
export interface ServiceProvidersCreateRequest {
    /**
     *
     * @type {any}
     * @memberof ServiceProvidersCreateRequest
     */
    'service_provider'?: any;
}
/**
 * Response of the service-providers:post operation
 * @export
 * @interface ServiceProvidersCreateResponse
 */
export interface ServiceProvidersCreateResponse {
    /**
     *
     * @type {ServiceProvidersCreateResponseServiceProvider}
     * @memberof ServiceProvidersCreateResponse
     */
    'service_provider'?: ServiceProvidersCreateResponseServiceProvider;
}
/**
 *
 * @export
 * @interface ServiceProvidersCreateResponseServiceProvider
 */
export interface ServiceProvidersCreateResponseServiceProvider {
    /**
     *
     * @type {any}
     * @memberof ServiceProvidersCreateResponseServiceProvider
     */
    'service_type'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProvidersCreateResponseServiceProvider
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof ServiceProvidersCreateResponseServiceProvider
     */
    'default'?: any;
}
/**
 * Response of the service-providers:get operation
 * @export
 * @interface ServiceProvidersIndexResponse
 */
export interface ServiceProvidersIndexResponse {
    /**
     *
     * @type {any}
     * @memberof ServiceProvidersIndexResponse
     */
    'service_providers'?: any;
}
/**
 * Response of the subnets/subnet_id:get operation
 * @export
 * @interface SubnetShowResponse
 */
export interface SubnetShowResponse {
    /**
     *
     * @type {SubnetsCreateResponseSubnet}
     * @memberof SubnetShowResponse
     */
    'subnet'?: SubnetsCreateResponseSubnet;
}
/**
 * Request of the subnets/subnet_id:put operation
 * @export
 * @interface SubnetUpdateRequest
 */
export interface SubnetUpdateRequest {
    /**
     *
     * @type {SubnetUpdateRequestSubnet}
     * @memberof SubnetUpdateRequest
     */
    'subnet'?: SubnetUpdateRequestSubnet;
}
/**
 *
 * @export
 * @interface SubnetUpdateRequestSubnet
 */
export interface SubnetUpdateRequestSubnet {
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'gateway_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'allocation_pools'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'dns_nameservers'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'host_routes'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'enable_dhcp'?: any;
    /**
     * The service types associated with the subnet
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'service_types'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'dns_publish_fixed_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetUpdateRequestSubnet
     */
    'segment_id'?: any;
}
/**
 * Response of the subnets/subnet_id:put operation
 * @export
 * @interface SubnetUpdateResponse
 */
export interface SubnetUpdateResponse {
    /**
     *
     * @type {SubnetsCreateResponseSubnet}
     * @memberof SubnetUpdateResponse
     */
    'subnet'?: SubnetsCreateResponseSubnet;
}
/**
 * Response of the subnetpools/id:get operation
 * @export
 * @interface SubnetpoolShowResponse
 */
export interface SubnetpoolShowResponse {
    /**
     *
     * @type {SubnetpoolsCreateResponseSubnetpool}
     * @memberof SubnetpoolShowResponse
     */
    'subnetpool'?: SubnetpoolsCreateResponseSubnetpool;
}
/**
 * Request of the subnetpools/id:put operation
 * @export
 * @interface SubnetpoolUpdateRequest
 */
export interface SubnetpoolUpdateRequest {
    /**
     *
     * @type {SubnetpoolUpdateRequestSubnetpool}
     * @memberof SubnetpoolUpdateRequest
     */
    'subnetpool'?: SubnetpoolUpdateRequestSubnetpool;
}
/**
 *
 * @export
 * @interface SubnetpoolUpdateRequestSubnetpool
 */
export interface SubnetpoolUpdateRequestSubnetpool {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'prefixes'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'default_quota'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'default_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'min_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'max_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'address_scope_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolUpdateRequestSubnetpool
     */
    'description'?: any;
}
/**
 * Response of the subnetpools/id:put operation
 * @export
 * @interface SubnetpoolUpdateResponse
 */
export interface SubnetpoolUpdateResponse {
    /**
     *
     * @type {SubnetpoolsCreateResponseSubnetpool}
     * @memberof SubnetpoolUpdateResponse
     */
    'subnetpool'?: SubnetpoolsCreateResponseSubnetpool;
}
/**
 * Request of the subnetpools:post operation
 * @export
 * @interface SubnetpoolsCreateRequest
 */
export interface SubnetpoolsCreateRequest {
    /**
     *
     * @type {SubnetpoolsCreateRequestSubnetpool}
     * @memberof SubnetpoolsCreateRequest
     */
    'subnetpool'?: SubnetpoolsCreateRequestSubnetpool;
}
/**
 *
 * @export
 * @interface SubnetpoolsCreateRequestSubnetpool
 */
export interface SubnetpoolsCreateRequestSubnetpool {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'prefixes'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'default_quota'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'default_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'min_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'max_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'address_scope_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateRequestSubnetpool
     */
    'description'?: any;
}
/**
 * Response of the subnetpools:post operation
 * @export
 * @interface SubnetpoolsCreateResponse
 */
export interface SubnetpoolsCreateResponse {
    /**
     *
     * @type {SubnetpoolsCreateResponseSubnetpool}
     * @memberof SubnetpoolsCreateResponse
     */
    'subnetpool'?: SubnetpoolsCreateResponseSubnetpool;
}
/**
 *
 * @export
 * @interface SubnetpoolsCreateResponseSubnetpool
 */
export interface SubnetpoolsCreateResponseSubnetpool {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'prefixes'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'default_quota'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'ip_version'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'default_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'min_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'max_prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'is_default'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'shared'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'address_scope_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsCreateResponseSubnetpool
     */
    'description'?: any;
}
/**
 * Response of the subnetpools:get operation
 * @export
 * @interface SubnetpoolsIndexResponse
 */
export interface SubnetpoolsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsIndexResponse
     */
    'subnetpools'?: any;
}
/**
 * Response of the subnetpools/subnetpool_id/tags:get operation
 * @export
 * @interface SubnetpoolsTagsIndexResponse
 */
export interface SubnetpoolsTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the subnetpools/subnetpool_id/tags:put operation
 * @export
 * @interface SubnetpoolsTagsUpdateAllRequest
 */
export interface SubnetpoolsTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the subnetpools/subnetpool_id/tags:put operation
 * @export
 * @interface SubnetpoolsTagsUpdateAllResponse
 */
export interface SubnetpoolsTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof SubnetpoolsTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Request of the subnets:post operation
 * @export
 * @interface SubnetsCreateRequest
 */
export interface SubnetsCreateRequest {
    /**
     *
     * @type {SubnetsCreateRequestSubnet}
     * @memberof SubnetsCreateRequest
     */
    'subnet'?: SubnetsCreateRequestSubnet;
}
/**
 *
 * @export
 * @interface SubnetsCreateRequestSubnet
 */
export interface SubnetsCreateRequestSubnet {
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'ip_version': SubnetsCreateRequestSubnetIpVersionEnum;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'network_id': any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'subnetpool_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'prefixlen'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'cidr'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'gateway_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'allocation_pools'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'dns_nameservers'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'host_routes'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'enable_dhcp'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'ipv6_ra_mode'?: SubnetsCreateRequestSubnetIpv6RaModeEnum;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'ipv6_address_mode'?: SubnetsCreateRequestSubnetIpv6AddressModeEnum;
    /**
     * The service types associated with the subnet
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'service_types'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'use_default_subnetpool'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'dns_publish_fixed_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateRequestSubnet
     */
    'segment_id'?: any;
}
export declare const SubnetsCreateRequestSubnetIpVersionEnum: {
    readonly _4: "4";
    readonly _6: "6";
};
export type SubnetsCreateRequestSubnetIpVersionEnum = typeof SubnetsCreateRequestSubnetIpVersionEnum[keyof typeof SubnetsCreateRequestSubnetIpVersionEnum];
export declare const SubnetsCreateRequestSubnetIpv6RaModeEnum: {
    readonly Dhcpv6Stateful: "dhcpv6-stateful";
    readonly Dhcpv6Stateless: "dhcpv6-stateless";
    readonly Slaac: "slaac";
};
export type SubnetsCreateRequestSubnetIpv6RaModeEnum = typeof SubnetsCreateRequestSubnetIpv6RaModeEnum[keyof typeof SubnetsCreateRequestSubnetIpv6RaModeEnum];
export declare const SubnetsCreateRequestSubnetIpv6AddressModeEnum: {
    readonly Dhcpv6Stateful: "dhcpv6-stateful";
    readonly Dhcpv6Stateless: "dhcpv6-stateless";
    readonly Slaac: "slaac";
};
export type SubnetsCreateRequestSubnetIpv6AddressModeEnum = typeof SubnetsCreateRequestSubnetIpv6AddressModeEnum[keyof typeof SubnetsCreateRequestSubnetIpv6AddressModeEnum];
/**
 * Response of the subnets:post operation
 * @export
 * @interface SubnetsCreateResponse
 */
export interface SubnetsCreateResponse {
    /**
     *
     * @type {SubnetsCreateResponseSubnet}
     * @memberof SubnetsCreateResponse
     */
    'subnet'?: SubnetsCreateResponseSubnet;
}
/**
 *
 * @export
 * @interface SubnetsCreateResponseSubnet
 */
export interface SubnetsCreateResponseSubnet {
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'name'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'ip_version'?: SubnetsCreateResponseSubnetIpVersionEnum;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'network_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'subnetpool_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'cidr'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'gateway_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'allocation_pools'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'dns_nameservers'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'host_routes'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'tenant_id'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'enable_dhcp'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'ipv6_ra_mode'?: SubnetsCreateResponseSubnetIpv6RaModeEnum;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'ipv6_address_mode'?: SubnetsCreateResponseSubnetIpv6AddressModeEnum;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'revision_number'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'router:external'?: any;
    /**
     * The service types associated with the subnet
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'service_types'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'tags'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'created_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'updated_at'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'dns_publish_fixed_ip'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'description'?: any;
    /**
     *
     * @type {any}
     * @memberof SubnetsCreateResponseSubnet
     */
    'segment_id'?: any;
}
export declare const SubnetsCreateResponseSubnetIpVersionEnum: {
    readonly _4: "4";
    readonly _6: "6";
};
export type SubnetsCreateResponseSubnetIpVersionEnum = typeof SubnetsCreateResponseSubnetIpVersionEnum[keyof typeof SubnetsCreateResponseSubnetIpVersionEnum];
export declare const SubnetsCreateResponseSubnetIpv6RaModeEnum: {
    readonly Dhcpv6Stateful: "dhcpv6-stateful";
    readonly Dhcpv6Stateless: "dhcpv6-stateless";
    readonly Slaac: "slaac";
};
export type SubnetsCreateResponseSubnetIpv6RaModeEnum = typeof SubnetsCreateResponseSubnetIpv6RaModeEnum[keyof typeof SubnetsCreateResponseSubnetIpv6RaModeEnum];
export declare const SubnetsCreateResponseSubnetIpv6AddressModeEnum: {
    readonly Dhcpv6Stateful: "dhcpv6-stateful";
    readonly Dhcpv6Stateless: "dhcpv6-stateless";
    readonly Slaac: "slaac";
};
export type SubnetsCreateResponseSubnetIpv6AddressModeEnum = typeof SubnetsCreateResponseSubnetIpv6AddressModeEnum[keyof typeof SubnetsCreateResponseSubnetIpv6AddressModeEnum];
/**
 * Response of the subnets:get operation
 * @export
 * @interface SubnetsIndexResponse
 */
export interface SubnetsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SubnetsIndexResponse
     */
    'subnets'?: any;
}
/**
 * Response of the subnets/subnet_id/tags:get operation
 * @export
 * @interface SubnetsTagsIndexResponse
 */
export interface SubnetsTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof SubnetsTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the subnets/subnet_id/tags:put operation
 * @export
 * @interface SubnetsTagsUpdateAllRequest
 */
export interface SubnetsTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof SubnetsTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the subnets/subnet_id/tags:put operation
 * @export
 * @interface SubnetsTagsUpdateAllResponse
 */
export interface SubnetsTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof SubnetsTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * Response of the trunks/trunk_id/tags:get operation
 * @export
 * @interface TrunksTagsIndexResponse
 */
export interface TrunksTagsIndexResponse {
    /**
     *
     * @type {any}
     * @memberof TrunksTagsIndexResponse
     */
    'tags'?: any;
}
/**
 * Request of the trunks/trunk_id/tags:put operation
 * @export
 * @interface TrunksTagsUpdateAllRequest
 */
export interface TrunksTagsUpdateAllRequest {
    /**
     *
     * @type {any}
     * @memberof TrunksTagsUpdateAllRequest
     */
    'tags'?: any;
}
/**
 * Response of the trunks/trunk_id/tags:put operation
 * @export
 * @interface TrunksTagsUpdateAllResponse
 */
export interface TrunksTagsUpdateAllResponse {
    /**
     *
     * @type {any}
     * @memberof TrunksTagsUpdateAllResponse
     */
    'tags'?: any;
}
/**
 * AddressGroupsApi - axios parameter creator
 * @export
 */
export declare const AddressGroupsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-groups API
     * @param {string} [name] name query parameter for /v2.0/address-groups API
     * @param {string} [description] description query parameter for /v2.0/address-groups API
     * @param {string} [projectId] project_id query parameter for /v2.0/address-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsGet: (id?: string, name?: string, description?: string, projectId?: string, sortKey?: string, sortDir?: AddressGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsAddAddressesAddAddressesRequest} [addressGroupsAddAddressesAddAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdAddAddressesPut: (id: string, addressGroupsAddAddressesAddAddressesRequest?: AddressGroupsAddAddressesAddAddressesRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupUpdateRequest} [addressGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdPut: (id: string, addressGroupUpdateRequest?: AddressGroupUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsRemoveAddressesRemoveAddressesRequest} [addressGroupsRemoveAddressesRemoveAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdRemoveAddressesPut: (id: string, addressGroupsRemoveAddressesRemoveAddressesRequest?: AddressGroupsRemoveAddressesRemoveAddressesRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {AddressGroupsCreateRequest} [addressGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsPost: (addressGroupsCreateRequest?: AddressGroupsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AddressGroupsApi - functional programming interface
 * @export
 */
export declare const AddressGroupsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-groups API
     * @param {string} [name] name query parameter for /v2.0/address-groups API
     * @param {string} [description] description query parameter for /v2.0/address-groups API
     * @param {string} [projectId] project_id query parameter for /v2.0/address-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsGet(id?: string, name?: string, description?: string, projectId?: string, sortKey?: string, sortDir?: AddressGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressGroupsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsAddAddressesAddAddressesRequest} [addressGroupsAddAddressesAddAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdAddAddressesPut(id: string, addressGroupsAddAddressesAddAddressesRequest?: AddressGroupsAddAddressesAddAddressesRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressGroupShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressGroupShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupUpdateRequest} [addressGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdPut(id: string, addressGroupUpdateRequest?: AddressGroupUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressGroupUpdateResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsRemoveAddressesRemoveAddressesRequest} [addressGroupsRemoveAddressesRemoveAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdRemoveAddressesPut(id: string, addressGroupsRemoveAddressesRemoveAddressesRequest?: AddressGroupsRemoveAddressesRemoveAddressesRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressGroupShowResponse>>;
    /**
     *
     * @param {AddressGroupsCreateRequest} [addressGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsPost(addressGroupsCreateRequest?: AddressGroupsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressGroupsCreateResponse>>;
};
/**
 * AddressGroupsApi - factory interface
 * @export
 */
export declare const AddressGroupsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-groups API
     * @param {string} [name] name query parameter for /v2.0/address-groups API
     * @param {string} [description] description query parameter for /v2.0/address-groups API
     * @param {string} [projectId] project_id query parameter for /v2.0/address-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsGet(id?: string, name?: string, description?: string, projectId?: string, sortKey?: string, sortDir?: AddressGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<AddressGroupsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsAddAddressesAddAddressesRequest} [addressGroupsAddAddressesAddAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdAddAddressesPut(id: string, addressGroupsAddAddressesAddAddressesRequest?: AddressGroupsAddAddressesAddAddressesRequest, options?: any): AxiosPromise<AddressGroupShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdGet(id: string, options?: any): AxiosPromise<AddressGroupShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupUpdateRequest} [addressGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdPut(id: string, addressGroupUpdateRequest?: AddressGroupUpdateRequest, options?: any): AxiosPromise<AddressGroupUpdateResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsRemoveAddressesRemoveAddressesRequest} [addressGroupsRemoveAddressesRemoveAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsIdRemoveAddressesPut(id: string, addressGroupsRemoveAddressesRemoveAddressesRequest?: AddressGroupsRemoveAddressesRemoveAddressesRequest, options?: any): AxiosPromise<AddressGroupShowResponse>;
    /**
     *
     * @param {AddressGroupsCreateRequest} [addressGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressGroupsPost(addressGroupsCreateRequest?: AddressGroupsCreateRequest, options?: any): AxiosPromise<AddressGroupsCreateResponse>;
};
/**
 * AddressGroupsApi - object-oriented interface
 * @export
 * @class AddressGroupsApi
 * @extends {BaseAPI}
 */
export declare class AddressGroupsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-groups API
     * @param {string} [name] name query parameter for /v2.0/address-groups API
     * @param {string} [description] description query parameter for /v2.0/address-groups API
     * @param {string} [projectId] project_id query parameter for /v2.0/address-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsGet(id?: string, name?: string, description?: string, projectId?: string, sortKey?: string, sortDir?: AddressGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressGroupsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsAddAddressesAddAddressesRequest} [addressGroupsAddAddressesAddAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsIdAddAddressesPut(id: string, addressGroupsAddAddressesAddAddressesRequest?: AddressGroupsAddAddressesAddAddressesRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressGroupShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressGroupShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupUpdateRequest} [addressGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsIdPut(id: string, addressGroupUpdateRequest?: AddressGroupUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressGroupUpdateResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-groups/{id} API
     * @param {AddressGroupsRemoveAddressesRemoveAddressesRequest} [addressGroupsRemoveAddressesRemoveAddressesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsIdRemoveAddressesPut(id: string, addressGroupsRemoveAddressesRemoveAddressesRequest?: AddressGroupsRemoveAddressesRemoveAddressesRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressGroupShowResponse, any>>;
    /**
     *
     * @param {AddressGroupsCreateRequest} [addressGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressGroupsApi
     */
    addressGroupsPost(addressGroupsCreateRequest?: AddressGroupsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressGroupsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const AddressGroupsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AddressGroupsGetSortDirEnum = typeof AddressGroupsGetSortDirEnum[keyof typeof AddressGroupsGetSortDirEnum];
/**
 * AddressScopesApi - axios parameter creator
 * @export
 */
export declare const AddressScopesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-scopes API
     * @param {string} [name] name query parameter for /v2.0/address-scopes API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/address-scopes API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/address-scopes API
     * @param {AddressScopesGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/address-scopes API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressScopesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesGet: (id?: string, name?: string, tenantId?: string, shared?: string | boolean, ipVersion?: AddressScopesGetIpVersionEnum, sortKey?: string, sortDir?: AddressScopesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {AddressScopeUpdateRequest} [addressScopeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdPut: (id: string, addressScopeUpdateRequest?: AddressScopeUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {AddressScopesCreateRequest} [addressScopesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesPost: (addressScopesCreateRequest?: AddressScopesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AddressScopesApi - functional programming interface
 * @export
 */
export declare const AddressScopesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-scopes API
     * @param {string} [name] name query parameter for /v2.0/address-scopes API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/address-scopes API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/address-scopes API
     * @param {AddressScopesGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/address-scopes API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressScopesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesGet(id?: string, name?: string, tenantId?: string, shared?: string | boolean, ipVersion?: AddressScopesGetIpVersionEnum, sortKey?: string, sortDir?: AddressScopesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressScopesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressScopeShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {AddressScopeUpdateRequest} [addressScopeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdPut(id: string, addressScopeUpdateRequest?: AddressScopeUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressScopeUpdateResponse>>;
    /**
     *
     * @param {AddressScopesCreateRequest} [addressScopesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesPost(addressScopesCreateRequest?: AddressScopesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressScopesCreateResponse>>;
};
/**
 * AddressScopesApi - factory interface
 * @export
 */
export declare const AddressScopesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-scopes API
     * @param {string} [name] name query parameter for /v2.0/address-scopes API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/address-scopes API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/address-scopes API
     * @param {AddressScopesGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/address-scopes API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressScopesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesGet(id?: string, name?: string, tenantId?: string, shared?: string | boolean, ipVersion?: AddressScopesGetIpVersionEnum, sortKey?: string, sortDir?: AddressScopesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<AddressScopesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdGet(id: string, options?: any): AxiosPromise<AddressScopeShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {AddressScopeUpdateRequest} [addressScopeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesIdPut(id: string, addressScopeUpdateRequest?: AddressScopeUpdateRequest, options?: any): AxiosPromise<AddressScopeUpdateResponse>;
    /**
     *
     * @param {AddressScopesCreateRequest} [addressScopesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addressScopesPost(addressScopesCreateRequest?: AddressScopesCreateRequest, options?: any): AxiosPromise<AddressScopesCreateResponse>;
};
/**
 * AddressScopesApi - object-oriented interface
 * @export
 * @class AddressScopesApi
 * @extends {BaseAPI}
 */
export declare class AddressScopesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/address-scopes API
     * @param {string} [name] name query parameter for /v2.0/address-scopes API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/address-scopes API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/address-scopes API
     * @param {AddressScopesGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/address-scopes API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AddressScopesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressScopesApi
     */
    addressScopesGet(id?: string, name?: string, tenantId?: string, shared?: string | boolean, ipVersion?: AddressScopesGetIpVersionEnum, sortKey?: string, sortDir?: AddressScopesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressScopesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressScopesApi
     */
    addressScopesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressScopesApi
     */
    addressScopesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressScopeShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/address-scopes/{id} API
     * @param {AddressScopeUpdateRequest} [addressScopeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressScopesApi
     */
    addressScopesIdPut(id: string, addressScopeUpdateRequest?: AddressScopeUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressScopeUpdateResponse, any>>;
    /**
     *
     * @param {AddressScopesCreateRequest} [addressScopesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressScopesApi
     */
    addressScopesPost(addressScopesCreateRequest?: AddressScopesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressScopesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const AddressScopesGetIpVersionEnum: {
    readonly _4: "4";
    readonly _6: "6";
};
export type AddressScopesGetIpVersionEnum = typeof AddressScopesGetIpVersionEnum[keyof typeof AddressScopesGetIpVersionEnum];
/**
 * @export
 */
export declare const AddressScopesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AddressScopesGetSortDirEnum = typeof AddressScopesGetSortDirEnum[keyof typeof AddressScopesGetSortDirEnum];
/**
 * AutoAllocatedTopologyApi - axios parameter creator
 * @export
 */
export declare const AutoAllocatedTopologyApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AutoAllocatedTopologyGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyGet: (sortKey?: string, sortDir?: AutoAllocatedTopologyGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {AutoAllocatedTopologyUpdateRequest} [autoAllocatedTopologyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdPut: (id: string, autoAllocatedTopologyUpdateRequest?: AutoAllocatedTopologyUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {AutoAllocatedTopologyCreateRequest} [autoAllocatedTopologyCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyPost: (autoAllocatedTopologyCreateRequest?: AutoAllocatedTopologyCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AutoAllocatedTopologyApi - functional programming interface
 * @export
 */
export declare const AutoAllocatedTopologyApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AutoAllocatedTopologyGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyGet(sortKey?: string, sortDir?: AutoAllocatedTopologyGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AutoAllocatedTopologyIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AutoAllocatedTopologyShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {AutoAllocatedTopologyUpdateRequest} [autoAllocatedTopologyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdPut(id: string, autoAllocatedTopologyUpdateRequest?: AutoAllocatedTopologyUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AutoAllocatedTopologyUpdateResponse>>;
    /**
     *
     * @param {AutoAllocatedTopologyCreateRequest} [autoAllocatedTopologyCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyPost(autoAllocatedTopologyCreateRequest?: AutoAllocatedTopologyCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AutoAllocatedTopologyCreateResponse>>;
};
/**
 * AutoAllocatedTopologyApi - factory interface
 * @export
 */
export declare const AutoAllocatedTopologyApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AutoAllocatedTopologyGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyGet(sortKey?: string, sortDir?: AutoAllocatedTopologyGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<AutoAllocatedTopologyIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdGet(id: string, options?: any): AxiosPromise<AutoAllocatedTopologyShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {AutoAllocatedTopologyUpdateRequest} [autoAllocatedTopologyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyIdPut(id: string, autoAllocatedTopologyUpdateRequest?: AutoAllocatedTopologyUpdateRequest, options?: any): AxiosPromise<AutoAllocatedTopologyUpdateResponse>;
    /**
     *
     * @param {AutoAllocatedTopologyCreateRequest} [autoAllocatedTopologyCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    autoAllocatedTopologyPost(autoAllocatedTopologyCreateRequest?: AutoAllocatedTopologyCreateRequest, options?: any): AxiosPromise<AutoAllocatedTopologyCreateResponse>;
};
/**
 * AutoAllocatedTopologyApi - object-oriented interface
 * @export
 * @class AutoAllocatedTopologyApi
 * @extends {BaseAPI}
 */
export declare class AutoAllocatedTopologyApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AutoAllocatedTopologyGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AutoAllocatedTopologyApi
     */
    autoAllocatedTopologyGet(sortKey?: string, sortDir?: AutoAllocatedTopologyGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AutoAllocatedTopologyIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AutoAllocatedTopologyApi
     */
    autoAllocatedTopologyIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AutoAllocatedTopologyApi
     */
    autoAllocatedTopologyIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AutoAllocatedTopologyShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/auto-allocated-topology/{id} API
     * @param {AutoAllocatedTopologyUpdateRequest} [autoAllocatedTopologyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AutoAllocatedTopologyApi
     */
    autoAllocatedTopologyIdPut(id: string, autoAllocatedTopologyUpdateRequest?: AutoAllocatedTopologyUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AutoAllocatedTopologyUpdateResponse, any>>;
    /**
     *
     * @param {AutoAllocatedTopologyCreateRequest} [autoAllocatedTopologyCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AutoAllocatedTopologyApi
     */
    autoAllocatedTopologyPost(autoAllocatedTopologyCreateRequest?: AutoAllocatedTopologyCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AutoAllocatedTopologyCreateResponse, any>>;
}
/**
 * @export
 */
export declare const AutoAllocatedTopologyGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AutoAllocatedTopologyGetSortDirEnum = typeof AutoAllocatedTopologyGetSortDirEnum[keyof typeof AutoAllocatedTopologyGetSortDirEnum];
/**
 * AvailabilityZonesApi - axios parameter creator
 * @export
 */
export declare const AvailabilityZonesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/availability_zones API
     * @param {string} [resource] resource query parameter for /v2.0/availability_zones API
     * @param {string} [state] state query parameter for /v2.0/availability_zones API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AvailabilityZonesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    availabilityZonesGet: (name?: string, resource?: string, state?: string, sortKey?: string, sortDir?: AvailabilityZonesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AvailabilityZonesApi - functional programming interface
 * @export
 */
export declare const AvailabilityZonesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/availability_zones API
     * @param {string} [resource] resource query parameter for /v2.0/availability_zones API
     * @param {string} [state] state query parameter for /v2.0/availability_zones API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AvailabilityZonesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    availabilityZonesGet(name?: string, resource?: string, state?: string, sortKey?: string, sortDir?: AvailabilityZonesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AvailabilityZonesIndexResponse>>;
};
/**
 * AvailabilityZonesApi - factory interface
 * @export
 */
export declare const AvailabilityZonesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/availability_zones API
     * @param {string} [resource] resource query parameter for /v2.0/availability_zones API
     * @param {string} [state] state query parameter for /v2.0/availability_zones API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AvailabilityZonesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    availabilityZonesGet(name?: string, resource?: string, state?: string, sortKey?: string, sortDir?: AvailabilityZonesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<AvailabilityZonesIndexResponse>;
};
/**
 * AvailabilityZonesApi - object-oriented interface
 * @export
 * @class AvailabilityZonesApi
 * @extends {BaseAPI}
 */
export declare class AvailabilityZonesApi extends BaseAPI {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/availability_zones API
     * @param {string} [resource] resource query parameter for /v2.0/availability_zones API
     * @param {string} [state] state query parameter for /v2.0/availability_zones API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AvailabilityZonesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AvailabilityZonesApi
     */
    availabilityZonesGet(name?: string, resource?: string, state?: string, sortKey?: string, sortDir?: AvailabilityZonesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AvailabilityZonesIndexResponse, any>>;
}
/**
 * @export
 */
export declare const AvailabilityZonesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AvailabilityZonesGetSortDirEnum = typeof AvailabilityZonesGetSortDirEnum[keyof typeof AvailabilityZonesGetSortDirEnum];
/**
 * DefaultSecurityGroupRulesApi - axios parameter creator
 * @export
 */
export declare const DefaultSecurityGroupRulesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/default-security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInDefaultSg] used_in_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInNonDefaultSg] used_in_non_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {DefaultSecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesGet: (id?: string, description?: string, remoteGroupId?: string, remoteAddressGroupId?: string, direction?: DefaultSecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: DefaultSecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, usedInDefaultSg?: string | boolean, usedInNonDefaultSg?: string | boolean, sortKey?: string, sortDir?: DefaultSecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {DefaultSecurityGroupRuleUpdateRequest} [defaultSecurityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdPut: (id: string, defaultSecurityGroupRuleUpdateRequest?: DefaultSecurityGroupRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {DefaultSecurityGroupRulesCreateRequest} [defaultSecurityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesPost: (defaultSecurityGroupRulesCreateRequest?: DefaultSecurityGroupRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DefaultSecurityGroupRulesApi - functional programming interface
 * @export
 */
export declare const DefaultSecurityGroupRulesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/default-security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInDefaultSg] used_in_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInNonDefaultSg] used_in_non_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {DefaultSecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesGet(id?: string, description?: string, remoteGroupId?: string, remoteAddressGroupId?: string, direction?: DefaultSecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: DefaultSecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, usedInDefaultSg?: string | boolean, usedInNonDefaultSg?: string | boolean, sortKey?: string, sortDir?: DefaultSecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultSecurityGroupRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultSecurityGroupRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {DefaultSecurityGroupRuleUpdateRequest} [defaultSecurityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdPut(id: string, defaultSecurityGroupRuleUpdateRequest?: DefaultSecurityGroupRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultSecurityGroupRuleUpdateResponse>>;
    /**
     *
     * @param {DefaultSecurityGroupRulesCreateRequest} [defaultSecurityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesPost(defaultSecurityGroupRulesCreateRequest?: DefaultSecurityGroupRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DefaultSecurityGroupRulesCreateResponse>>;
};
/**
 * DefaultSecurityGroupRulesApi - factory interface
 * @export
 */
export declare const DefaultSecurityGroupRulesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/default-security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInDefaultSg] used_in_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInNonDefaultSg] used_in_non_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {DefaultSecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesGet(id?: string, description?: string, remoteGroupId?: string, remoteAddressGroupId?: string, direction?: DefaultSecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: DefaultSecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, usedInDefaultSg?: string | boolean, usedInNonDefaultSg?: string | boolean, sortKey?: string, sortDir?: DefaultSecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<DefaultSecurityGroupRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdGet(id: string, options?: any): AxiosPromise<DefaultSecurityGroupRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {DefaultSecurityGroupRuleUpdateRequest} [defaultSecurityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesIdPut(id: string, defaultSecurityGroupRuleUpdateRequest?: DefaultSecurityGroupRuleUpdateRequest, options?: any): AxiosPromise<DefaultSecurityGroupRuleUpdateResponse>;
    /**
     *
     * @param {DefaultSecurityGroupRulesCreateRequest} [defaultSecurityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    defaultSecurityGroupRulesPost(defaultSecurityGroupRulesCreateRequest?: DefaultSecurityGroupRulesCreateRequest, options?: any): AxiosPromise<DefaultSecurityGroupRulesCreateResponse>;
};
/**
 * DefaultSecurityGroupRulesApi - object-oriented interface
 * @export
 * @class DefaultSecurityGroupRulesApi
 * @extends {BaseAPI}
 */
export declare class DefaultSecurityGroupRulesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/default-security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/default-security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/default-security-group-rules API
     * @param {DefaultSecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/default-security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInDefaultSg] used_in_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string | boolean} [usedInNonDefaultSg] used_in_non_default_sg query parameter for /v2.0/default-security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {DefaultSecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultSecurityGroupRulesApi
     */
    defaultSecurityGroupRulesGet(id?: string, description?: string, remoteGroupId?: string, remoteAddressGroupId?: string, direction?: DefaultSecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: DefaultSecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, usedInDefaultSg?: string | boolean, usedInNonDefaultSg?: string | boolean, sortKey?: string, sortDir?: DefaultSecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<DefaultSecurityGroupRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultSecurityGroupRulesApi
     */
    defaultSecurityGroupRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultSecurityGroupRulesApi
     */
    defaultSecurityGroupRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<DefaultSecurityGroupRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/default-security-group-rules/{id} API
     * @param {DefaultSecurityGroupRuleUpdateRequest} [defaultSecurityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultSecurityGroupRulesApi
     */
    defaultSecurityGroupRulesIdPut(id: string, defaultSecurityGroupRuleUpdateRequest?: DefaultSecurityGroupRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<DefaultSecurityGroupRuleUpdateResponse, any>>;
    /**
     *
     * @param {DefaultSecurityGroupRulesCreateRequest} [defaultSecurityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultSecurityGroupRulesApi
     */
    defaultSecurityGroupRulesPost(defaultSecurityGroupRulesCreateRequest?: DefaultSecurityGroupRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<DefaultSecurityGroupRulesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const DefaultSecurityGroupRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type DefaultSecurityGroupRulesGetDirectionEnum = typeof DefaultSecurityGroupRulesGetDirectionEnum[keyof typeof DefaultSecurityGroupRulesGetDirectionEnum];
/**
 * @export
 */
export declare const DefaultSecurityGroupRulesGetEthertypeEnum: {
    readonly Ipv4: "IPv4";
    readonly Ipv6: "IPv6";
};
export type DefaultSecurityGroupRulesGetEthertypeEnum = typeof DefaultSecurityGroupRulesGetEthertypeEnum[keyof typeof DefaultSecurityGroupRulesGetEthertypeEnum];
/**
 * @export
 */
export declare const DefaultSecurityGroupRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type DefaultSecurityGroupRulesGetSortDirEnum = typeof DefaultSecurityGroupRulesGetSortDirEnum[keyof typeof DefaultSecurityGroupRulesGetSortDirEnum];
/**
 * DhcpAgentSchedulerApi - axios parameter creator
 * @export
 */
export declare const DhcpAgentSchedulerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdDhcpNetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksGet: (sortKey?: string, sortDir?: AgentsAgentIdDhcpNetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdDelete: (agentId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdGet: (agentId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdPut: (agentId: string, id: string, body?: object, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksPost: (agentId: string, body?: object, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DhcpAgentSchedulerApi - functional programming interface
 * @export
 */
export declare const DhcpAgentSchedulerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdDhcpNetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksGet(sortKey?: string, sortDir?: AgentsAgentIdDhcpNetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdDelete(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdGet(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdPut(agentId: string, id: string, body?: object, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksPost(agentId: string, body?: object, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * DhcpAgentSchedulerApi - factory interface
 * @export
 */
export declare const DhcpAgentSchedulerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdDhcpNetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksGet(sortKey?: string, sortDir?: AgentsAgentIdDhcpNetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdDelete(agentId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdGet(agentId: string, id: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksIdPut(agentId: string, id: string, body?: object, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdDhcpNetworksPost(agentId: string, body?: object, options?: any): AxiosPromise<object>;
};
/**
 * DhcpAgentSchedulerApi - object-oriented interface
 * @export
 * @class DhcpAgentSchedulerApi
 * @extends {BaseAPI}
 */
export declare class DhcpAgentSchedulerApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdDhcpNetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DhcpAgentSchedulerApi
     */
    agentsAgentIdDhcpNetworksGet(sortKey?: string, sortDir?: AgentsAgentIdDhcpNetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DhcpAgentSchedulerApi
     */
    agentsAgentIdDhcpNetworksIdDelete(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DhcpAgentSchedulerApi
     */
    agentsAgentIdDhcpNetworksIdGet(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DhcpAgentSchedulerApi
     */
    agentsAgentIdDhcpNetworksIdPut(agentId: string, id: string, body?: object, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DhcpAgentSchedulerApi
     */
    agentsAgentIdDhcpNetworksPost(agentId: string, body?: object, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * @export
 */
export declare const AgentsAgentIdDhcpNetworksGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AgentsAgentIdDhcpNetworksGetSortDirEnum = typeof AgentsAgentIdDhcpNetworksGetSortDirEnum[keyof typeof AgentsAgentIdDhcpNetworksGetSortDirEnum];
/**
 * ExtensionsApi - axios parameter creator
 * @export
 */
export declare const ExtensionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extensionsGet: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/extensions/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extensionsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ExtensionsApi - functional programming interface
 * @export
 */
export declare const ExtensionsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extensionsGet(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ExtensionsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/extensions/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extensionsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ExtensionShowResponse>>;
};
/**
 * ExtensionsApi - factory interface
 * @export
 */
export declare const ExtensionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extensionsGet(options?: any): AxiosPromise<ExtensionsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/extensions/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    extensionsIdGet(id: string, options?: any): AxiosPromise<ExtensionShowResponse>;
};
/**
 * ExtensionsApi - object-oriented interface
 * @export
 * @class ExtensionsApi
 * @extends {BaseAPI}
 */
export declare class ExtensionsApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExtensionsApi
     */
    extensionsGet(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ExtensionsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/extensions/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ExtensionsApi
     */
    extensionsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ExtensionShowResponse, any>>;
}
/**
 * FlavorsApi - axios parameter creator
 * @export
 */
export declare const FlavorsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdNextProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersGet: (sortKey?: string, sortDir?: FlavorsFlavorIdNextProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdDelete: (flavorId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdGet: (flavorId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProviderUpdateRequest} [flavorsNextProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdPut: (flavorId: string, id: string, flavorsNextProviderUpdateRequest?: FlavorsNextProviderUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProvidersCreateRequest} [flavorsNextProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersPost: (flavorId: string, flavorsNextProvidersCreateRequest?: FlavorsNextProvidersCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesGet: (sortKey?: string, sortDir?: FlavorsFlavorIdServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdDelete: (flavorId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdGet: (flavorId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfileUpdateRequest} [flavorsServiceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdPut: (flavorId: string, id: string, flavorsServiceProfileUpdateRequest?: FlavorsServiceProfileUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfilesCreateRequest} [flavorsServiceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesPost: (flavorId: string, flavorsServiceProfilesCreateRequest?: FlavorsServiceProfilesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/flavors API
     * @param {string} [name] name query parameter for /v2.0/flavors API
     * @param {string | null} [description] description query parameter for /v2.0/flavors API
     * @param {string} [serviceType] service_type query parameter for /v2.0/flavors API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/flavors API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsGet: (id?: string, name?: string, description?: string | null, serviceType?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: FlavorsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {FlavorUpdateRequest} [flavorUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdPut: (id: string, flavorUpdateRequest?: FlavorUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {FlavorsCreateRequest} [flavorsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsPost: (flavorsCreateRequest?: FlavorsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FlavorsApi - functional programming interface
 * @export
 */
export declare const FlavorsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdNextProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersGet(sortKey?: string, sortDir?: FlavorsFlavorIdNextProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsNextProvidersIndexResponse>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdDelete(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdGet(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsNextProviderShowResponse>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProviderUpdateRequest} [flavorsNextProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdPut(flavorId: string, id: string, flavorsNextProviderUpdateRequest?: FlavorsNextProviderUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsNextProviderUpdateResponse>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProvidersCreateRequest} [flavorsNextProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersPost(flavorId: string, flavorsNextProvidersCreateRequest?: FlavorsNextProvidersCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsNextProvidersCreateResponse>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesGet(sortKey?: string, sortDir?: FlavorsFlavorIdServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsServiceProfilesIndexResponse>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdDelete(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdGet(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsServiceProfileShowResponse>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfileUpdateRequest} [flavorsServiceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdPut(flavorId: string, id: string, flavorsServiceProfileUpdateRequest?: FlavorsServiceProfileUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsServiceProfileUpdateResponse>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfilesCreateRequest} [flavorsServiceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesPost(flavorId: string, flavorsServiceProfilesCreateRequest?: FlavorsServiceProfilesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsServiceProfilesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/flavors API
     * @param {string} [name] name query parameter for /v2.0/flavors API
     * @param {string | null} [description] description query parameter for /v2.0/flavors API
     * @param {string} [serviceType] service_type query parameter for /v2.0/flavors API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/flavors API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsGet(id?: string, name?: string, description?: string | null, serviceType?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: FlavorsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {FlavorUpdateRequest} [flavorUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdPut(id: string, flavorUpdateRequest?: FlavorUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorUpdateResponse>>;
    /**
     *
     * @param {FlavorsCreateRequest} [flavorsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsPost(flavorsCreateRequest?: FlavorsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlavorsCreateResponse>>;
};
/**
 * FlavorsApi - factory interface
 * @export
 */
export declare const FlavorsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdNextProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersGet(sortKey?: string, sortDir?: FlavorsFlavorIdNextProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FlavorsNextProvidersIndexResponse>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdDelete(flavorId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdGet(flavorId: string, id: string, options?: any): AxiosPromise<FlavorsNextProviderShowResponse>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProviderUpdateRequest} [flavorsNextProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersIdPut(flavorId: string, id: string, flavorsNextProviderUpdateRequest?: FlavorsNextProviderUpdateRequest, options?: any): AxiosPromise<FlavorsNextProviderUpdateResponse>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProvidersCreateRequest} [flavorsNextProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdNextProvidersPost(flavorId: string, flavorsNextProvidersCreateRequest?: FlavorsNextProvidersCreateRequest, options?: any): AxiosPromise<FlavorsNextProvidersCreateResponse>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesGet(sortKey?: string, sortDir?: FlavorsFlavorIdServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FlavorsServiceProfilesIndexResponse>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdDelete(flavorId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdGet(flavorId: string, id: string, options?: any): AxiosPromise<FlavorsServiceProfileShowResponse>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfileUpdateRequest} [flavorsServiceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesIdPut(flavorId: string, id: string, flavorsServiceProfileUpdateRequest?: FlavorsServiceProfileUpdateRequest, options?: any): AxiosPromise<FlavorsServiceProfileUpdateResponse>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfilesCreateRequest} [flavorsServiceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsFlavorIdServiceProfilesPost(flavorId: string, flavorsServiceProfilesCreateRequest?: FlavorsServiceProfilesCreateRequest, options?: any): AxiosPromise<FlavorsServiceProfilesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/flavors API
     * @param {string} [name] name query parameter for /v2.0/flavors API
     * @param {string | null} [description] description query parameter for /v2.0/flavors API
     * @param {string} [serviceType] service_type query parameter for /v2.0/flavors API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/flavors API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsGet(id?: string, name?: string, description?: string | null, serviceType?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: FlavorsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FlavorsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdGet(id: string, options?: any): AxiosPromise<FlavorShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {FlavorUpdateRequest} [flavorUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsIdPut(id: string, flavorUpdateRequest?: FlavorUpdateRequest, options?: any): AxiosPromise<FlavorUpdateResponse>;
    /**
     *
     * @param {FlavorsCreateRequest} [flavorsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flavorsPost(flavorsCreateRequest?: FlavorsCreateRequest, options?: any): AxiosPromise<FlavorsCreateResponse>;
};
/**
 * FlavorsApi - object-oriented interface
 * @export
 * @class FlavorsApi
 * @extends {BaseAPI}
 */
export declare class FlavorsApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdNextProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdNextProvidersGet(sortKey?: string, sortDir?: FlavorsFlavorIdNextProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsNextProvidersIndexResponse, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdNextProvidersIdDelete(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdNextProvidersIdGet(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsNextProviderShowResponse, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProviderUpdateRequest} [flavorsNextProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdNextProvidersIdPut(flavorId: string, id: string, flavorsNextProviderUpdateRequest?: FlavorsNextProviderUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsNextProviderUpdateResponse, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id} API
     * @param {FlavorsNextProvidersCreateRequest} [flavorsNextProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdNextProvidersPost(flavorId: string, flavorsNextProvidersCreateRequest?: FlavorsNextProvidersCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsNextProvidersCreateResponse, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsFlavorIdServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdServiceProfilesGet(sortKey?: string, sortDir?: FlavorsFlavorIdServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsServiceProfilesIndexResponse, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdServiceProfilesIdDelete(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdServiceProfilesIdGet(flavorId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsServiceProfileShowResponse, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfileUpdateRequest} [flavorsServiceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdServiceProfilesIdPut(flavorId: string, id: string, flavorsServiceProfileUpdateRequest?: FlavorsServiceProfileUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsServiceProfileUpdateResponse, any>>;
    /**
     *
     * @param {string} flavorId flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {FlavorsServiceProfilesCreateRequest} [flavorsServiceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsFlavorIdServiceProfilesPost(flavorId: string, flavorsServiceProfilesCreateRequest?: FlavorsServiceProfilesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsServiceProfilesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/flavors API
     * @param {string} [name] name query parameter for /v2.0/flavors API
     * @param {string | null} [description] description query parameter for /v2.0/flavors API
     * @param {string} [serviceType] service_type query parameter for /v2.0/flavors API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/flavors API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FlavorsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsGet(id?: string, name?: string, description?: string | null, serviceType?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: FlavorsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{id} API
     * @param {FlavorUpdateRequest} [flavorUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsIdPut(id: string, flavorUpdateRequest?: FlavorUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorUpdateResponse, any>>;
    /**
     *
     * @param {FlavorsCreateRequest} [flavorsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FlavorsApi
     */
    flavorsPost(flavorsCreateRequest?: FlavorsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FlavorsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const FlavorsFlavorIdNextProvidersGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FlavorsFlavorIdNextProvidersGetSortDirEnum = typeof FlavorsFlavorIdNextProvidersGetSortDirEnum[keyof typeof FlavorsFlavorIdNextProvidersGetSortDirEnum];
/**
 * @export
 */
export declare const FlavorsFlavorIdServiceProfilesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FlavorsFlavorIdServiceProfilesGetSortDirEnum = typeof FlavorsFlavorIdServiceProfilesGetSortDirEnum[keyof typeof FlavorsFlavorIdServiceProfilesGetSortDirEnum];
/**
 * @export
 */
export declare const FlavorsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FlavorsGetSortDirEnum = typeof FlavorsGetSortDirEnum[keyof typeof FlavorsGetSortDirEnum];
/**
 * FloatingipPoolsApi - axios parameter creator
 * @export
 */
export declare const FloatingipPoolsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipPoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsGet: (sortKey?: string, sortDir?: FloatingipPoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {FloatingipPoolUpdateRequest} [floatingipPoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdPut: (id: string, floatingipPoolUpdateRequest?: FloatingipPoolUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {FloatingipPoolsCreateRequest} [floatingipPoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsPost: (floatingipPoolsCreateRequest?: FloatingipPoolsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FloatingipPoolsApi - functional programming interface
 * @export
 */
export declare const FloatingipPoolsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipPoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsGet(sortKey?: string, sortDir?: FloatingipPoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipPoolsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipPoolShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {FloatingipPoolUpdateRequest} [floatingipPoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdPut(id: string, floatingipPoolUpdateRequest?: FloatingipPoolUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipPoolUpdateResponse>>;
    /**
     *
     * @param {FloatingipPoolsCreateRequest} [floatingipPoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsPost(floatingipPoolsCreateRequest?: FloatingipPoolsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipPoolsCreateResponse>>;
};
/**
 * FloatingipPoolsApi - factory interface
 * @export
 */
export declare const FloatingipPoolsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipPoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsGet(sortKey?: string, sortDir?: FloatingipPoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FloatingipPoolsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdGet(id: string, options?: any): AxiosPromise<FloatingipPoolShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {FloatingipPoolUpdateRequest} [floatingipPoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsIdPut(id: string, floatingipPoolUpdateRequest?: FloatingipPoolUpdateRequest, options?: any): AxiosPromise<FloatingipPoolUpdateResponse>;
    /**
     *
     * @param {FloatingipPoolsCreateRequest} [floatingipPoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipPoolsPost(floatingipPoolsCreateRequest?: FloatingipPoolsCreateRequest, options?: any): AxiosPromise<FloatingipPoolsCreateResponse>;
};
/**
 * FloatingipPoolsApi - object-oriented interface
 * @export
 * @class FloatingipPoolsApi
 * @extends {BaseAPI}
 */
export declare class FloatingipPoolsApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipPoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipPoolsApi
     */
    floatingipPoolsGet(sortKey?: string, sortDir?: FloatingipPoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipPoolsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipPoolsApi
     */
    floatingipPoolsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipPoolsApi
     */
    floatingipPoolsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipPoolShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingip-pools/{id} API
     * @param {FloatingipPoolUpdateRequest} [floatingipPoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipPoolsApi
     */
    floatingipPoolsIdPut(id: string, floatingipPoolUpdateRequest?: FloatingipPoolUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipPoolUpdateResponse, any>>;
    /**
     *
     * @param {FloatingipPoolsCreateRequest} [floatingipPoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipPoolsApi
     */
    floatingipPoolsPost(floatingipPoolsCreateRequest?: FloatingipPoolsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipPoolsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const FloatingipPoolsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FloatingipPoolsGetSortDirEnum = typeof FloatingipPoolsGetSortDirEnum[keyof typeof FloatingipPoolsGetSortDirEnum];
/**
 * FloatingipsApi - axios parameter creator
 * @export
 */
export declare const FloatingipsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number | null} [externalPort] external_port query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {FloatingipsFloatingipIdPortForwardingsGetProtocolEnum} [protocol] protocol query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [internalPortId] internal_port_id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [description] description query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number} [externalPortRange] external_port_range query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdPortForwardingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsGet: (id?: string, externalPort?: number | null, protocol?: FloatingipsFloatingipIdPortForwardingsGetProtocolEnum, internalPortId?: string, description?: string, externalPortRange?: number, sortKey?: string, sortDir?: FloatingipsFloatingipIdPortForwardingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingsCreateRequest} [floatingipsPortForwardingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsPost: (floatingipId: string, floatingipsPortForwardingsCreateRequest?: FloatingipsPortForwardingsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsDelete: (floatingipId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsGet: (sortKey?: string, sortDir?: FloatingipsFloatingipIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdDelete: (floatingipId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdGet: (floatingipId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdPut: (floatingipId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {FloatingipsTagsUpdateAllRequest} [floatingipsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsPut: (floatingipId: string, floatingipsTagsUpdateAllRequest?: FloatingipsTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips API
     * @param {string} [floatingIpAddress] floating_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [floatingNetworkId] floating_network_id query parameter for /v2.0/floatingips API
     * @param {string | null} [routerId] router_id query parameter for /v2.0/floatingips API
     * @param {string | null} [portId] port_id query parameter for /v2.0/floatingips API
     * @param {string} [fixedIpAddress] fixed_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/floatingips API
     * @param {string} [status] status query parameter for /v2.0/floatingips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/floatingips API
     * @param {string} [description] description query parameter for /v2.0/floatingips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsGet: (id?: string, floatingIpAddress?: string, floatingNetworkId?: string, routerId?: string | null, portId?: string | null, fixedIpAddress?: string, tenantId?: string, status?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: FloatingipsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {FloatingipUpdateRequest} [floatingipUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdPut: (id: string, floatingipUpdateRequest?: FloatingipUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {FloatingipsCreateRequest} [floatingipsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsPost: (floatingipsCreateRequest?: FloatingipsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FloatingipsApi - functional programming interface
 * @export
 */
export declare const FloatingipsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number | null} [externalPort] external_port query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {FloatingipsFloatingipIdPortForwardingsGetProtocolEnum} [protocol] protocol query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [internalPortId] internal_port_id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [description] description query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number} [externalPortRange] external_port_range query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdPortForwardingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsGet(id?: string, externalPort?: number | null, protocol?: FloatingipsFloatingipIdPortForwardingsGetProtocolEnum, internalPortId?: string, description?: string, externalPortRange?: number, sortKey?: string, sortDir?: FloatingipsFloatingipIdPortForwardingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsPortForwardingsIndexResponse>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingsCreateRequest} [floatingipsPortForwardingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsPost(floatingipId: string, floatingipsPortForwardingsCreateRequest?: FloatingipsPortForwardingsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsPortForwardingsCreateResponse>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsDelete(floatingipId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsGet(sortKey?: string, sortDir?: FloatingipsFloatingipIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsTagsIndexResponse>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdDelete(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdGet(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdPut(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {FloatingipsTagsUpdateAllRequest} [floatingipsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsPut(floatingipId: string, floatingipsTagsUpdateAllRequest?: FloatingipsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsTagsUpdateAllResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips API
     * @param {string} [floatingIpAddress] floating_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [floatingNetworkId] floating_network_id query parameter for /v2.0/floatingips API
     * @param {string | null} [routerId] router_id query parameter for /v2.0/floatingips API
     * @param {string | null} [portId] port_id query parameter for /v2.0/floatingips API
     * @param {string} [fixedIpAddress] fixed_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/floatingips API
     * @param {string} [status] status query parameter for /v2.0/floatingips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/floatingips API
     * @param {string} [description] description query parameter for /v2.0/floatingips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsGet(id?: string, floatingIpAddress?: string, floatingNetworkId?: string, routerId?: string | null, portId?: string | null, fixedIpAddress?: string, tenantId?: string, status?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: FloatingipsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {FloatingipUpdateRequest} [floatingipUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdPut(id: string, floatingipUpdateRequest?: FloatingipUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipUpdateResponse>>;
    /**
     *
     * @param {FloatingipsCreateRequest} [floatingipsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsPost(floatingipsCreateRequest?: FloatingipsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsCreateResponse>>;
};
/**
 * FloatingipsApi - factory interface
 * @export
 */
export declare const FloatingipsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number | null} [externalPort] external_port query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {FloatingipsFloatingipIdPortForwardingsGetProtocolEnum} [protocol] protocol query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [internalPortId] internal_port_id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [description] description query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number} [externalPortRange] external_port_range query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdPortForwardingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsGet(id?: string, externalPort?: number | null, protocol?: FloatingipsFloatingipIdPortForwardingsGetProtocolEnum, internalPortId?: string, description?: string, externalPortRange?: number, sortKey?: string, sortDir?: FloatingipsFloatingipIdPortForwardingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FloatingipsPortForwardingsIndexResponse>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingsCreateRequest} [floatingipsPortForwardingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsPost(floatingipId: string, floatingipsPortForwardingsCreateRequest?: FloatingipsPortForwardingsCreateRequest, options?: any): AxiosPromise<FloatingipsPortForwardingsCreateResponse>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsDelete(floatingipId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsGet(sortKey?: string, sortDir?: FloatingipsFloatingipIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FloatingipsTagsIndexResponse>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdDelete(floatingipId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdGet(floatingipId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsIdPut(floatingipId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {FloatingipsTagsUpdateAllRequest} [floatingipsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdTagsPut(floatingipId: string, floatingipsTagsUpdateAllRequest?: FloatingipsTagsUpdateAllRequest, options?: any): AxiosPromise<FloatingipsTagsUpdateAllResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips API
     * @param {string} [floatingIpAddress] floating_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [floatingNetworkId] floating_network_id query parameter for /v2.0/floatingips API
     * @param {string | null} [routerId] router_id query parameter for /v2.0/floatingips API
     * @param {string | null} [portId] port_id query parameter for /v2.0/floatingips API
     * @param {string} [fixedIpAddress] fixed_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/floatingips API
     * @param {string} [status] status query parameter for /v2.0/floatingips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/floatingips API
     * @param {string} [description] description query parameter for /v2.0/floatingips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsGet(id?: string, floatingIpAddress?: string, floatingNetworkId?: string, routerId?: string | null, portId?: string | null, fixedIpAddress?: string, tenantId?: string, status?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: FloatingipsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<FloatingipsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdGet(id: string, options?: any): AxiosPromise<FloatingipShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {FloatingipUpdateRequest} [floatingipUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsIdPut(id: string, floatingipUpdateRequest?: FloatingipUpdateRequest, options?: any): AxiosPromise<FloatingipUpdateResponse>;
    /**
     *
     * @param {FloatingipsCreateRequest} [floatingipsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsPost(floatingipsCreateRequest?: FloatingipsCreateRequest, options?: any): AxiosPromise<FloatingipsCreateResponse>;
};
/**
 * FloatingipsApi - object-oriented interface
 * @export
 * @class FloatingipsApi
 * @extends {BaseAPI}
 */
export declare class FloatingipsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number | null} [externalPort] external_port query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {FloatingipsFloatingipIdPortForwardingsGetProtocolEnum} [protocol] protocol query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [internalPortId] internal_port_id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [description] description query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {number} [externalPortRange] external_port_range query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdPortForwardingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdPortForwardingsGet(id?: string, externalPort?: number | null, protocol?: FloatingipsFloatingipIdPortForwardingsGetProtocolEnum, internalPortId?: string, description?: string, externalPortRange?: number, sortKey?: string, sortDir?: FloatingipsFloatingipIdPortForwardingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsPortForwardingsIndexResponse, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingsCreateRequest} [floatingipsPortForwardingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdPortForwardingsPost(floatingipId: string, floatingipsPortForwardingsCreateRequest?: FloatingipsPortForwardingsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsPortForwardingsCreateResponse, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdTagsDelete(floatingipId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsFloatingipIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdTagsGet(sortKey?: string, sortDir?: FloatingipsFloatingipIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsTagsIndexResponse, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdTagsIdDelete(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdTagsIdGet(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdTagsIdPut(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
     * @param {FloatingipsTagsUpdateAllRequest} [floatingipsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsFloatingipIdTagsPut(floatingipId: string, floatingipsTagsUpdateAllRequest?: FloatingipsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsTagsUpdateAllResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/floatingips API
     * @param {string} [floatingIpAddress] floating_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [floatingNetworkId] floating_network_id query parameter for /v2.0/floatingips API
     * @param {string | null} [routerId] router_id query parameter for /v2.0/floatingips API
     * @param {string | null} [portId] port_id query parameter for /v2.0/floatingips API
     * @param {string} [fixedIpAddress] fixed_ip_address query parameter for /v2.0/floatingips API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/floatingips API
     * @param {string} [status] status query parameter for /v2.0/floatingips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/floatingips API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/floatingips API
     * @param {string} [description] description query parameter for /v2.0/floatingips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {FloatingipsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsGet(id?: string, floatingIpAddress?: string, floatingNetworkId?: string, routerId?: string | null, portId?: string | null, fixedIpAddress?: string, tenantId?: string, status?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: FloatingipsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/floatingips/{id} API
     * @param {FloatingipUpdateRequest} [floatingipUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsIdPut(id: string, floatingipUpdateRequest?: FloatingipUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipUpdateResponse, any>>;
    /**
     *
     * @param {FloatingipsCreateRequest} [floatingipsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsApi
     */
    floatingipsPost(floatingipsCreateRequest?: FloatingipsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const FloatingipsFloatingipIdPortForwardingsGetProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type FloatingipsFloatingipIdPortForwardingsGetProtocolEnum = typeof FloatingipsFloatingipIdPortForwardingsGetProtocolEnum[keyof typeof FloatingipsFloatingipIdPortForwardingsGetProtocolEnum];
/**
 * @export
 */
export declare const FloatingipsFloatingipIdPortForwardingsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FloatingipsFloatingipIdPortForwardingsGetSortDirEnum = typeof FloatingipsFloatingipIdPortForwardingsGetSortDirEnum[keyof typeof FloatingipsFloatingipIdPortForwardingsGetSortDirEnum];
/**
 * @export
 */
export declare const FloatingipsFloatingipIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FloatingipsFloatingipIdTagsGetSortDirEnum = typeof FloatingipsFloatingipIdTagsGetSortDirEnum[keyof typeof FloatingipsFloatingipIdTagsGetSortDirEnum];
/**
 * @export
 */
export declare const FloatingipsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type FloatingipsGetSortDirEnum = typeof FloatingipsGetSortDirEnum[keyof typeof FloatingipsGetSortDirEnum];
/**
 * FloatingipsPortForwardingsApi - axios parameter creator
 * @export
 */
export declare const FloatingipsPortForwardingsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdDelete: (floatingipId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdGet: (floatingipId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingUpdateRequest} [floatingipsPortForwardingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdPut: (floatingipId: string, id: string, floatingipsPortForwardingUpdateRequest?: FloatingipsPortForwardingUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FloatingipsPortForwardingsApi - functional programming interface
 * @export
 */
export declare const FloatingipsPortForwardingsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdDelete(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdGet(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsPortForwardingShowResponse>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingUpdateRequest} [floatingipsPortForwardingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdPut(floatingipId: string, id: string, floatingipsPortForwardingUpdateRequest?: FloatingipsPortForwardingUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FloatingipsPortForwardingUpdateResponse>>;
};
/**
 * FloatingipsPortForwardingsApi - factory interface
 * @export
 */
export declare const FloatingipsPortForwardingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdDelete(floatingipId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdGet(floatingipId: string, id: string, options?: any): AxiosPromise<FloatingipsPortForwardingShowResponse>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingUpdateRequest} [floatingipsPortForwardingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    floatingipsFloatingipIdPortForwardingsIdPut(floatingipId: string, id: string, floatingipsPortForwardingUpdateRequest?: FloatingipsPortForwardingUpdateRequest, options?: any): AxiosPromise<FloatingipsPortForwardingUpdateResponse>;
};
/**
 * FloatingipsPortForwardingsApi - object-oriented interface
 * @export
 * @class FloatingipsPortForwardingsApi
 * @extends {BaseAPI}
 */
export declare class FloatingipsPortForwardingsApi extends BaseAPI {
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsPortForwardingsApi
     */
    floatingipsFloatingipIdPortForwardingsIdDelete(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsPortForwardingsApi
     */
    floatingipsFloatingipIdPortForwardingsIdGet(floatingipId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsPortForwardingShowResponse, any>>;
    /**
     *
     * @param {string} floatingipId floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {string} id id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
     * @param {FloatingipsPortForwardingUpdateRequest} [floatingipsPortForwardingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FloatingipsPortForwardingsApi
     */
    floatingipsFloatingipIdPortForwardingsIdPut(floatingipId: string, id: string, floatingipsPortForwardingUpdateRequest?: FloatingipsPortForwardingUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FloatingipsPortForwardingUpdateResponse, any>>;
}
/**
 * L3AgentSchedulerApi - axios parameter creator
 * @export
 */
export declare const L3AgentSchedulerApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdL3RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersGet: (sortKey?: string, sortDir?: AgentsAgentIdL3RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdDelete: (agentId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdGet: (agentId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdPut: (agentId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {AgentsL3RoutersCreateRequest} [agentsL3RoutersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersPost: (agentId: string, agentsL3RoutersCreateRequest?: AgentsL3RoutersCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * L3AgentSchedulerApi - functional programming interface
 * @export
 */
export declare const L3AgentSchedulerApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdL3RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersGet(sortKey?: string, sortDir?: AgentsAgentIdL3RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentsL3RoutersIndexResponse>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdDelete(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdGet(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdPut(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {AgentsL3RoutersCreateRequest} [agentsL3RoutersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersPost(agentId: string, agentsL3RoutersCreateRequest?: AgentsL3RoutersCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * L3AgentSchedulerApi - factory interface
 * @export
 */
export declare const L3AgentSchedulerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdL3RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersGet(sortKey?: string, sortDir?: AgentsAgentIdL3RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<AgentsL3RoutersIndexResponse>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdDelete(agentId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdGet(agentId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersIdPut(agentId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {AgentsL3RoutersCreateRequest} [agentsL3RoutersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsAgentIdL3RoutersPost(agentId: string, agentsL3RoutersCreateRequest?: AgentsL3RoutersCreateRequest, options?: any): AxiosPromise<any>;
};
/**
 * L3AgentSchedulerApi - object-oriented interface
 * @export
 * @class L3AgentSchedulerApi
 * @extends {BaseAPI}
 */
export declare class L3AgentSchedulerApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsAgentIdL3RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof L3AgentSchedulerApi
     */
    agentsAgentIdL3RoutersGet(sortKey?: string, sortDir?: AgentsAgentIdL3RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentsL3RoutersIndexResponse, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof L3AgentSchedulerApi
     */
    agentsAgentIdL3RoutersIdDelete(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof L3AgentSchedulerApi
     */
    agentsAgentIdL3RoutersIdGet(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {string} id id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof L3AgentSchedulerApi
     */
    agentsAgentIdL3RoutersIdPut(agentId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} agentId agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
     * @param {AgentsL3RoutersCreateRequest} [agentsL3RoutersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof L3AgentSchedulerApi
     */
    agentsAgentIdL3RoutersPost(agentId: string, agentsL3RoutersCreateRequest?: AgentsL3RoutersCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
}
/**
 * @export
 */
export declare const AgentsAgentIdL3RoutersGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AgentsAgentIdL3RoutersGetSortDirEnum = typeof AgentsAgentIdL3RoutersGetSortDirEnum[keyof typeof AgentsAgentIdL3RoutersGetSortDirEnum];
/**
 * LocalIpsApi - axios parameter creator
 * @export
 */
export declare const LocalIpsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/local-ips API
     * @param {string} [name] name query parameter for /v2.0/local-ips API
     * @param {string} [description] description query parameter for /v2.0/local-ips API
     * @param {string} [projectId] project_id query parameter for /v2.0/local-ips API
     * @param {string} [localPortId] local_port_id query parameter for /v2.0/local-ips API
     * @param {string} [networkId] network_id query parameter for /v2.0/local-ips API
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local-ips API
     * @param {LocalIpsGetIpModeEnum} [ipMode] ip_mode query parameter for /v2.0/local-ips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/local-ips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsGet: (id?: string, name?: string, description?: string, projectId?: string, localPortId?: string, networkId?: string, localIpAddress?: string, ipMode?: LocalIpsGetIpModeEnum, revisionNumber?: string, sortKey?: string, sortDir?: LocalIpsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {LocalIpUpdateRequest} [localIpUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdPut: (id: string, localIpUpdateRequest?: LocalIpUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedPortId] fixed_port_id query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedIp] fixed_ip query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [host] host query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsLocalIpIdPortAssociationsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsGet: (localIpAddress?: string, fixedPortId?: string, fixedIp?: string, host?: string, sortKey?: string, sortDir?: LocalIpsLocalIpIdPortAssociationsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdDelete: (localIpId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdGet: (localIpId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationUpdateRequest} [localIpsPortAssociationUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdPut: (localIpId: string, id: string, localIpsPortAssociationUpdateRequest?: LocalIpsPortAssociationUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationsCreateRequest} [localIpsPortAssociationsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsPost: (localIpId: string, localIpsPortAssociationsCreateRequest?: LocalIpsPortAssociationsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {LocalIpsCreateRequest} [localIpsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsPost: (localIpsCreateRequest?: LocalIpsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LocalIpsApi - functional programming interface
 * @export
 */
export declare const LocalIpsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/local-ips API
     * @param {string} [name] name query parameter for /v2.0/local-ips API
     * @param {string} [description] description query parameter for /v2.0/local-ips API
     * @param {string} [projectId] project_id query parameter for /v2.0/local-ips API
     * @param {string} [localPortId] local_port_id query parameter for /v2.0/local-ips API
     * @param {string} [networkId] network_id query parameter for /v2.0/local-ips API
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local-ips API
     * @param {LocalIpsGetIpModeEnum} [ipMode] ip_mode query parameter for /v2.0/local-ips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/local-ips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsGet(id?: string, name?: string, description?: string, projectId?: string, localPortId?: string, networkId?: string, localIpAddress?: string, ipMode?: LocalIpsGetIpModeEnum, revisionNumber?: string, sortKey?: string, sortDir?: LocalIpsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {LocalIpUpdateRequest} [localIpUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdPut(id: string, localIpUpdateRequest?: LocalIpUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpUpdateResponse>>;
    /**
     *
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedPortId] fixed_port_id query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedIp] fixed_ip query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [host] host query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsLocalIpIdPortAssociationsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsGet(localIpAddress?: string, fixedPortId?: string, fixedIp?: string, host?: string, sortKey?: string, sortDir?: LocalIpsLocalIpIdPortAssociationsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpsPortAssociationsIndexResponse>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdDelete(localIpId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdGet(localIpId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpsPortAssociationShowResponse>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationUpdateRequest} [localIpsPortAssociationUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdPut(localIpId: string, id: string, localIpsPortAssociationUpdateRequest?: LocalIpsPortAssociationUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpsPortAssociationUpdateResponse>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationsCreateRequest} [localIpsPortAssociationsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsPost(localIpId: string, localIpsPortAssociationsCreateRequest?: LocalIpsPortAssociationsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpsPortAssociationsCreateResponse>>;
    /**
     *
     * @param {LocalIpsCreateRequest} [localIpsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsPost(localIpsCreateRequest?: LocalIpsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LocalIpsCreateResponse>>;
};
/**
 * LocalIpsApi - factory interface
 * @export
 */
export declare const LocalIpsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/local-ips API
     * @param {string} [name] name query parameter for /v2.0/local-ips API
     * @param {string} [description] description query parameter for /v2.0/local-ips API
     * @param {string} [projectId] project_id query parameter for /v2.0/local-ips API
     * @param {string} [localPortId] local_port_id query parameter for /v2.0/local-ips API
     * @param {string} [networkId] network_id query parameter for /v2.0/local-ips API
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local-ips API
     * @param {LocalIpsGetIpModeEnum} [ipMode] ip_mode query parameter for /v2.0/local-ips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/local-ips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsGet(id?: string, name?: string, description?: string, projectId?: string, localPortId?: string, networkId?: string, localIpAddress?: string, ipMode?: LocalIpsGetIpModeEnum, revisionNumber?: string, sortKey?: string, sortDir?: LocalIpsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<LocalIpsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdGet(id: string, options?: any): AxiosPromise<LocalIpShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {LocalIpUpdateRequest} [localIpUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsIdPut(id: string, localIpUpdateRequest?: LocalIpUpdateRequest, options?: any): AxiosPromise<LocalIpUpdateResponse>;
    /**
     *
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedPortId] fixed_port_id query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedIp] fixed_ip query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [host] host query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsLocalIpIdPortAssociationsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsGet(localIpAddress?: string, fixedPortId?: string, fixedIp?: string, host?: string, sortKey?: string, sortDir?: LocalIpsLocalIpIdPortAssociationsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<LocalIpsPortAssociationsIndexResponse>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdDelete(localIpId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdGet(localIpId: string, id: string, options?: any): AxiosPromise<LocalIpsPortAssociationShowResponse>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationUpdateRequest} [localIpsPortAssociationUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsIdPut(localIpId: string, id: string, localIpsPortAssociationUpdateRequest?: LocalIpsPortAssociationUpdateRequest, options?: any): AxiosPromise<LocalIpsPortAssociationUpdateResponse>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationsCreateRequest} [localIpsPortAssociationsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsLocalIpIdPortAssociationsPost(localIpId: string, localIpsPortAssociationsCreateRequest?: LocalIpsPortAssociationsCreateRequest, options?: any): AxiosPromise<LocalIpsPortAssociationsCreateResponse>;
    /**
     *
     * @param {LocalIpsCreateRequest} [localIpsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    localIpsPost(localIpsCreateRequest?: LocalIpsCreateRequest, options?: any): AxiosPromise<LocalIpsCreateResponse>;
};
/**
 * LocalIpsApi - object-oriented interface
 * @export
 * @class LocalIpsApi
 * @extends {BaseAPI}
 */
export declare class LocalIpsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/local-ips API
     * @param {string} [name] name query parameter for /v2.0/local-ips API
     * @param {string} [description] description query parameter for /v2.0/local-ips API
     * @param {string} [projectId] project_id query parameter for /v2.0/local-ips API
     * @param {string} [localPortId] local_port_id query parameter for /v2.0/local-ips API
     * @param {string} [networkId] network_id query parameter for /v2.0/local-ips API
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local-ips API
     * @param {LocalIpsGetIpModeEnum} [ipMode] ip_mode query parameter for /v2.0/local-ips API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/local-ips API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsGet(id?: string, name?: string, description?: string, projectId?: string, localPortId?: string, networkId?: string, localIpAddress?: string, ipMode?: LocalIpsGetIpModeEnum, revisionNumber?: string, sortKey?: string, sortDir?: LocalIpsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/local-ips/{id} API
     * @param {LocalIpUpdateRequest} [localIpUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsIdPut(id: string, localIpUpdateRequest?: LocalIpUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpUpdateResponse, any>>;
    /**
     *
     * @param {string} [localIpAddress] local_ip_address query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedPortId] fixed_port_id query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [fixedIp] fixed_ip query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [host] host query parameter for /v2.0/local_ips/{local_ip_id}/port_associations API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LocalIpsLocalIpIdPortAssociationsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsLocalIpIdPortAssociationsGet(localIpAddress?: string, fixedPortId?: string, fixedIp?: string, host?: string, sortKey?: string, sortDir?: LocalIpsLocalIpIdPortAssociationsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpsPortAssociationsIndexResponse, any>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsLocalIpIdPortAssociationsIdDelete(localIpId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsLocalIpIdPortAssociationsIdGet(localIpId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpsPortAssociationShowResponse, any>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {string} id id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationUpdateRequest} [localIpsPortAssociationUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsLocalIpIdPortAssociationsIdPut(localIpId: string, id: string, localIpsPortAssociationUpdateRequest?: LocalIpsPortAssociationUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpsPortAssociationUpdateResponse, any>>;
    /**
     *
     * @param {string} localIpId local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
     * @param {LocalIpsPortAssociationsCreateRequest} [localIpsPortAssociationsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsLocalIpIdPortAssociationsPost(localIpId: string, localIpsPortAssociationsCreateRequest?: LocalIpsPortAssociationsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpsPortAssociationsCreateResponse, any>>;
    /**
     *
     * @param {LocalIpsCreateRequest} [localIpsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocalIpsApi
     */
    localIpsPost(localIpsCreateRequest?: LocalIpsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LocalIpsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const LocalIpsGetIpModeEnum: {
    readonly Translate: "translate";
    readonly Passthrough: "passthrough";
};
export type LocalIpsGetIpModeEnum = typeof LocalIpsGetIpModeEnum[keyof typeof LocalIpsGetIpModeEnum];
/**
 * @export
 */
export declare const LocalIpsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type LocalIpsGetSortDirEnum = typeof LocalIpsGetSortDirEnum[keyof typeof LocalIpsGetSortDirEnum];
/**
 * @export
 */
export declare const LocalIpsLocalIpIdPortAssociationsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type LocalIpsLocalIpIdPortAssociationsGetSortDirEnum = typeof LocalIpsLocalIpIdPortAssociationsGetSortDirEnum[keyof typeof LocalIpsLocalIpIdPortAssociationsGetSortDirEnum];
/**
 * LogApi - axios parameter creator
 * @export
 */
export declare const LogApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLoggableResourcesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesGet: (sortKey?: string, sortDir?: LogLoggableResourcesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {LogLoggableResourceUpdateRequest} [logLoggableResourceUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdPut: (id: string, logLoggableResourceUpdateRequest?: LogLoggableResourceUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {LogLoggableResourcesCreateRequest} [logLoggableResourcesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesPost: (logLoggableResourcesCreateRequest?: LogLoggableResourcesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/log/logs API
     * @param {string} [projectId] project_id query parameter for /v2.0/log/logs API
     * @param {string} [name] name query parameter for /v2.0/log/logs API
     * @param {string} [resourceType] resource_type query parameter for /v2.0/log/logs API
     * @param {string | null} [resourceId] resource_id query parameter for /v2.0/log/logs API
     * @param {LogLogsGetEventEnum} [event] event query parameter for /v2.0/log/logs API
     * @param {string | null} [targetId] target_id query parameter for /v2.0/log/logs API
     * @param {string | boolean} [enabled] enabled query parameter for /v2.0/log/logs API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/log/logs API
     * @param {string} [description] description query parameter for /v2.0/log/logs API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLogsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsGet: (id?: string, projectId?: string, name?: string, resourceType?: string, resourceId?: string | null, event?: LogLogsGetEventEnum, targetId?: string | null, enabled?: string | boolean, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: LogLogsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {LogLogUpdateRequest} [logLogUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdPut: (id: string, logLogUpdateRequest?: LogLogUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {LogLogsCreateRequest} [logLogsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsPost: (logLogsCreateRequest?: LogLogsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LogApi - functional programming interface
 * @export
 */
export declare const LogApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLoggableResourcesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesGet(sortKey?: string, sortDir?: LogLoggableResourcesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLoggableResourcesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLoggableResourceShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {LogLoggableResourceUpdateRequest} [logLoggableResourceUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdPut(id: string, logLoggableResourceUpdateRequest?: LogLoggableResourceUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLoggableResourceUpdateResponse>>;
    /**
     *
     * @param {LogLoggableResourcesCreateRequest} [logLoggableResourcesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesPost(logLoggableResourcesCreateRequest?: LogLoggableResourcesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLoggableResourcesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/log/logs API
     * @param {string} [projectId] project_id query parameter for /v2.0/log/logs API
     * @param {string} [name] name query parameter for /v2.0/log/logs API
     * @param {string} [resourceType] resource_type query parameter for /v2.0/log/logs API
     * @param {string | null} [resourceId] resource_id query parameter for /v2.0/log/logs API
     * @param {LogLogsGetEventEnum} [event] event query parameter for /v2.0/log/logs API
     * @param {string | null} [targetId] target_id query parameter for /v2.0/log/logs API
     * @param {string | boolean} [enabled] enabled query parameter for /v2.0/log/logs API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/log/logs API
     * @param {string} [description] description query parameter for /v2.0/log/logs API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLogsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsGet(id?: string, projectId?: string, name?: string, resourceType?: string, resourceId?: string | null, event?: LogLogsGetEventEnum, targetId?: string | null, enabled?: string | boolean, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: LogLogsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLogsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLogShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {LogLogUpdateRequest} [logLogUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdPut(id: string, logLogUpdateRequest?: LogLogUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLogUpdateResponse>>;
    /**
     *
     * @param {LogLogsCreateRequest} [logLogsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsPost(logLogsCreateRequest?: LogLogsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LogLogsCreateResponse>>;
};
/**
 * LogApi - factory interface
 * @export
 */
export declare const LogApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLoggableResourcesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesGet(sortKey?: string, sortDir?: LogLoggableResourcesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<LogLoggableResourcesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdGet(id: string, options?: any): AxiosPromise<LogLoggableResourceShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {LogLoggableResourceUpdateRequest} [logLoggableResourceUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesIdPut(id: string, logLoggableResourceUpdateRequest?: LogLoggableResourceUpdateRequest, options?: any): AxiosPromise<LogLoggableResourceUpdateResponse>;
    /**
     *
     * @param {LogLoggableResourcesCreateRequest} [logLoggableResourcesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLoggableResourcesPost(logLoggableResourcesCreateRequest?: LogLoggableResourcesCreateRequest, options?: any): AxiosPromise<LogLoggableResourcesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/log/logs API
     * @param {string} [projectId] project_id query parameter for /v2.0/log/logs API
     * @param {string} [name] name query parameter for /v2.0/log/logs API
     * @param {string} [resourceType] resource_type query parameter for /v2.0/log/logs API
     * @param {string | null} [resourceId] resource_id query parameter for /v2.0/log/logs API
     * @param {LogLogsGetEventEnum} [event] event query parameter for /v2.0/log/logs API
     * @param {string | null} [targetId] target_id query parameter for /v2.0/log/logs API
     * @param {string | boolean} [enabled] enabled query parameter for /v2.0/log/logs API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/log/logs API
     * @param {string} [description] description query parameter for /v2.0/log/logs API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLogsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsGet(id?: string, projectId?: string, name?: string, resourceType?: string, resourceId?: string | null, event?: LogLogsGetEventEnum, targetId?: string | null, enabled?: string | boolean, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: LogLogsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<LogLogsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdGet(id: string, options?: any): AxiosPromise<LogLogShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {LogLogUpdateRequest} [logLogUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsIdPut(id: string, logLogUpdateRequest?: LogLogUpdateRequest, options?: any): AxiosPromise<LogLogUpdateResponse>;
    /**
     *
     * @param {LogLogsCreateRequest} [logLogsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logLogsPost(logLogsCreateRequest?: LogLogsCreateRequest, options?: any): AxiosPromise<LogLogsCreateResponse>;
};
/**
 * LogApi - object-oriented interface
 * @export
 * @class LogApi
 * @extends {BaseAPI}
 */
export declare class LogApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLoggableResourcesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLoggableResourcesGet(sortKey?: string, sortDir?: LogLoggableResourcesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLoggableResourcesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLoggableResourcesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLoggableResourcesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLoggableResourceShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/loggable-resources/{id} API
     * @param {LogLoggableResourceUpdateRequest} [logLoggableResourceUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLoggableResourcesIdPut(id: string, logLoggableResourceUpdateRequest?: LogLoggableResourceUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLoggableResourceUpdateResponse, any>>;
    /**
     *
     * @param {LogLoggableResourcesCreateRequest} [logLoggableResourcesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLoggableResourcesPost(logLoggableResourcesCreateRequest?: LogLoggableResourcesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLoggableResourcesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/log/logs API
     * @param {string} [projectId] project_id query parameter for /v2.0/log/logs API
     * @param {string} [name] name query parameter for /v2.0/log/logs API
     * @param {string} [resourceType] resource_type query parameter for /v2.0/log/logs API
     * @param {string | null} [resourceId] resource_id query parameter for /v2.0/log/logs API
     * @param {LogLogsGetEventEnum} [event] event query parameter for /v2.0/log/logs API
     * @param {string | null} [targetId] target_id query parameter for /v2.0/log/logs API
     * @param {string | boolean} [enabled] enabled query parameter for /v2.0/log/logs API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/log/logs API
     * @param {string} [description] description query parameter for /v2.0/log/logs API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {LogLogsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLogsGet(id?: string, projectId?: string, name?: string, resourceType?: string, resourceId?: string | null, event?: LogLogsGetEventEnum, targetId?: string | null, enabled?: string | boolean, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: LogLogsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLogsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLogsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLogsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLogShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/log/logs/{id} API
     * @param {LogLogUpdateRequest} [logLogUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLogsIdPut(id: string, logLogUpdateRequest?: LogLogUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLogUpdateResponse, any>>;
    /**
     *
     * @param {LogLogsCreateRequest} [logLogsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogApi
     */
    logLogsPost(logLogsCreateRequest?: LogLogsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LogLogsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const LogLoggableResourcesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type LogLoggableResourcesGetSortDirEnum = typeof LogLoggableResourcesGetSortDirEnum[keyof typeof LogLoggableResourcesGetSortDirEnum];
/**
 * @export
 */
export declare const LogLogsGetEventEnum: {
    readonly Accept: "ACCEPT";
    readonly Drop: "DROP";
    readonly All: "ALL";
};
export type LogLogsGetEventEnum = typeof LogLogsGetEventEnum[keyof typeof LogLogsGetEventEnum];
/**
 * @export
 */
export declare const LogLogsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type LogLogsGetSortDirEnum = typeof LogLogsGetSortDirEnum[keyof typeof LogLogsGetSortDirEnum];
/**
 * MeteringApi - axios parameter creator
 * @export
 */
export declare const MeteringApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [meteringLabelId] metering_label_id query parameter for /v2.0/metering/metering-label-rules API
     * @param {MeteringMeteringLabelRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/metering/metering-label-rules API
     * @param {string | boolean} [excluded] excluded query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sourceIpPrefix] source_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [destinationIpPrefix] destination_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesGet: (id?: string, meteringLabelId?: string, direction?: MeteringMeteringLabelRulesGetDirectionEnum, excluded?: string | boolean, remoteIpPrefix?: string, sourceIpPrefix?: string, destinationIpPrefix?: string, sortKey?: string, sortDir?: MeteringMeteringLabelRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {MeteringMeteringLabelRuleUpdateRequest} [meteringMeteringLabelRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdPut: (id: string, meteringMeteringLabelRuleUpdateRequest?: MeteringMeteringLabelRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {MeteringMeteringLabelRulesCreateRequest} [meteringMeteringLabelRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesPost: (meteringMeteringLabelRulesCreateRequest?: MeteringMeteringLabelRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-labels API
     * @param {string} [name] name query parameter for /v2.0/metering/metering-labels API
     * @param {string} [description] description query parameter for /v2.0/metering/metering-labels API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/metering/metering-labels API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/metering/metering-labels API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsGet: (id?: string, name?: string, description?: string, tenantId?: string, shared?: string | boolean, sortKey?: string, sortDir?: MeteringMeteringLabelsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {MeteringMeteringLabelUpdateRequest} [meteringMeteringLabelUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdPut: (id: string, meteringMeteringLabelUpdateRequest?: MeteringMeteringLabelUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {MeteringMeteringLabelsCreateRequest} [meteringMeteringLabelsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsPost: (meteringMeteringLabelsCreateRequest?: MeteringMeteringLabelsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * MeteringApi - functional programming interface
 * @export
 */
export declare const MeteringApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [meteringLabelId] metering_label_id query parameter for /v2.0/metering/metering-label-rules API
     * @param {MeteringMeteringLabelRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/metering/metering-label-rules API
     * @param {string | boolean} [excluded] excluded query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sourceIpPrefix] source_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [destinationIpPrefix] destination_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesGet(id?: string, meteringLabelId?: string, direction?: MeteringMeteringLabelRulesGetDirectionEnum, excluded?: string | boolean, remoteIpPrefix?: string, sourceIpPrefix?: string, destinationIpPrefix?: string, sortKey?: string, sortDir?: MeteringMeteringLabelRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {MeteringMeteringLabelRuleUpdateRequest} [meteringMeteringLabelRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdPut(id: string, meteringMeteringLabelRuleUpdateRequest?: MeteringMeteringLabelRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelRuleUpdateResponse>>;
    /**
     *
     * @param {MeteringMeteringLabelRulesCreateRequest} [meteringMeteringLabelRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesPost(meteringMeteringLabelRulesCreateRequest?: MeteringMeteringLabelRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-labels API
     * @param {string} [name] name query parameter for /v2.0/metering/metering-labels API
     * @param {string} [description] description query parameter for /v2.0/metering/metering-labels API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/metering/metering-labels API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/metering/metering-labels API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsGet(id?: string, name?: string, description?: string, tenantId?: string, shared?: string | boolean, sortKey?: string, sortDir?: MeteringMeteringLabelsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {MeteringMeteringLabelUpdateRequest} [meteringMeteringLabelUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdPut(id: string, meteringMeteringLabelUpdateRequest?: MeteringMeteringLabelUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelUpdateResponse>>;
    /**
     *
     * @param {MeteringMeteringLabelsCreateRequest} [meteringMeteringLabelsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsPost(meteringMeteringLabelsCreateRequest?: MeteringMeteringLabelsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MeteringMeteringLabelsCreateResponse>>;
};
/**
 * MeteringApi - factory interface
 * @export
 */
export declare const MeteringApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [meteringLabelId] metering_label_id query parameter for /v2.0/metering/metering-label-rules API
     * @param {MeteringMeteringLabelRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/metering/metering-label-rules API
     * @param {string | boolean} [excluded] excluded query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sourceIpPrefix] source_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [destinationIpPrefix] destination_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesGet(id?: string, meteringLabelId?: string, direction?: MeteringMeteringLabelRulesGetDirectionEnum, excluded?: string | boolean, remoteIpPrefix?: string, sourceIpPrefix?: string, destinationIpPrefix?: string, sortKey?: string, sortDir?: MeteringMeteringLabelRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<MeteringMeteringLabelRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdGet(id: string, options?: any): AxiosPromise<MeteringMeteringLabelRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {MeteringMeteringLabelRuleUpdateRequest} [meteringMeteringLabelRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesIdPut(id: string, meteringMeteringLabelRuleUpdateRequest?: MeteringMeteringLabelRuleUpdateRequest, options?: any): AxiosPromise<MeteringMeteringLabelRuleUpdateResponse>;
    /**
     *
     * @param {MeteringMeteringLabelRulesCreateRequest} [meteringMeteringLabelRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelRulesPost(meteringMeteringLabelRulesCreateRequest?: MeteringMeteringLabelRulesCreateRequest, options?: any): AxiosPromise<MeteringMeteringLabelRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-labels API
     * @param {string} [name] name query parameter for /v2.0/metering/metering-labels API
     * @param {string} [description] description query parameter for /v2.0/metering/metering-labels API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/metering/metering-labels API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/metering/metering-labels API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsGet(id?: string, name?: string, description?: string, tenantId?: string, shared?: string | boolean, sortKey?: string, sortDir?: MeteringMeteringLabelsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<MeteringMeteringLabelsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdGet(id: string, options?: any): AxiosPromise<MeteringMeteringLabelShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {MeteringMeteringLabelUpdateRequest} [meteringMeteringLabelUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsIdPut(id: string, meteringMeteringLabelUpdateRequest?: MeteringMeteringLabelUpdateRequest, options?: any): AxiosPromise<MeteringMeteringLabelUpdateResponse>;
    /**
     *
     * @param {MeteringMeteringLabelsCreateRequest} [meteringMeteringLabelsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    meteringMeteringLabelsPost(meteringMeteringLabelsCreateRequest?: MeteringMeteringLabelsCreateRequest, options?: any): AxiosPromise<MeteringMeteringLabelsCreateResponse>;
};
/**
 * MeteringApi - object-oriented interface
 * @export
 * @class MeteringApi
 * @extends {BaseAPI}
 */
export declare class MeteringApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [meteringLabelId] metering_label_id query parameter for /v2.0/metering/metering-label-rules API
     * @param {MeteringMeteringLabelRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/metering/metering-label-rules API
     * @param {string | boolean} [excluded] excluded query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sourceIpPrefix] source_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [destinationIpPrefix] destination_ip_prefix query parameter for /v2.0/metering/metering-label-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelRulesGet(id?: string, meteringLabelId?: string, direction?: MeteringMeteringLabelRulesGetDirectionEnum, excluded?: string | boolean, remoteIpPrefix?: string, sourceIpPrefix?: string, destinationIpPrefix?: string, sortKey?: string, sortDir?: MeteringMeteringLabelRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-label-rules/{id} API
     * @param {MeteringMeteringLabelRuleUpdateRequest} [meteringMeteringLabelRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelRulesIdPut(id: string, meteringMeteringLabelRuleUpdateRequest?: MeteringMeteringLabelRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelRuleUpdateResponse, any>>;
    /**
     *
     * @param {MeteringMeteringLabelRulesCreateRequest} [meteringMeteringLabelRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelRulesPost(meteringMeteringLabelRulesCreateRequest?: MeteringMeteringLabelRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/metering/metering-labels API
     * @param {string} [name] name query parameter for /v2.0/metering/metering-labels API
     * @param {string} [description] description query parameter for /v2.0/metering/metering-labels API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/metering/metering-labels API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/metering/metering-labels API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {MeteringMeteringLabelsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelsGet(id?: string, name?: string, description?: string, tenantId?: string, shared?: string | boolean, sortKey?: string, sortDir?: MeteringMeteringLabelsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/metering/metering-labels/{id} API
     * @param {MeteringMeteringLabelUpdateRequest} [meteringMeteringLabelUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelsIdPut(id: string, meteringMeteringLabelUpdateRequest?: MeteringMeteringLabelUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelUpdateResponse, any>>;
    /**
     *
     * @param {MeteringMeteringLabelsCreateRequest} [meteringMeteringLabelsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MeteringApi
     */
    meteringMeteringLabelsPost(meteringMeteringLabelsCreateRequest?: MeteringMeteringLabelsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<MeteringMeteringLabelsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const MeteringMeteringLabelRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type MeteringMeteringLabelRulesGetDirectionEnum = typeof MeteringMeteringLabelRulesGetDirectionEnum[keyof typeof MeteringMeteringLabelRulesGetDirectionEnum];
/**
 * @export
 */
export declare const MeteringMeteringLabelRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type MeteringMeteringLabelRulesGetSortDirEnum = typeof MeteringMeteringLabelRulesGetSortDirEnum[keyof typeof MeteringMeteringLabelRulesGetSortDirEnum];
/**
 * @export
 */
export declare const MeteringMeteringLabelsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type MeteringMeteringLabelsGetSortDirEnum = typeof MeteringMeteringLabelsGetSortDirEnum[keyof typeof MeteringMeteringLabelsGetSortDirEnum];
/**
 * NdpProxiesApi - axios parameter creator
 * @export
 */
export declare const NdpProxiesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/ndp-proxies API
     * @param {string} [description] description query parameter for /v2.0/ndp-proxies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ndp-proxies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NdpProxiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesGet: (name?: string, description?: string, revisionNumber?: string, sortKey?: string, sortDir?: NdpProxiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {NdpProxyUpdateRequest} [ndpProxyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdPut: (id: string, ndpProxyUpdateRequest?: NdpProxyUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {NdpProxiesCreateRequest} [ndpProxiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesPost: (ndpProxiesCreateRequest?: NdpProxiesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NdpProxiesApi - functional programming interface
 * @export
 */
export declare const NdpProxiesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/ndp-proxies API
     * @param {string} [description] description query parameter for /v2.0/ndp-proxies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ndp-proxies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NdpProxiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesGet(name?: string, description?: string, revisionNumber?: string, sortKey?: string, sortDir?: NdpProxiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NdpProxiesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NdpProxyShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {NdpProxyUpdateRequest} [ndpProxyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdPut(id: string, ndpProxyUpdateRequest?: NdpProxyUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NdpProxyUpdateResponse>>;
    /**
     *
     * @param {NdpProxiesCreateRequest} [ndpProxiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesPost(ndpProxiesCreateRequest?: NdpProxiesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NdpProxiesCreateResponse>>;
};
/**
 * NdpProxiesApi - factory interface
 * @export
 */
export declare const NdpProxiesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/ndp-proxies API
     * @param {string} [description] description query parameter for /v2.0/ndp-proxies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ndp-proxies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NdpProxiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesGet(name?: string, description?: string, revisionNumber?: string, sortKey?: string, sortDir?: NdpProxiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<NdpProxiesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdGet(id: string, options?: any): AxiosPromise<NdpProxyShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {NdpProxyUpdateRequest} [ndpProxyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesIdPut(id: string, ndpProxyUpdateRequest?: NdpProxyUpdateRequest, options?: any): AxiosPromise<NdpProxyUpdateResponse>;
    /**
     *
     * @param {NdpProxiesCreateRequest} [ndpProxiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ndpProxiesPost(ndpProxiesCreateRequest?: NdpProxiesCreateRequest, options?: any): AxiosPromise<NdpProxiesCreateResponse>;
};
/**
 * NdpProxiesApi - object-oriented interface
 * @export
 * @class NdpProxiesApi
 * @extends {BaseAPI}
 */
export declare class NdpProxiesApi extends BaseAPI {
    /**
     *
     * @param {string} [name] name query parameter for /v2.0/ndp-proxies API
     * @param {string} [description] description query parameter for /v2.0/ndp-proxies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ndp-proxies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NdpProxiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NdpProxiesApi
     */
    ndpProxiesGet(name?: string, description?: string, revisionNumber?: string, sortKey?: string, sortDir?: NdpProxiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NdpProxiesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NdpProxiesApi
     */
    ndpProxiesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NdpProxiesApi
     */
    ndpProxiesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NdpProxyShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/ndp-proxies/{id} API
     * @param {NdpProxyUpdateRequest} [ndpProxyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NdpProxiesApi
     */
    ndpProxiesIdPut(id: string, ndpProxyUpdateRequest?: NdpProxyUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NdpProxyUpdateResponse, any>>;
    /**
     *
     * @param {NdpProxiesCreateRequest} [ndpProxiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NdpProxiesApi
     */
    ndpProxiesPost(ndpProxiesCreateRequest?: NdpProxiesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NdpProxiesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const NdpProxiesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NdpProxiesGetSortDirEnum = typeof NdpProxiesGetSortDirEnum[keyof typeof NdpProxiesGetSortDirEnum];
/**
 * NetworkIpAvailabilitiesApi - axios parameter creator
 * @export
 */
export declare const NetworkIpAvailabilitiesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [networkId] network_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [networkName] network_name query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkIpAvailabilitiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesGet: (networkId?: string, networkName?: string, tenantId?: string, ipVersion?: string, sortKey?: string, sortDir?: NetworkIpAvailabilitiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {NetworkIpAvailabilityUpdateRequest} [networkIpAvailabilityUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdPut: (id: string, networkIpAvailabilityUpdateRequest?: NetworkIpAvailabilityUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {NetworkIpAvailabilitiesCreateRequest} [networkIpAvailabilitiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesPost: (networkIpAvailabilitiesCreateRequest?: NetworkIpAvailabilitiesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NetworkIpAvailabilitiesApi - functional programming interface
 * @export
 */
export declare const NetworkIpAvailabilitiesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [networkId] network_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [networkName] network_name query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkIpAvailabilitiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesGet(networkId?: string, networkName?: string, tenantId?: string, ipVersion?: string, sortKey?: string, sortDir?: NetworkIpAvailabilitiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkIpAvailabilitiesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkIpAvailabilityShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {NetworkIpAvailabilityUpdateRequest} [networkIpAvailabilityUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdPut(id: string, networkIpAvailabilityUpdateRequest?: NetworkIpAvailabilityUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkIpAvailabilityUpdateResponse>>;
    /**
     *
     * @param {NetworkIpAvailabilitiesCreateRequest} [networkIpAvailabilitiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesPost(networkIpAvailabilitiesCreateRequest?: NetworkIpAvailabilitiesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkIpAvailabilitiesCreateResponse>>;
};
/**
 * NetworkIpAvailabilitiesApi - factory interface
 * @export
 */
export declare const NetworkIpAvailabilitiesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [networkId] network_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [networkName] network_name query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkIpAvailabilitiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesGet(networkId?: string, networkName?: string, tenantId?: string, ipVersion?: string, sortKey?: string, sortDir?: NetworkIpAvailabilitiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<NetworkIpAvailabilitiesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdGet(id: string, options?: any): AxiosPromise<NetworkIpAvailabilityShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {NetworkIpAvailabilityUpdateRequest} [networkIpAvailabilityUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesIdPut(id: string, networkIpAvailabilityUpdateRequest?: NetworkIpAvailabilityUpdateRequest, options?: any): AxiosPromise<NetworkIpAvailabilityUpdateResponse>;
    /**
     *
     * @param {NetworkIpAvailabilitiesCreateRequest} [networkIpAvailabilitiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkIpAvailabilitiesPost(networkIpAvailabilitiesCreateRequest?: NetworkIpAvailabilitiesCreateRequest, options?: any): AxiosPromise<NetworkIpAvailabilitiesCreateResponse>;
};
/**
 * NetworkIpAvailabilitiesApi - object-oriented interface
 * @export
 * @class NetworkIpAvailabilitiesApi
 * @extends {BaseAPI}
 */
export declare class NetworkIpAvailabilitiesApi extends BaseAPI {
    /**
     *
     * @param {string} [networkId] network_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [networkName] network_name query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/network-ip-availabilities API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkIpAvailabilitiesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkIpAvailabilitiesApi
     */
    networkIpAvailabilitiesGet(networkId?: string, networkName?: string, tenantId?: string, ipVersion?: string, sortKey?: string, sortDir?: NetworkIpAvailabilitiesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkIpAvailabilitiesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkIpAvailabilitiesApi
     */
    networkIpAvailabilitiesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkIpAvailabilitiesApi
     */
    networkIpAvailabilitiesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkIpAvailabilityShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-ip-availabilities/{id} API
     * @param {NetworkIpAvailabilityUpdateRequest} [networkIpAvailabilityUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkIpAvailabilitiesApi
     */
    networkIpAvailabilitiesIdPut(id: string, networkIpAvailabilityUpdateRequest?: NetworkIpAvailabilityUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkIpAvailabilityUpdateResponse, any>>;
    /**
     *
     * @param {NetworkIpAvailabilitiesCreateRequest} [networkIpAvailabilitiesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkIpAvailabilitiesApi
     */
    networkIpAvailabilitiesPost(networkIpAvailabilitiesCreateRequest?: NetworkIpAvailabilitiesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkIpAvailabilitiesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const NetworkIpAvailabilitiesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NetworkIpAvailabilitiesGetSortDirEnum = typeof NetworkIpAvailabilitiesGetSortDirEnum[keyof typeof NetworkIpAvailabilitiesGetSortDirEnum];
/**
 * NetworkSegmentRangesApi - axios parameter creator
 * @export
 */
export declare const NetworkSegmentRangesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/network-segment-ranges API
     * @param {string} [name] name query parameter for /v2.0/network-segment-ranges API
     * @param {string} [projectId] project_id query parameter for /v2.0/network-segment-ranges API
     * @param {NetworkSegmentRangesGetNetworkTypeEnum} [networkType] network_type query parameter for /v2.0/network-segment-ranges API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/network-segment-ranges API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {string} [description] description query parameter for /v2.0/network-segment-ranges API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesGet: (id?: string, name?: string, projectId?: string, networkType?: NetworkSegmentRangesGetNetworkTypeEnum, physicalNetwork?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: NetworkSegmentRangesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {NetworkSegmentRangeUpdateRequest} [networkSegmentRangeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdPut: (id: string, networkSegmentRangeUpdateRequest?: NetworkSegmentRangeUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsDelete: (networkSegmentRangeId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsGet: (sortKey?: string, sortDir?: NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdDelete: (networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdGet: (networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdPut: (networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {NetworkSegmentRangesTagsUpdateAllRequest} [networkSegmentRangesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsPut: (networkSegmentRangeId: string, networkSegmentRangesTagsUpdateAllRequest?: NetworkSegmentRangesTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {NetworkSegmentRangesCreateRequest} [networkSegmentRangesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesPost: (networkSegmentRangesCreateRequest?: NetworkSegmentRangesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NetworkSegmentRangesApi - functional programming interface
 * @export
 */
export declare const NetworkSegmentRangesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/network-segment-ranges API
     * @param {string} [name] name query parameter for /v2.0/network-segment-ranges API
     * @param {string} [projectId] project_id query parameter for /v2.0/network-segment-ranges API
     * @param {NetworkSegmentRangesGetNetworkTypeEnum} [networkType] network_type query parameter for /v2.0/network-segment-ranges API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/network-segment-ranges API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {string} [description] description query parameter for /v2.0/network-segment-ranges API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesGet(id?: string, name?: string, projectId?: string, networkType?: NetworkSegmentRangesGetNetworkTypeEnum, physicalNetwork?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: NetworkSegmentRangesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkSegmentRangesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkSegmentRangeShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {NetworkSegmentRangeUpdateRequest} [networkSegmentRangeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdPut(id: string, networkSegmentRangeUpdateRequest?: NetworkSegmentRangeUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkSegmentRangeUpdateResponse>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsDelete(networkSegmentRangeId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsGet(sortKey?: string, sortDir?: NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkSegmentRangesTagsIndexResponse>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdDelete(networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdGet(networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdPut(networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {NetworkSegmentRangesTagsUpdateAllRequest} [networkSegmentRangesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsPut(networkSegmentRangeId: string, networkSegmentRangesTagsUpdateAllRequest?: NetworkSegmentRangesTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkSegmentRangesTagsUpdateAllResponse>>;
    /**
     *
     * @param {NetworkSegmentRangesCreateRequest} [networkSegmentRangesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesPost(networkSegmentRangesCreateRequest?: NetworkSegmentRangesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkSegmentRangesCreateResponse>>;
};
/**
 * NetworkSegmentRangesApi - factory interface
 * @export
 */
export declare const NetworkSegmentRangesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/network-segment-ranges API
     * @param {string} [name] name query parameter for /v2.0/network-segment-ranges API
     * @param {string} [projectId] project_id query parameter for /v2.0/network-segment-ranges API
     * @param {NetworkSegmentRangesGetNetworkTypeEnum} [networkType] network_type query parameter for /v2.0/network-segment-ranges API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/network-segment-ranges API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {string} [description] description query parameter for /v2.0/network-segment-ranges API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesGet(id?: string, name?: string, projectId?: string, networkType?: NetworkSegmentRangesGetNetworkTypeEnum, physicalNetwork?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: NetworkSegmentRangesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<NetworkSegmentRangesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdGet(id: string, options?: any): AxiosPromise<NetworkSegmentRangeShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {NetworkSegmentRangeUpdateRequest} [networkSegmentRangeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesIdPut(id: string, networkSegmentRangeUpdateRequest?: NetworkSegmentRangeUpdateRequest, options?: any): AxiosPromise<NetworkSegmentRangeUpdateResponse>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsDelete(networkSegmentRangeId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsGet(sortKey?: string, sortDir?: NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<NetworkSegmentRangesTagsIndexResponse>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdDelete(networkSegmentRangeId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdGet(networkSegmentRangeId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdPut(networkSegmentRangeId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {NetworkSegmentRangesTagsUpdateAllRequest} [networkSegmentRangesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsPut(networkSegmentRangeId: string, networkSegmentRangesTagsUpdateAllRequest?: NetworkSegmentRangesTagsUpdateAllRequest, options?: any): AxiosPromise<NetworkSegmentRangesTagsUpdateAllResponse>;
    /**
     *
     * @param {NetworkSegmentRangesCreateRequest} [networkSegmentRangesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networkSegmentRangesPost(networkSegmentRangesCreateRequest?: NetworkSegmentRangesCreateRequest, options?: any): AxiosPromise<NetworkSegmentRangesCreateResponse>;
};
/**
 * NetworkSegmentRangesApi - object-oriented interface
 * @export
 * @class NetworkSegmentRangesApi
 * @extends {BaseAPI}
 */
export declare class NetworkSegmentRangesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/network-segment-ranges API
     * @param {string} [name] name query parameter for /v2.0/network-segment-ranges API
     * @param {string} [projectId] project_id query parameter for /v2.0/network-segment-ranges API
     * @param {NetworkSegmentRangesGetNetworkTypeEnum} [networkType] network_type query parameter for /v2.0/network-segment-ranges API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/network-segment-ranges API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/network-segment-ranges API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/network-segment-ranges API
     * @param {string} [description] description query parameter for /v2.0/network-segment-ranges API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesGet(id?: string, name?: string, projectId?: string, networkType?: NetworkSegmentRangesGetNetworkTypeEnum, physicalNetwork?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: NetworkSegmentRangesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkSegmentRangesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkSegmentRangeShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/network-segment-ranges/{id} API
     * @param {NetworkSegmentRangeUpdateRequest} [networkSegmentRangeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesIdPut(id: string, networkSegmentRangeUpdateRequest?: NetworkSegmentRangeUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkSegmentRangeUpdateResponse, any>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsDelete(networkSegmentRangeId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsGet(sortKey?: string, sortDir?: NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkSegmentRangesTagsIndexResponse, any>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdDelete(networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdGet(networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsIdPut(networkSegmentRangeId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkSegmentRangeId network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
     * @param {NetworkSegmentRangesTagsUpdateAllRequest} [networkSegmentRangesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesNetworkSegmentRangeIdTagsPut(networkSegmentRangeId: string, networkSegmentRangesTagsUpdateAllRequest?: NetworkSegmentRangesTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkSegmentRangesTagsUpdateAllResponse, any>>;
    /**
     *
     * @param {NetworkSegmentRangesCreateRequest} [networkSegmentRangesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkSegmentRangesApi
     */
    networkSegmentRangesPost(networkSegmentRangesCreateRequest?: NetworkSegmentRangesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkSegmentRangesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const NetworkSegmentRangesGetNetworkTypeEnum: {
    readonly Vlan: "vlan";
    readonly Vxlan: "vxlan";
    readonly Gre: "gre";
    readonly Geneve: "geneve";
};
export type NetworkSegmentRangesGetNetworkTypeEnum = typeof NetworkSegmentRangesGetNetworkTypeEnum[keyof typeof NetworkSegmentRangesGetNetworkTypeEnum];
/**
 * @export
 */
export declare const NetworkSegmentRangesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NetworkSegmentRangesGetSortDirEnum = typeof NetworkSegmentRangesGetSortDirEnum[keyof typeof NetworkSegmentRangesGetSortDirEnum];
/**
 * @export
 */
export declare const NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum = typeof NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum[keyof typeof NetworkSegmentRangesNetworkSegmentRangeIdTagsGetSortDirEnum];
/**
 * NetworkingAgentsApi - axios parameter creator
 * @export
 */
export declare const NetworkingAgentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/agents API
     * @param {string} [agentType] agent_type query parameter for /v2.0/agents API
     * @param {string} [binary] binary query parameter for /v2.0/agents API
     * @param {string} [topic] topic query parameter for /v2.0/agents API
     * @param {string} [host] host query parameter for /v2.0/agents API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/agents API
     * @param {string} [alive] alive query parameter for /v2.0/agents API
     * @param {string | null} [description] description query parameter for /v2.0/agents API
     * @param {string} [availabilityZone] availability_zone query parameter for /v2.0/agents API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsGet: (id?: string, agentType?: string, binary?: string, topic?: string, host?: string, adminStateUp?: string | boolean, alive?: string, description?: string | null, availabilityZone?: string, sortKey?: string, sortDir?: AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {AgentUpdateRequest} [agentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdPut: (id: string, agentUpdateRequest?: AgentUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {AgentsCreateRequest} [agentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsPost: (agentsCreateRequest?: AgentsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NetworkingAgentsApi - functional programming interface
 * @export
 */
export declare const NetworkingAgentsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/agents API
     * @param {string} [agentType] agent_type query parameter for /v2.0/agents API
     * @param {string} [binary] binary query parameter for /v2.0/agents API
     * @param {string} [topic] topic query parameter for /v2.0/agents API
     * @param {string} [host] host query parameter for /v2.0/agents API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/agents API
     * @param {string} [alive] alive query parameter for /v2.0/agents API
     * @param {string | null} [description] description query parameter for /v2.0/agents API
     * @param {string} [availabilityZone] availability_zone query parameter for /v2.0/agents API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsGet(id?: string, agentType?: string, binary?: string, topic?: string, host?: string, adminStateUp?: string | boolean, alive?: string, description?: string | null, availabilityZone?: string, sortKey?: string, sortDir?: AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {AgentUpdateRequest} [agentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdPut(id: string, agentUpdateRequest?: AgentUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentUpdateResponse>>;
    /**
     *
     * @param {AgentsCreateRequest} [agentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsPost(agentsCreateRequest?: AgentsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AgentsCreateResponse>>;
};
/**
 * NetworkingAgentsApi - factory interface
 * @export
 */
export declare const NetworkingAgentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/agents API
     * @param {string} [agentType] agent_type query parameter for /v2.0/agents API
     * @param {string} [binary] binary query parameter for /v2.0/agents API
     * @param {string} [topic] topic query parameter for /v2.0/agents API
     * @param {string} [host] host query parameter for /v2.0/agents API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/agents API
     * @param {string} [alive] alive query parameter for /v2.0/agents API
     * @param {string | null} [description] description query parameter for /v2.0/agents API
     * @param {string} [availabilityZone] availability_zone query parameter for /v2.0/agents API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsGet(id?: string, agentType?: string, binary?: string, topic?: string, host?: string, adminStateUp?: string | boolean, alive?: string, description?: string | null, availabilityZone?: string, sortKey?: string, sortDir?: AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<AgentsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdGet(id: string, options?: any): AxiosPromise<AgentShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {AgentUpdateRequest} [agentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsIdPut(id: string, agentUpdateRequest?: AgentUpdateRequest, options?: any): AxiosPromise<AgentUpdateResponse>;
    /**
     *
     * @param {AgentsCreateRequest} [agentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    agentsPost(agentsCreateRequest?: AgentsCreateRequest, options?: any): AxiosPromise<AgentsCreateResponse>;
};
/**
 * NetworkingAgentsApi - object-oriented interface
 * @export
 * @class NetworkingAgentsApi
 * @extends {BaseAPI}
 */
export declare class NetworkingAgentsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/agents API
     * @param {string} [agentType] agent_type query parameter for /v2.0/agents API
     * @param {string} [binary] binary query parameter for /v2.0/agents API
     * @param {string} [topic] topic query parameter for /v2.0/agents API
     * @param {string} [host] host query parameter for /v2.0/agents API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/agents API
     * @param {string} [alive] alive query parameter for /v2.0/agents API
     * @param {string | null} [description] description query parameter for /v2.0/agents API
     * @param {string} [availabilityZone] availability_zone query parameter for /v2.0/agents API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkingAgentsApi
     */
    agentsGet(id?: string, agentType?: string, binary?: string, topic?: string, host?: string, adminStateUp?: string | boolean, alive?: string, description?: string | null, availabilityZone?: string, sortKey?: string, sortDir?: AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkingAgentsApi
     */
    agentsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkingAgentsApi
     */
    agentsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/agents/{id} API
     * @param {AgentUpdateRequest} [agentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkingAgentsApi
     */
    agentsIdPut(id: string, agentUpdateRequest?: AgentUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentUpdateResponse, any>>;
    /**
     *
     * @param {AgentsCreateRequest} [agentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworkingAgentsApi
     */
    agentsPost(agentsCreateRequest?: AgentsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AgentsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const AgentsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type AgentsGetSortDirEnum = typeof AgentsGetSortDirEnum[keyof typeof AgentsGetSortDirEnum];
/**
 * NetworksApi - axios parameter creator
 * @export
 */
export declare const NetworksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/networks API
     * @param {string} [name] name query parameter for /v2.0/networks API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/networks API
     * @param {string} [status] status query parameter for /v2.0/networks API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/networks API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/networks API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/networks API
     * @param {string | number} [mtu] mtu query parameter for /v2.0/networks API
     * @param {string} [providernetworkType] provider:network_type query parameter for /v2.0/networks API
     * @param {string} [providerphysicalNetwork] provider:physical_network query parameter for /v2.0/networks API
     * @param {string | number} [providersegmentationId] provider:segmentation_id query parameter for /v2.0/networks API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/networks API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/networks API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/networks API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/networks API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/networks API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/networks API
     * @param {string} [description] description query parameter for /v2.0/networks API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksGet: (id?: string, name?: string, adminStateUp?: string | boolean, status?: string, tenantId?: string, shared?: string | boolean, routerexternal?: string | boolean, mtu?: string | number, providernetworkType?: string, providerphysicalNetwork?: string, providersegmentationId?: string | number, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, isDefault?: string | boolean, description?: string, sortKey?: string, sortDir?: NetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDelete: (networkId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdDhcpAgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsGet: (sortKey?: string, sortDir?: NetworksNetworkIdDhcpAgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdDelete: (networkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdGet: (networkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdPut: (networkId: string, id: string, body?: object, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsPost: (networkId: string, body?: object, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdGet: (networkId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {NetworkUpdateRequest} [networkUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdPut: (networkId: string, networkUpdateRequest?: NetworkUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsDelete: (networkId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsGet: (sortKey?: string, sortDir?: NetworksNetworkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdDelete: (networkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdGet: (networkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdPut: (networkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {NetworksTagsUpdateAllRequest} [networksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsPut: (networkId: string, networksTagsUpdateAllRequest?: NetworksTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {NetworksCreateRequest} [networksCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksPost: (networksCreateRequest?: NetworksCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * NetworksApi - functional programming interface
 * @export
 */
export declare const NetworksApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/networks API
     * @param {string} [name] name query parameter for /v2.0/networks API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/networks API
     * @param {string} [status] status query parameter for /v2.0/networks API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/networks API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/networks API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/networks API
     * @param {string | number} [mtu] mtu query parameter for /v2.0/networks API
     * @param {string} [providernetworkType] provider:network_type query parameter for /v2.0/networks API
     * @param {string} [providerphysicalNetwork] provider:physical_network query parameter for /v2.0/networks API
     * @param {string | number} [providersegmentationId] provider:segmentation_id query parameter for /v2.0/networks API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/networks API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/networks API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/networks API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/networks API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/networks API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/networks API
     * @param {string} [description] description query parameter for /v2.0/networks API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksGet(id?: string, name?: string, adminStateUp?: string | boolean, status?: string, tenantId?: string, shared?: string | boolean, routerexternal?: string | boolean, mtu?: string | number, providernetworkType?: string, providerphysicalNetwork?: string, providersegmentationId?: string | number, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, isDefault?: string | boolean, description?: string, sortKey?: string, sortDir?: NetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworksIndexResponse>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDelete(networkId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdDhcpAgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsGet(sortKey?: string, sortDir?: NetworksNetworkIdDhcpAgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdDelete(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdGet(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdPut(networkId: string, id: string, body?: object, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsPost(networkId: string, body?: object, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdGet(networkId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkShowResponse>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {NetworkUpdateRequest} [networkUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdPut(networkId: string, networkUpdateRequest?: NetworkUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworkUpdateResponse>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsDelete(networkId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsGet(sortKey?: string, sortDir?: NetworksNetworkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworksTagsIndexResponse>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdDelete(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdGet(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdPut(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {NetworksTagsUpdateAllRequest} [networksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsPut(networkId: string, networksTagsUpdateAllRequest?: NetworksTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworksTagsUpdateAllResponse>>;
    /**
     *
     * @param {NetworksCreateRequest} [networksCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksPost(networksCreateRequest?: NetworksCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<NetworksCreateResponse>>;
};
/**
 * NetworksApi - factory interface
 * @export
 */
export declare const NetworksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/networks API
     * @param {string} [name] name query parameter for /v2.0/networks API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/networks API
     * @param {string} [status] status query parameter for /v2.0/networks API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/networks API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/networks API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/networks API
     * @param {string | number} [mtu] mtu query parameter for /v2.0/networks API
     * @param {string} [providernetworkType] provider:network_type query parameter for /v2.0/networks API
     * @param {string} [providerphysicalNetwork] provider:physical_network query parameter for /v2.0/networks API
     * @param {string | number} [providersegmentationId] provider:segmentation_id query parameter for /v2.0/networks API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/networks API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/networks API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/networks API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/networks API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/networks API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/networks API
     * @param {string} [description] description query parameter for /v2.0/networks API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksGet(id?: string, name?: string, adminStateUp?: string | boolean, status?: string, tenantId?: string, shared?: string | boolean, routerexternal?: string | boolean, mtu?: string | number, providernetworkType?: string, providerphysicalNetwork?: string, providersegmentationId?: string | number, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, isDefault?: string | boolean, description?: string, sortKey?: string, sortDir?: NetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<NetworksIndexResponse>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDelete(networkId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdDhcpAgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsGet(sortKey?: string, sortDir?: NetworksNetworkIdDhcpAgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdDelete(networkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdGet(networkId: string, id: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsIdPut(networkId: string, id: string, body?: object, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdDhcpAgentsPost(networkId: string, body?: object, options?: any): AxiosPromise<object>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdGet(networkId: string, options?: any): AxiosPromise<NetworkShowResponse>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {NetworkUpdateRequest} [networkUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdPut(networkId: string, networkUpdateRequest?: NetworkUpdateRequest, options?: any): AxiosPromise<NetworkUpdateResponse>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsDelete(networkId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsGet(sortKey?: string, sortDir?: NetworksNetworkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<NetworksTagsIndexResponse>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdDelete(networkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdGet(networkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsIdPut(networkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {NetworksTagsUpdateAllRequest} [networksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksNetworkIdTagsPut(networkId: string, networksTagsUpdateAllRequest?: NetworksTagsUpdateAllRequest, options?: any): AxiosPromise<NetworksTagsUpdateAllResponse>;
    /**
     *
     * @param {NetworksCreateRequest} [networksCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    networksPost(networksCreateRequest?: NetworksCreateRequest, options?: any): AxiosPromise<NetworksCreateResponse>;
};
/**
 * NetworksApi - object-oriented interface
 * @export
 * @class NetworksApi
 * @extends {BaseAPI}
 */
export declare class NetworksApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/networks API
     * @param {string} [name] name query parameter for /v2.0/networks API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/networks API
     * @param {string} [status] status query parameter for /v2.0/networks API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/networks API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/networks API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/networks API
     * @param {string | number} [mtu] mtu query parameter for /v2.0/networks API
     * @param {string} [providernetworkType] provider:network_type query parameter for /v2.0/networks API
     * @param {string} [providerphysicalNetwork] provider:physical_network query parameter for /v2.0/networks API
     * @param {string | number} [providersegmentationId] provider:segmentation_id query parameter for /v2.0/networks API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/networks API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/networks API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/networks API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/networks API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/networks API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/networks API
     * @param {string} [description] description query parameter for /v2.0/networks API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksGet(id?: string, name?: string, adminStateUp?: string | boolean, status?: string, tenantId?: string, shared?: string | boolean, routerexternal?: string | boolean, mtu?: string | number, providernetworkType?: string, providerphysicalNetwork?: string, providersegmentationId?: string | number, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, isDefault?: string | boolean, description?: string, sortKey?: string, sortDir?: NetworksGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworksIndexResponse, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdDelete(networkId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdDhcpAgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdDhcpAgentsGet(sortKey?: string, sortDir?: NetworksNetworkIdDhcpAgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdDhcpAgentsIdDelete(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdDhcpAgentsIdGet(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdDhcpAgentsIdPut(networkId: string, id: string, body?: object, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
     * @param {object} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdDhcpAgentsPost(networkId: string, body?: object, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdGet(networkId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkShowResponse, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id} API
     * @param {NetworkUpdateRequest} [networkUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdPut(networkId: string, networkUpdateRequest?: NetworkUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworkUpdateResponse, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdTagsDelete(networkId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {NetworksNetworkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdTagsGet(sortKey?: string, sortDir?: NetworksNetworkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworksTagsIndexResponse, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdTagsIdDelete(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdTagsIdGet(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdTagsIdPut(networkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} networkId network_id parameter for /v2.0/networks/{network_id}/tags/{id} API
     * @param {NetworksTagsUpdateAllRequest} [networksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksNetworkIdTagsPut(networkId: string, networksTagsUpdateAllRequest?: NetworksTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworksTagsUpdateAllResponse, any>>;
    /**
     *
     * @param {NetworksCreateRequest} [networksCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApi
     */
    networksPost(networksCreateRequest?: NetworksCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<NetworksCreateResponse, any>>;
}
/**
 * @export
 */
export declare const NetworksGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NetworksGetSortDirEnum = typeof NetworksGetSortDirEnum[keyof typeof NetworksGetSortDirEnum];
/**
 * @export
 */
export declare const NetworksNetworkIdDhcpAgentsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NetworksNetworkIdDhcpAgentsGetSortDirEnum = typeof NetworksNetworkIdDhcpAgentsGetSortDirEnum[keyof typeof NetworksNetworkIdDhcpAgentsGetSortDirEnum];
/**
 * @export
 */
export declare const NetworksNetworkIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type NetworksNetworkIdTagsGetSortDirEnum = typeof NetworksNetworkIdTagsGetSortDirEnum[keyof typeof NetworksNetworkIdTagsGetSortDirEnum];
/**
 * PoliciesApi - axios parameter creator
 * @export
 */
export declare const PoliciesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxKpps] max_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxBurstKpps] max_burst_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesGet: (id?: string, maxKpps?: string | number, maxBurstKpps?: string | number, direction?: PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum, sortKey?: string, sortDir?: PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdDelete: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdGet: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRuleUpdateRequest} [policiesPacketRateLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdPut: (policyId: string, id: string, policiesPacketRateLimitRuleUpdateRequest?: PoliciesPacketRateLimitRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRulesCreateRequest} [policiesPacketRateLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesPost: (policyId: string, policiesPacketRateLimitRulesCreateRequest?: PoliciesPacketRateLimitRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsDelete: (policyId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsGet: (sortKey?: string, sortDir?: PoliciesPolicyIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdDelete: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdGet: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdPut: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {PoliciesTagsUpdateAllRequest} [policiesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsPut: (policyId: string, policiesTagsUpdateAllRequest?: PoliciesTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PoliciesApi - functional programming interface
 * @export
 */
export declare const PoliciesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxKpps] max_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxBurstKpps] max_burst_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesGet(id?: string, maxKpps?: string | number, maxBurstKpps?: string | number, direction?: PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum, sortKey?: string, sortDir?: PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoliciesPacketRateLimitRulesIndexResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoliciesPacketRateLimitRuleShowResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRuleUpdateRequest} [policiesPacketRateLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdPut(policyId: string, id: string, policiesPacketRateLimitRuleUpdateRequest?: PoliciesPacketRateLimitRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoliciesPacketRateLimitRuleUpdateResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRulesCreateRequest} [policiesPacketRateLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesPost(policyId: string, policiesPacketRateLimitRulesCreateRequest?: PoliciesPacketRateLimitRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoliciesPacketRateLimitRulesCreateResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsDelete(policyId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsGet(sortKey?: string, sortDir?: PoliciesPolicyIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoliciesTagsIndexResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdPut(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {PoliciesTagsUpdateAllRequest} [policiesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsPut(policyId: string, policiesTagsUpdateAllRequest?: PoliciesTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PoliciesTagsUpdateAllResponse>>;
};
/**
 * PoliciesApi - factory interface
 * @export
 */
export declare const PoliciesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxKpps] max_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxBurstKpps] max_burst_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesGet(id?: string, maxKpps?: string | number, maxBurstKpps?: string | number, direction?: PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum, sortKey?: string, sortDir?: PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<PoliciesPacketRateLimitRulesIndexResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdDelete(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdGet(policyId: string, id: string, options?: any): AxiosPromise<PoliciesPacketRateLimitRuleShowResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRuleUpdateRequest} [policiesPacketRateLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesIdPut(policyId: string, id: string, policiesPacketRateLimitRuleUpdateRequest?: PoliciesPacketRateLimitRuleUpdateRequest, options?: any): AxiosPromise<PoliciesPacketRateLimitRuleUpdateResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRulesCreateRequest} [policiesPacketRateLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdPacketRateLimitRulesPost(policyId: string, policiesPacketRateLimitRulesCreateRequest?: PoliciesPacketRateLimitRulesCreateRequest, options?: any): AxiosPromise<PoliciesPacketRateLimitRulesCreateResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsDelete(policyId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsGet(sortKey?: string, sortDir?: PoliciesPolicyIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<PoliciesTagsIndexResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdDelete(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdGet(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsIdPut(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {PoliciesTagsUpdateAllRequest} [policiesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    policiesPolicyIdTagsPut(policyId: string, policiesTagsUpdateAllRequest?: PoliciesTagsUpdateAllRequest, options?: any): AxiosPromise<PoliciesTagsUpdateAllResponse>;
};
/**
 * PoliciesApi - object-oriented interface
 * @export
 * @class PoliciesApi
 * @extends {BaseAPI}
 */
export declare class PoliciesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxKpps] max_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string | number} [maxBurstKpps] max_burst_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdPacketRateLimitRulesGet(id?: string, maxKpps?: string | number, maxBurstKpps?: string | number, direction?: PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum, sortKey?: string, sortDir?: PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PoliciesPacketRateLimitRulesIndexResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdPacketRateLimitRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdPacketRateLimitRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PoliciesPacketRateLimitRuleShowResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRuleUpdateRequest} [policiesPacketRateLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdPacketRateLimitRulesIdPut(policyId: string, id: string, policiesPacketRateLimitRuleUpdateRequest?: PoliciesPacketRateLimitRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PoliciesPacketRateLimitRuleUpdateResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
     * @param {PoliciesPacketRateLimitRulesCreateRequest} [policiesPacketRateLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdPacketRateLimitRulesPost(policyId: string, policiesPacketRateLimitRulesCreateRequest?: PoliciesPacketRateLimitRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PoliciesPacketRateLimitRulesCreateResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdTagsDelete(policyId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PoliciesPolicyIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdTagsGet(sortKey?: string, sortDir?: PoliciesPolicyIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PoliciesTagsIndexResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdTagsIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdTagsIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdTagsIdPut(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
     * @param {PoliciesTagsUpdateAllRequest} [policiesTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PoliciesApi
     */
    policiesPolicyIdTagsPut(policyId: string, policiesTagsUpdateAllRequest?: PoliciesTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PoliciesTagsUpdateAllResponse, any>>;
}
/**
 * @export
 */
export declare const PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum = typeof PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum[keyof typeof PoliciesPolicyIdPacketRateLimitRulesGetDirectionEnum];
/**
 * @export
 */
export declare const PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum = typeof PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum[keyof typeof PoliciesPolicyIdPacketRateLimitRulesGetSortDirEnum];
/**
 * @export
 */
export declare const PoliciesPolicyIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type PoliciesPolicyIdTagsGetSortDirEnum = typeof PoliciesPolicyIdTagsGetSortDirEnum[keyof typeof PoliciesPolicyIdTagsGetSortDirEnum];
/**
 * PortBindingsApi - axios parameter creator
 * @export
 */
export declare const PortBindingsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [host] host query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [vifType] vif_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {PortsPortIdBindingsGetVnicTypeEnum} [vnicType] vnic_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [status] status query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdBindingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsGet: (host?: string, vifType?: string, vnicType?: PortsPortIdBindingsGetVnicTypeEnum, status?: string, sortKey?: string, sortDir?: PortsPortIdBindingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsActivateActivateRequest} [portsBindingsActivateActivateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdActivatePut: (portId: string, id: string, portsBindingsActivateActivateRequest?: PortsBindingsActivateActivateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdDelete: (portId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdGet: (portId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingUpdateRequest} [portsBindingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdPut: (portId: string, id: string, portsBindingUpdateRequest?: PortsBindingUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsCreateRequest} [portsBindingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsPost: (portId: string, portsBindingsCreateRequest?: PortsBindingsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PortBindingsApi - functional programming interface
 * @export
 */
export declare const PortBindingsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [host] host query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [vifType] vif_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {PortsPortIdBindingsGetVnicTypeEnum} [vnicType] vnic_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [status] status query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdBindingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsGet(host?: string, vifType?: string, vnicType?: PortsPortIdBindingsGetVnicTypeEnum, status?: string, sortKey?: string, sortDir?: PortsPortIdBindingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsBindingsIndexResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsActivateActivateRequest} [portsBindingsActivateActivateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdActivatePut(portId: string, id: string, portsBindingsActivateActivateRequest?: PortsBindingsActivateActivateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsBindingShowResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdDelete(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdGet(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsBindingShowResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingUpdateRequest} [portsBindingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdPut(portId: string, id: string, portsBindingUpdateRequest?: PortsBindingUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsBindingUpdateResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsCreateRequest} [portsBindingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsPost(portId: string, portsBindingsCreateRequest?: PortsBindingsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsBindingsCreateResponse>>;
};
/**
 * PortBindingsApi - factory interface
 * @export
 */
export declare const PortBindingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [host] host query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [vifType] vif_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {PortsPortIdBindingsGetVnicTypeEnum} [vnicType] vnic_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [status] status query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdBindingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsGet(host?: string, vifType?: string, vnicType?: PortsPortIdBindingsGetVnicTypeEnum, status?: string, sortKey?: string, sortDir?: PortsPortIdBindingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<PortsBindingsIndexResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsActivateActivateRequest} [portsBindingsActivateActivateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdActivatePut(portId: string, id: string, portsBindingsActivateActivateRequest?: PortsBindingsActivateActivateRequest, options?: any): AxiosPromise<PortsBindingShowResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdDelete(portId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdGet(portId: string, id: string, options?: any): AxiosPromise<PortsBindingShowResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingUpdateRequest} [portsBindingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsIdPut(portId: string, id: string, portsBindingUpdateRequest?: PortsBindingUpdateRequest, options?: any): AxiosPromise<PortsBindingUpdateResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsCreateRequest} [portsBindingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdBindingsPost(portId: string, portsBindingsCreateRequest?: PortsBindingsCreateRequest, options?: any): AxiosPromise<PortsBindingsCreateResponse>;
};
/**
 * PortBindingsApi - object-oriented interface
 * @export
 * @class PortBindingsApi
 * @extends {BaseAPI}
 */
export declare class PortBindingsApi extends BaseAPI {
    /**
     *
     * @param {string} [host] host query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [vifType] vif_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {PortsPortIdBindingsGetVnicTypeEnum} [vnicType] vnic_type query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [status] status query parameter for /v2.0/ports/{port_id}/bindings API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdBindingsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortBindingsApi
     */
    portsPortIdBindingsGet(host?: string, vifType?: string, vnicType?: PortsPortIdBindingsGetVnicTypeEnum, status?: string, sortKey?: string, sortDir?: PortsPortIdBindingsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsBindingsIndexResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsActivateActivateRequest} [portsBindingsActivateActivateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortBindingsApi
     */
    portsPortIdBindingsIdActivatePut(portId: string, id: string, portsBindingsActivateActivateRequest?: PortsBindingsActivateActivateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsBindingShowResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortBindingsApi
     */
    portsPortIdBindingsIdDelete(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortBindingsApi
     */
    portsPortIdBindingsIdGet(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsBindingShowResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingUpdateRequest} [portsBindingUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortBindingsApi
     */
    portsPortIdBindingsIdPut(portId: string, id: string, portsBindingUpdateRequest?: PortsBindingUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsBindingUpdateResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
     * @param {PortsBindingsCreateRequest} [portsBindingsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortBindingsApi
     */
    portsPortIdBindingsPost(portId: string, portsBindingsCreateRequest?: PortsBindingsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsBindingsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const PortsPortIdBindingsGetVnicTypeEnum: {
    readonly Normal: "normal";
    readonly Direct: "direct";
    readonly Macvtap: "macvtap";
    readonly Baremetal: "baremetal";
    readonly DirectPhysical: "direct-physical";
    readonly VirtioForwarder: "virtio-forwarder";
    readonly SmartNic: "smart-nic";
    readonly Vdpa: "vdpa";
    readonly AcceleratorDirect: "accelerator-direct";
    readonly AcceleratorDirectPhysical: "accelerator-direct-physical";
    readonly RemoteManaged: "remote-managed";
};
export type PortsPortIdBindingsGetVnicTypeEnum = typeof PortsPortIdBindingsGetVnicTypeEnum[keyof typeof PortsPortIdBindingsGetVnicTypeEnum];
/**
 * @export
 */
export declare const PortsPortIdBindingsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type PortsPortIdBindingsGetSortDirEnum = typeof PortsPortIdBindingsGetSortDirEnum[keyof typeof PortsPortIdBindingsGetSortDirEnum];
/**
 * PortsApi - axios parameter creator
 * @export
 */
export declare const PortsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/ports API
     * @param {string} [name] name query parameter for /v2.0/ports API
     * @param {string} [networkId] network_id query parameter for /v2.0/ports API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/ports API
     * @param {string} [macAddress] mac_address query parameter for /v2.0/ports API
     * @param {Array<string>} [fixedIps] fixed_ips query parameter for /v2.0/ports API
     * @param {string} [deviceId] device_id query parameter for /v2.0/ports API
     * @param {string} [deviceOwner] device_owner query parameter for /v2.0/ports API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/ports API
     * @param {string} [status] status query parameter for /v2.0/ports API
     * @param {string} [ipAllocation] ip_allocation query parameter for /v2.0/ports API
     * @param {string} [bindinghostId] binding:host_id query parameter for /v2.0/ports API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ports API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/ports API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/ports API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/ports API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/ports API
     * @param {string} [description] description query parameter for /v2.0/ports API
     * @param {Array<string>} [securityGroups] security_groups query parameter for /v2.0/ports API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsGet: (id?: string, name?: string, networkId?: string, adminStateUp?: string | boolean, macAddress?: string, fixedIps?: Array<string>, deviceId?: string, deviceOwner?: string, tenantId?: string, status?: string, ipAllocation?: string, bindinghostId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, securityGroups?: Array<string>, sortKey?: string, sortDir?: PortsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdAddAllowedAddressPairsPut: (portId: string, body?: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdDelete: (portId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdGet: (portId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {PortUpdateRequest} [portUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdPut: (portId: string, portUpdateRequest?: PortUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsDelete: (portId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsGet: (sortKey?: string, sortDir?: PortsPortIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdDelete: (portId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdGet: (portId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdPut: (portId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {PortsTagsUpdateAllRequest} [portsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsPut: (portId: string, portsTagsUpdateAllRequest?: PortsTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {PortsCreateRequest} [portsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPost: (portsCreateRequest?: PortsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PortsApi - functional programming interface
 * @export
 */
export declare const PortsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/ports API
     * @param {string} [name] name query parameter for /v2.0/ports API
     * @param {string} [networkId] network_id query parameter for /v2.0/ports API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/ports API
     * @param {string} [macAddress] mac_address query parameter for /v2.0/ports API
     * @param {Array<string>} [fixedIps] fixed_ips query parameter for /v2.0/ports API
     * @param {string} [deviceId] device_id query parameter for /v2.0/ports API
     * @param {string} [deviceOwner] device_owner query parameter for /v2.0/ports API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/ports API
     * @param {string} [status] status query parameter for /v2.0/ports API
     * @param {string} [ipAllocation] ip_allocation query parameter for /v2.0/ports API
     * @param {string} [bindinghostId] binding:host_id query parameter for /v2.0/ports API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ports API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/ports API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/ports API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/ports API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/ports API
     * @param {string} [description] description query parameter for /v2.0/ports API
     * @param {Array<string>} [securityGroups] security_groups query parameter for /v2.0/ports API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsGet(id?: string, name?: string, networkId?: string, adminStateUp?: string | boolean, macAddress?: string, fixedIps?: Array<string>, deviceId?: string, deviceOwner?: string, tenantId?: string, status?: string, ipAllocation?: string, bindinghostId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, securityGroups?: Array<string>, sortKey?: string, sortDir?: PortsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsIndexResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdAddAllowedAddressPairsPut(portId: string, body?: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdDelete(portId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdGet(portId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortShowResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {PortUpdateRequest} [portUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdPut(portId: string, portUpdateRequest?: PortUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortUpdateResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsDelete(portId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsGet(sortKey?: string, sortDir?: PortsPortIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsTagsIndexResponse>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdDelete(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdGet(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdPut(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {PortsTagsUpdateAllRequest} [portsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsPut(portId: string, portsTagsUpdateAllRequest?: PortsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsTagsUpdateAllResponse>>;
    /**
     *
     * @param {PortsCreateRequest} [portsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPost(portsCreateRequest?: PortsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PortsCreateResponse>>;
};
/**
 * PortsApi - factory interface
 * @export
 */
export declare const PortsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/ports API
     * @param {string} [name] name query parameter for /v2.0/ports API
     * @param {string} [networkId] network_id query parameter for /v2.0/ports API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/ports API
     * @param {string} [macAddress] mac_address query parameter for /v2.0/ports API
     * @param {Array<string>} [fixedIps] fixed_ips query parameter for /v2.0/ports API
     * @param {string} [deviceId] device_id query parameter for /v2.0/ports API
     * @param {string} [deviceOwner] device_owner query parameter for /v2.0/ports API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/ports API
     * @param {string} [status] status query parameter for /v2.0/ports API
     * @param {string} [ipAllocation] ip_allocation query parameter for /v2.0/ports API
     * @param {string} [bindinghostId] binding:host_id query parameter for /v2.0/ports API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ports API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/ports API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/ports API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/ports API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/ports API
     * @param {string} [description] description query parameter for /v2.0/ports API
     * @param {Array<string>} [securityGroups] security_groups query parameter for /v2.0/ports API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsGet(id?: string, name?: string, networkId?: string, adminStateUp?: string | boolean, macAddress?: string, fixedIps?: Array<string>, deviceId?: string, deviceOwner?: string, tenantId?: string, status?: string, ipAllocation?: string, bindinghostId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, securityGroups?: Array<string>, sortKey?: string, sortDir?: PortsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<PortsIndexResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdAddAllowedAddressPairsPut(portId: string, body?: any, options?: any): AxiosPromise<any>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdDelete(portId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdGet(portId: string, options?: any): AxiosPromise<PortShowResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {PortUpdateRequest} [portUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdPut(portId: string, portUpdateRequest?: PortUpdateRequest, options?: any): AxiosPromise<PortUpdateResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsDelete(portId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsGet(sortKey?: string, sortDir?: PortsPortIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<PortsTagsIndexResponse>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdDelete(portId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdGet(portId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsIdPut(portId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {PortsTagsUpdateAllRequest} [portsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPortIdTagsPut(portId: string, portsTagsUpdateAllRequest?: PortsTagsUpdateAllRequest, options?: any): AxiosPromise<PortsTagsUpdateAllResponse>;
    /**
     *
     * @param {PortsCreateRequest} [portsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    portsPost(portsCreateRequest?: PortsCreateRequest, options?: any): AxiosPromise<PortsCreateResponse>;
};
/**
 * PortsApi - object-oriented interface
 * @export
 * @class PortsApi
 * @extends {BaseAPI}
 */
export declare class PortsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/ports API
     * @param {string} [name] name query parameter for /v2.0/ports API
     * @param {string} [networkId] network_id query parameter for /v2.0/ports API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/ports API
     * @param {string} [macAddress] mac_address query parameter for /v2.0/ports API
     * @param {Array<string>} [fixedIps] fixed_ips query parameter for /v2.0/ports API
     * @param {string} [deviceId] device_id query parameter for /v2.0/ports API
     * @param {string} [deviceOwner] device_owner query parameter for /v2.0/ports API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/ports API
     * @param {string} [status] status query parameter for /v2.0/ports API
     * @param {string} [ipAllocation] ip_allocation query parameter for /v2.0/ports API
     * @param {string} [bindinghostId] binding:host_id query parameter for /v2.0/ports API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/ports API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/ports API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/ports API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/ports API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/ports API
     * @param {string} [description] description query parameter for /v2.0/ports API
     * @param {Array<string>} [securityGroups] security_groups query parameter for /v2.0/ports API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsGet(id?: string, name?: string, networkId?: string, adminStateUp?: string | boolean, macAddress?: string, fixedIps?: Array<string>, deviceId?: string, deviceOwner?: string, tenantId?: string, status?: string, ipAllocation?: string, bindinghostId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, securityGroups?: Array<string>, sortKey?: string, sortDir?: PortsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsIndexResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdAddAllowedAddressPairsPut(portId: string, body?: any, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdDelete(portId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdGet(portId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortShowResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs API
     * @param {PortUpdateRequest} [portUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdPut(portId: string, portUpdateRequest?: PortUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortUpdateResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdTagsDelete(portId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {PortsPortIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdTagsGet(sortKey?: string, sortDir?: PortsPortIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsTagsIndexResponse, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdTagsIdDelete(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdTagsIdGet(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdTagsIdPut(portId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} portId port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
     * @param {PortsTagsUpdateAllRequest} [portsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPortIdTagsPut(portId: string, portsTagsUpdateAllRequest?: PortsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsTagsUpdateAllResponse, any>>;
    /**
     *
     * @param {PortsCreateRequest} [portsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PortsApi
     */
    portsPost(portsCreateRequest?: PortsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PortsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const PortsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type PortsGetSortDirEnum = typeof PortsGetSortDirEnum[keyof typeof PortsGetSortDirEnum];
/**
 * @export
 */
export declare const PortsPortIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type PortsPortIdTagsGetSortDirEnum = typeof PortsPortIdTagsGetSortDirEnum[keyof typeof PortsPortIdTagsGetSortDirEnum];
/**
 * QosApi - axios parameter creator
 * @export
 */
export declare const QosApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {QosAliasBandwidthLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesGet: (id?: string, maxKbps?: string | number, direction?: QosAliasBandwidthLimitRulesGetDirectionEnum, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosAliasBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {QosAliasBandwidthLimitRuleUpdateRequest} [qosAliasBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdPut: (id: string, qosAliasBandwidthLimitRuleUpdateRequest?: QosAliasBandwidthLimitRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {QosAliasBandwidthLimitRulesCreateRequest} [qosAliasBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesPost: (qosAliasBandwidthLimitRulesCreateRequest?: QosAliasBandwidthLimitRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {QosAliasDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesGet: (id?: string, dscpMark?: QosAliasDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosAliasDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {QosAliasDscpMarkingRuleUpdateRequest} [qosAliasDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdPut: (id: string, qosAliasDscpMarkingRuleUpdateRequest?: QosAliasDscpMarkingRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {QosAliasDscpMarkingRulesCreateRequest} [qosAliasDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesPost: (qosAliasDscpMarkingRulesCreateRequest?: QosAliasDscpMarkingRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {QosAliasMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesGet: (id?: string, minKbps?: string | number, direction?: QosAliasMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {QosAliasMinimumBandwidthRuleUpdateRequest} [qosAliasMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdPut: (id: string, qosAliasMinimumBandwidthRuleUpdateRequest?: QosAliasMinimumBandwidthRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {QosAliasMinimumBandwidthRulesCreateRequest} [qosAliasMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesPost: (qosAliasMinimumBandwidthRulesCreateRequest?: QosAliasMinimumBandwidthRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {QosAliasMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesGet: (id?: string, minKpps?: string | number, direction?: QosAliasMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {QosAliasMinimumPacketRateRuleUpdateRequest} [qosAliasMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdPut: (id: string, qosAliasMinimumPacketRateRuleUpdateRequest?: QosAliasMinimumPacketRateRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {QosAliasMinimumPacketRateRulesCreateRequest} [qosAliasMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesPost: (qosAliasMinimumPacketRateRulesCreateRequest?: QosAliasMinimumPacketRateRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies API
     * @param {string} [name] name query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/qos/policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/qos/policies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/qos/policies API
     * @param {string} [description] description query parameter for /v2.0/qos/policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesGet: (id?: string, name?: string, shared?: string | boolean, tenantId?: string, isDefault?: string | boolean, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: QosPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {QosPolicyUpdateRequest} [qosPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdPut: (id: string, qosPolicyUpdateRequest?: QosPolicyUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesGet: (id?: string, maxKbps?: string | number, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdDelete: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdGet: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRuleUpdateRequest} [qosPoliciesBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdPut: (policyId: string, id: string, qosPoliciesBandwidthLimitRuleUpdateRequest?: QosPoliciesBandwidthLimitRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRulesCreateRequest} [qosPoliciesBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesPost: (policyId: string, qosPoliciesBandwidthLimitRulesCreateRequest?: QosPoliciesBandwidthLimitRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesGet: (id?: string, dscpMark?: QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdDelete: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdGet: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRuleUpdateRequest} [qosPoliciesDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdPut: (policyId: string, id: string, qosPoliciesDscpMarkingRuleUpdateRequest?: QosPoliciesDscpMarkingRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRulesCreateRequest} [qosPoliciesDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesPost: (policyId: string, qosPoliciesDscpMarkingRulesCreateRequest?: QosPoliciesDscpMarkingRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesGet: (id?: string, minKbps?: string | number, direction?: QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdDelete: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdGet: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRuleUpdateRequest} [qosPoliciesMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdPut: (policyId: string, id: string, qosPoliciesMinimumBandwidthRuleUpdateRequest?: QosPoliciesMinimumBandwidthRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRulesCreateRequest} [qosPoliciesMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesPost: (policyId: string, qosPoliciesMinimumBandwidthRulesCreateRequest?: QosPoliciesMinimumBandwidthRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesGet: (id?: string, minKpps?: string | number, direction?: QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdDelete: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdGet: (policyId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRuleUpdateRequest} [qosPoliciesMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdPut: (policyId: string, id: string, qosPoliciesMinimumPacketRateRuleUpdateRequest?: QosPoliciesMinimumPacketRateRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRulesCreateRequest} [qosPoliciesMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesPost: (policyId: string, qosPoliciesMinimumPacketRateRulesCreateRequest?: QosPoliciesMinimumPacketRateRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {QosPoliciesCreateRequest} [qosPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPost: (qosPoliciesCreateRequest?: QosPoliciesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string | boolean | null} [allRules] all_rules query parameter for /v2.0/qos/rule-types API
     * @param {string | boolean | null} [allSupported] all_supported query parameter for /v2.0/qos/rule-types API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosRuleTypesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesGet: (allRules?: string | boolean | null, allSupported?: string | boolean | null, sortKey?: string, sortDir?: QosRuleTypesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {QosRuleTypeUpdateRequest} [qosRuleTypeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdPut: (id: string, qosRuleTypeUpdateRequest?: QosRuleTypeUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {QosRuleTypesCreateRequest} [qosRuleTypesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesPost: (qosRuleTypesCreateRequest?: QosRuleTypesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * QosApi - functional programming interface
 * @export
 */
export declare const QosApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {QosAliasBandwidthLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesGet(id?: string, maxKbps?: string | number, direction?: QosAliasBandwidthLimitRulesGetDirectionEnum, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosAliasBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasBandwidthLimitRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasBandwidthLimitRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {QosAliasBandwidthLimitRuleUpdateRequest} [qosAliasBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdPut(id: string, qosAliasBandwidthLimitRuleUpdateRequest?: QosAliasBandwidthLimitRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasBandwidthLimitRuleUpdateResponse>>;
    /**
     *
     * @param {QosAliasBandwidthLimitRulesCreateRequest} [qosAliasBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesPost(qosAliasBandwidthLimitRulesCreateRequest?: QosAliasBandwidthLimitRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasBandwidthLimitRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {QosAliasDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesGet(id?: string, dscpMark?: QosAliasDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosAliasDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasDscpMarkingRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasDscpMarkingRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {QosAliasDscpMarkingRuleUpdateRequest} [qosAliasDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdPut(id: string, qosAliasDscpMarkingRuleUpdateRequest?: QosAliasDscpMarkingRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasDscpMarkingRuleUpdateResponse>>;
    /**
     *
     * @param {QosAliasDscpMarkingRulesCreateRequest} [qosAliasDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesPost(qosAliasDscpMarkingRulesCreateRequest?: QosAliasDscpMarkingRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasDscpMarkingRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {QosAliasMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesGet(id?: string, minKbps?: string | number, direction?: QosAliasMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumBandwidthRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumBandwidthRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {QosAliasMinimumBandwidthRuleUpdateRequest} [qosAliasMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdPut(id: string, qosAliasMinimumBandwidthRuleUpdateRequest?: QosAliasMinimumBandwidthRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumBandwidthRuleUpdateResponse>>;
    /**
     *
     * @param {QosAliasMinimumBandwidthRulesCreateRequest} [qosAliasMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesPost(qosAliasMinimumBandwidthRulesCreateRequest?: QosAliasMinimumBandwidthRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumBandwidthRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {QosAliasMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesGet(id?: string, minKpps?: string | number, direction?: QosAliasMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumPacketRateRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumPacketRateRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {QosAliasMinimumPacketRateRuleUpdateRequest} [qosAliasMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdPut(id: string, qosAliasMinimumPacketRateRuleUpdateRequest?: QosAliasMinimumPacketRateRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumPacketRateRuleUpdateResponse>>;
    /**
     *
     * @param {QosAliasMinimumPacketRateRulesCreateRequest} [qosAliasMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesPost(qosAliasMinimumPacketRateRulesCreateRequest?: QosAliasMinimumPacketRateRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosAliasMinimumPacketRateRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies API
     * @param {string} [name] name query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/qos/policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/qos/policies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/qos/policies API
     * @param {string} [description] description query parameter for /v2.0/qos/policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesGet(id?: string, name?: string, shared?: string | boolean, tenantId?: string, isDefault?: string | boolean, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: QosPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPolicyShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {QosPolicyUpdateRequest} [qosPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdPut(id: string, qosPolicyUpdateRequest?: QosPolicyUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPolicyUpdateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesGet(id?: string, maxKbps?: string | number, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesBandwidthLimitRulesIndexResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesBandwidthLimitRuleShowResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRuleUpdateRequest} [qosPoliciesBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdPut(policyId: string, id: string, qosPoliciesBandwidthLimitRuleUpdateRequest?: QosPoliciesBandwidthLimitRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesBandwidthLimitRuleUpdateResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRulesCreateRequest} [qosPoliciesBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesPost(policyId: string, qosPoliciesBandwidthLimitRulesCreateRequest?: QosPoliciesBandwidthLimitRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesBandwidthLimitRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesGet(id?: string, dscpMark?: QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesDscpMarkingRulesIndexResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesDscpMarkingRuleShowResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRuleUpdateRequest} [qosPoliciesDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdPut(policyId: string, id: string, qosPoliciesDscpMarkingRuleUpdateRequest?: QosPoliciesDscpMarkingRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesDscpMarkingRuleUpdateResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRulesCreateRequest} [qosPoliciesDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesPost(policyId: string, qosPoliciesDscpMarkingRulesCreateRequest?: QosPoliciesDscpMarkingRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesDscpMarkingRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesGet(id?: string, minKbps?: string | number, direction?: QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumBandwidthRulesIndexResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumBandwidthRuleShowResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRuleUpdateRequest} [qosPoliciesMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdPut(policyId: string, id: string, qosPoliciesMinimumBandwidthRuleUpdateRequest?: QosPoliciesMinimumBandwidthRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumBandwidthRuleUpdateResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRulesCreateRequest} [qosPoliciesMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesPost(policyId: string, qosPoliciesMinimumBandwidthRulesCreateRequest?: QosPoliciesMinimumBandwidthRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumBandwidthRulesCreateResponse>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesGet(id?: string, minKpps?: string | number, direction?: QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumPacketRateRulesIndexResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumPacketRateRuleShowResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRuleUpdateRequest} [qosPoliciesMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdPut(policyId: string, id: string, qosPoliciesMinimumPacketRateRuleUpdateRequest?: QosPoliciesMinimumPacketRateRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumPacketRateRuleUpdateResponse>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRulesCreateRequest} [qosPoliciesMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesPost(policyId: string, qosPoliciesMinimumPacketRateRulesCreateRequest?: QosPoliciesMinimumPacketRateRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesMinimumPacketRateRulesCreateResponse>>;
    /**
     *
     * @param {QosPoliciesCreateRequest} [qosPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPost(qosPoliciesCreateRequest?: QosPoliciesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosPoliciesCreateResponse>>;
    /**
     *
     * @param {string | boolean | null} [allRules] all_rules query parameter for /v2.0/qos/rule-types API
     * @param {string | boolean | null} [allSupported] all_supported query parameter for /v2.0/qos/rule-types API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosRuleTypesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesGet(allRules?: string | boolean | null, allSupported?: string | boolean | null, sortKey?: string, sortDir?: QosRuleTypesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosRuleTypesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosRuleTypeShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {QosRuleTypeUpdateRequest} [qosRuleTypeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdPut(id: string, qosRuleTypeUpdateRequest?: QosRuleTypeUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosRuleTypeUpdateResponse>>;
    /**
     *
     * @param {QosRuleTypesCreateRequest} [qosRuleTypesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesPost(qosRuleTypesCreateRequest?: QosRuleTypesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QosRuleTypesCreateResponse>>;
};
/**
 * QosApi - factory interface
 * @export
 */
export declare const QosApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {QosAliasBandwidthLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesGet(id?: string, maxKbps?: string | number, direction?: QosAliasBandwidthLimitRulesGetDirectionEnum, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosAliasBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosAliasBandwidthLimitRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdGet(id: string, options?: any): AxiosPromise<QosAliasBandwidthLimitRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {QosAliasBandwidthLimitRuleUpdateRequest} [qosAliasBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesIdPut(id: string, qosAliasBandwidthLimitRuleUpdateRequest?: QosAliasBandwidthLimitRuleUpdateRequest, options?: any): AxiosPromise<QosAliasBandwidthLimitRuleUpdateResponse>;
    /**
     *
     * @param {QosAliasBandwidthLimitRulesCreateRequest} [qosAliasBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasBandwidthLimitRulesPost(qosAliasBandwidthLimitRulesCreateRequest?: QosAliasBandwidthLimitRulesCreateRequest, options?: any): AxiosPromise<QosAliasBandwidthLimitRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {QosAliasDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesGet(id?: string, dscpMark?: QosAliasDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosAliasDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosAliasDscpMarkingRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdGet(id: string, options?: any): AxiosPromise<QosAliasDscpMarkingRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {QosAliasDscpMarkingRuleUpdateRequest} [qosAliasDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesIdPut(id: string, qosAliasDscpMarkingRuleUpdateRequest?: QosAliasDscpMarkingRuleUpdateRequest, options?: any): AxiosPromise<QosAliasDscpMarkingRuleUpdateResponse>;
    /**
     *
     * @param {QosAliasDscpMarkingRulesCreateRequest} [qosAliasDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasDscpMarkingRulesPost(qosAliasDscpMarkingRulesCreateRequest?: QosAliasDscpMarkingRulesCreateRequest, options?: any): AxiosPromise<QosAliasDscpMarkingRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {QosAliasMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesGet(id?: string, minKbps?: string | number, direction?: QosAliasMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosAliasMinimumBandwidthRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdGet(id: string, options?: any): AxiosPromise<QosAliasMinimumBandwidthRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {QosAliasMinimumBandwidthRuleUpdateRequest} [qosAliasMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesIdPut(id: string, qosAliasMinimumBandwidthRuleUpdateRequest?: QosAliasMinimumBandwidthRuleUpdateRequest, options?: any): AxiosPromise<QosAliasMinimumBandwidthRuleUpdateResponse>;
    /**
     *
     * @param {QosAliasMinimumBandwidthRulesCreateRequest} [qosAliasMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumBandwidthRulesPost(qosAliasMinimumBandwidthRulesCreateRequest?: QosAliasMinimumBandwidthRulesCreateRequest, options?: any): AxiosPromise<QosAliasMinimumBandwidthRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {QosAliasMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesGet(id?: string, minKpps?: string | number, direction?: QosAliasMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosAliasMinimumPacketRateRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdGet(id: string, options?: any): AxiosPromise<QosAliasMinimumPacketRateRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {QosAliasMinimumPacketRateRuleUpdateRequest} [qosAliasMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesIdPut(id: string, qosAliasMinimumPacketRateRuleUpdateRequest?: QosAliasMinimumPacketRateRuleUpdateRequest, options?: any): AxiosPromise<QosAliasMinimumPacketRateRuleUpdateResponse>;
    /**
     *
     * @param {QosAliasMinimumPacketRateRulesCreateRequest} [qosAliasMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosAliasMinimumPacketRateRulesPost(qosAliasMinimumPacketRateRulesCreateRequest?: QosAliasMinimumPacketRateRulesCreateRequest, options?: any): AxiosPromise<QosAliasMinimumPacketRateRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies API
     * @param {string} [name] name query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/qos/policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/qos/policies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/qos/policies API
     * @param {string} [description] description query parameter for /v2.0/qos/policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesGet(id?: string, name?: string, shared?: string | boolean, tenantId?: string, isDefault?: string | boolean, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: QosPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosPoliciesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdGet(id: string, options?: any): AxiosPromise<QosPolicyShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {QosPolicyUpdateRequest} [qosPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesIdPut(id: string, qosPolicyUpdateRequest?: QosPolicyUpdateRequest, options?: any): AxiosPromise<QosPolicyUpdateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesGet(id?: string, maxKbps?: string | number, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosPoliciesBandwidthLimitRulesIndexResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdDelete(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdGet(policyId: string, id: string, options?: any): AxiosPromise<QosPoliciesBandwidthLimitRuleShowResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRuleUpdateRequest} [qosPoliciesBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdPut(policyId: string, id: string, qosPoliciesBandwidthLimitRuleUpdateRequest?: QosPoliciesBandwidthLimitRuleUpdateRequest, options?: any): AxiosPromise<QosPoliciesBandwidthLimitRuleUpdateResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRulesCreateRequest} [qosPoliciesBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdBandwidthLimitRulesPost(policyId: string, qosPoliciesBandwidthLimitRulesCreateRequest?: QosPoliciesBandwidthLimitRulesCreateRequest, options?: any): AxiosPromise<QosPoliciesBandwidthLimitRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesGet(id?: string, dscpMark?: QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosPoliciesDscpMarkingRulesIndexResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdDelete(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdGet(policyId: string, id: string, options?: any): AxiosPromise<QosPoliciesDscpMarkingRuleShowResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRuleUpdateRequest} [qosPoliciesDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdPut(policyId: string, id: string, qosPoliciesDscpMarkingRuleUpdateRequest?: QosPoliciesDscpMarkingRuleUpdateRequest, options?: any): AxiosPromise<QosPoliciesDscpMarkingRuleUpdateResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRulesCreateRequest} [qosPoliciesDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdDscpMarkingRulesPost(policyId: string, qosPoliciesDscpMarkingRulesCreateRequest?: QosPoliciesDscpMarkingRulesCreateRequest, options?: any): AxiosPromise<QosPoliciesDscpMarkingRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesGet(id?: string, minKbps?: string | number, direction?: QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosPoliciesMinimumBandwidthRulesIndexResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdDelete(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdGet(policyId: string, id: string, options?: any): AxiosPromise<QosPoliciesMinimumBandwidthRuleShowResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRuleUpdateRequest} [qosPoliciesMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdPut(policyId: string, id: string, qosPoliciesMinimumBandwidthRuleUpdateRequest?: QosPoliciesMinimumBandwidthRuleUpdateRequest, options?: any): AxiosPromise<QosPoliciesMinimumBandwidthRuleUpdateResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRulesCreateRequest} [qosPoliciesMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesPost(policyId: string, qosPoliciesMinimumBandwidthRulesCreateRequest?: QosPoliciesMinimumBandwidthRulesCreateRequest, options?: any): AxiosPromise<QosPoliciesMinimumBandwidthRulesCreateResponse>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesGet(id?: string, minKpps?: string | number, direction?: QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosPoliciesMinimumPacketRateRulesIndexResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdDelete(policyId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdGet(policyId: string, id: string, options?: any): AxiosPromise<QosPoliciesMinimumPacketRateRuleShowResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRuleUpdateRequest} [qosPoliciesMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdPut(policyId: string, id: string, qosPoliciesMinimumPacketRateRuleUpdateRequest?: QosPoliciesMinimumPacketRateRuleUpdateRequest, options?: any): AxiosPromise<QosPoliciesMinimumPacketRateRuleUpdateResponse>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRulesCreateRequest} [qosPoliciesMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesPost(policyId: string, qosPoliciesMinimumPacketRateRulesCreateRequest?: QosPoliciesMinimumPacketRateRulesCreateRequest, options?: any): AxiosPromise<QosPoliciesMinimumPacketRateRulesCreateResponse>;
    /**
     *
     * @param {QosPoliciesCreateRequest} [qosPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosPoliciesPost(qosPoliciesCreateRequest?: QosPoliciesCreateRequest, options?: any): AxiosPromise<QosPoliciesCreateResponse>;
    /**
     *
     * @param {string | boolean | null} [allRules] all_rules query parameter for /v2.0/qos/rule-types API
     * @param {string | boolean | null} [allSupported] all_supported query parameter for /v2.0/qos/rule-types API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosRuleTypesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesGet(allRules?: string | boolean | null, allSupported?: string | boolean | null, sortKey?: string, sortDir?: QosRuleTypesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QosRuleTypesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdGet(id: string, options?: any): AxiosPromise<QosRuleTypeShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {QosRuleTypeUpdateRequest} [qosRuleTypeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesIdPut(id: string, qosRuleTypeUpdateRequest?: QosRuleTypeUpdateRequest, options?: any): AxiosPromise<QosRuleTypeUpdateResponse>;
    /**
     *
     * @param {QosRuleTypesCreateRequest} [qosRuleTypesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    qosRuleTypesPost(qosRuleTypesCreateRequest?: QosRuleTypesCreateRequest, options?: any): AxiosPromise<QosRuleTypesCreateResponse>;
};
/**
 * QosApi - object-oriented interface
 * @export
 * @class QosApi
 * @extends {BaseAPI}
 */
export declare class QosApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {QosAliasBandwidthLimitRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasBandwidthLimitRulesGet(id?: string, maxKbps?: string | number, direction?: QosAliasBandwidthLimitRulesGetDirectionEnum, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosAliasBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasBandwidthLimitRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasBandwidthLimitRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasBandwidthLimitRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasBandwidthLimitRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
     * @param {QosAliasBandwidthLimitRuleUpdateRequest} [qosAliasBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasBandwidthLimitRulesIdPut(id: string, qosAliasBandwidthLimitRuleUpdateRequest?: QosAliasBandwidthLimitRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasBandwidthLimitRuleUpdateResponse, any>>;
    /**
     *
     * @param {QosAliasBandwidthLimitRulesCreateRequest} [qosAliasBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasBandwidthLimitRulesPost(qosAliasBandwidthLimitRulesCreateRequest?: QosAliasBandwidthLimitRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasBandwidthLimitRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {QosAliasDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/alias-dscp-marking-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasDscpMarkingRulesGet(id?: string, dscpMark?: QosAliasDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosAliasDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasDscpMarkingRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasDscpMarkingRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasDscpMarkingRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasDscpMarkingRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
     * @param {QosAliasDscpMarkingRuleUpdateRequest} [qosAliasDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasDscpMarkingRulesIdPut(id: string, qosAliasDscpMarkingRuleUpdateRequest?: QosAliasDscpMarkingRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasDscpMarkingRuleUpdateResponse, any>>;
    /**
     *
     * @param {QosAliasDscpMarkingRulesCreateRequest} [qosAliasDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasDscpMarkingRulesPost(qosAliasDscpMarkingRulesCreateRequest?: QosAliasDscpMarkingRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasDscpMarkingRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {QosAliasMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-bandwidth-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumBandwidthRulesGet(id?: string, minKbps?: string | number, direction?: QosAliasMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumBandwidthRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumBandwidthRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumBandwidthRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumBandwidthRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
     * @param {QosAliasMinimumBandwidthRuleUpdateRequest} [qosAliasMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumBandwidthRulesIdPut(id: string, qosAliasMinimumBandwidthRuleUpdateRequest?: QosAliasMinimumBandwidthRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumBandwidthRuleUpdateResponse, any>>;
    /**
     *
     * @param {QosAliasMinimumBandwidthRulesCreateRequest} [qosAliasMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumBandwidthRulesPost(qosAliasMinimumBandwidthRulesCreateRequest?: QosAliasMinimumBandwidthRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumBandwidthRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {QosAliasMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/alias-minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosAliasMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumPacketRateRulesGet(id?: string, minKpps?: string | number, direction?: QosAliasMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosAliasMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumPacketRateRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumPacketRateRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumPacketRateRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumPacketRateRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
     * @param {QosAliasMinimumPacketRateRuleUpdateRequest} [qosAliasMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumPacketRateRulesIdPut(id: string, qosAliasMinimumPacketRateRuleUpdateRequest?: QosAliasMinimumPacketRateRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumPacketRateRuleUpdateResponse, any>>;
    /**
     *
     * @param {QosAliasMinimumPacketRateRulesCreateRequest} [qosAliasMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosAliasMinimumPacketRateRulesPost(qosAliasMinimumPacketRateRulesCreateRequest?: QosAliasMinimumPacketRateRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosAliasMinimumPacketRateRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies API
     * @param {string} [name] name query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/qos/policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/qos/policies API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/qos/policies API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/qos/policies API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/qos/policies API
     * @param {string} [description] description query parameter for /v2.0/qos/policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesGet(id?: string, name?: string, shared?: string | boolean, tenantId?: string, isDefault?: string | boolean, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: QosPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPolicyShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/policies/{id} API
     * @param {QosPolicyUpdateRequest} [qosPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesIdPut(id: string, qosPolicyUpdateRequest?: QosPolicyUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPolicyUpdateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxKbps] max_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string | number} [maxBurstKbps] max_burst_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdBandwidthLimitRulesGet(id?: string, maxKbps?: string | number, maxBurstKbps?: string | number, sortKey?: string, sortDir?: QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesBandwidthLimitRulesIndexResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesBandwidthLimitRuleShowResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRuleUpdateRequest} [qosPoliciesBandwidthLimitRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdBandwidthLimitRulesIdPut(policyId: string, id: string, qosPoliciesBandwidthLimitRuleUpdateRequest?: QosPoliciesBandwidthLimitRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesBandwidthLimitRuleUpdateResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
     * @param {QosPoliciesBandwidthLimitRulesCreateRequest} [qosPoliciesBandwidthLimitRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdBandwidthLimitRulesPost(policyId: string, qosPoliciesBandwidthLimitRulesCreateRequest?: QosPoliciesBandwidthLimitRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesBandwidthLimitRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum} [dscpMark] dscp_mark query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdDscpMarkingRulesGet(id?: string, dscpMark?: QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesDscpMarkingRulesIndexResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesDscpMarkingRuleShowResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRuleUpdateRequest} [qosPoliciesDscpMarkingRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdDscpMarkingRulesIdPut(policyId: string, id: string, qosPoliciesDscpMarkingRuleUpdateRequest?: QosPoliciesDscpMarkingRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesDscpMarkingRuleUpdateResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
     * @param {QosPoliciesDscpMarkingRulesCreateRequest} [qosPoliciesDscpMarkingRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdDscpMarkingRulesPost(policyId: string, qosPoliciesDscpMarkingRulesCreateRequest?: QosPoliciesDscpMarkingRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesDscpMarkingRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string | number} [minKbps] min_kbps query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesGet(id?: string, minKbps?: string | number, direction?: QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumBandwidthRulesIndexResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumBandwidthRuleShowResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRuleUpdateRequest} [qosPoliciesMinimumBandwidthRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesIdPut(policyId: string, id: string, qosPoliciesMinimumBandwidthRuleUpdateRequest?: QosPoliciesMinimumBandwidthRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumBandwidthRuleUpdateResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
     * @param {QosPoliciesMinimumBandwidthRulesCreateRequest} [qosPoliciesMinimumBandwidthRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumBandwidthRulesPost(policyId: string, qosPoliciesMinimumBandwidthRulesCreateRequest?: QosPoliciesMinimumBandwidthRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumBandwidthRulesCreateResponse, any>>;
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string | number} [minKpps] min_kpps query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesGet(id?: string, minKpps?: string | number, direction?: QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum, sortKey?: string, sortDir?: QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumPacketRateRulesIndexResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdDelete(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdGet(policyId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumPacketRateRuleShowResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {string} id id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRuleUpdateRequest} [qosPoliciesMinimumPacketRateRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesIdPut(policyId: string, id: string, qosPoliciesMinimumPacketRateRuleUpdateRequest?: QosPoliciesMinimumPacketRateRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumPacketRateRuleUpdateResponse, any>>;
    /**
     *
     * @param {string} policyId policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
     * @param {QosPoliciesMinimumPacketRateRulesCreateRequest} [qosPoliciesMinimumPacketRateRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPolicyIdMinimumPacketRateRulesPost(policyId: string, qosPoliciesMinimumPacketRateRulesCreateRequest?: QosPoliciesMinimumPacketRateRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesMinimumPacketRateRulesCreateResponse, any>>;
    /**
     *
     * @param {QosPoliciesCreateRequest} [qosPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosPoliciesPost(qosPoliciesCreateRequest?: QosPoliciesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosPoliciesCreateResponse, any>>;
    /**
     *
     * @param {string | boolean | null} [allRules] all_rules query parameter for /v2.0/qos/rule-types API
     * @param {string | boolean | null} [allSupported] all_supported query parameter for /v2.0/qos/rule-types API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QosRuleTypesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosRuleTypesGet(allRules?: string | boolean | null, allSupported?: string | boolean | null, sortKey?: string, sortDir?: QosRuleTypesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosRuleTypesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosRuleTypesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosRuleTypesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosRuleTypeShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/qos/rule-types/{id} API
     * @param {QosRuleTypeUpdateRequest} [qosRuleTypeUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosRuleTypesIdPut(id: string, qosRuleTypeUpdateRequest?: QosRuleTypeUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosRuleTypeUpdateResponse, any>>;
    /**
     *
     * @param {QosRuleTypesCreateRequest} [qosRuleTypesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QosApi
     */
    qosRuleTypesPost(qosRuleTypesCreateRequest?: QosRuleTypesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QosRuleTypesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const QosAliasBandwidthLimitRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosAliasBandwidthLimitRulesGetDirectionEnum = typeof QosAliasBandwidthLimitRulesGetDirectionEnum[keyof typeof QosAliasBandwidthLimitRulesGetDirectionEnum];
/**
 * @export
 */
export declare const QosAliasBandwidthLimitRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosAliasBandwidthLimitRulesGetSortDirEnum = typeof QosAliasBandwidthLimitRulesGetSortDirEnum[keyof typeof QosAliasBandwidthLimitRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosAliasDscpMarkingRulesGetDscpMarkEnum: {
    readonly _0: "0";
    readonly _8: "8";
    readonly _10: "10";
    readonly _12: "12";
    readonly _14: "14";
    readonly _16: "16";
    readonly _18: "18";
    readonly _20: "20";
    readonly _22: "22";
    readonly _24: "24";
    readonly _26: "26";
    readonly _28: "28";
    readonly _30: "30";
    readonly _32: "32";
    readonly _34: "34";
    readonly _36: "36";
    readonly _38: "38";
    readonly _40: "40";
    readonly _44: "44";
    readonly _46: "46";
    readonly _48: "48";
    readonly _56: "56";
};
export type QosAliasDscpMarkingRulesGetDscpMarkEnum = typeof QosAliasDscpMarkingRulesGetDscpMarkEnum[keyof typeof QosAliasDscpMarkingRulesGetDscpMarkEnum];
/**
 * @export
 */
export declare const QosAliasDscpMarkingRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosAliasDscpMarkingRulesGetSortDirEnum = typeof QosAliasDscpMarkingRulesGetSortDirEnum[keyof typeof QosAliasDscpMarkingRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosAliasMinimumBandwidthRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosAliasMinimumBandwidthRulesGetDirectionEnum = typeof QosAliasMinimumBandwidthRulesGetDirectionEnum[keyof typeof QosAliasMinimumBandwidthRulesGetDirectionEnum];
/**
 * @export
 */
export declare const QosAliasMinimumBandwidthRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosAliasMinimumBandwidthRulesGetSortDirEnum = typeof QosAliasMinimumBandwidthRulesGetSortDirEnum[keyof typeof QosAliasMinimumBandwidthRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosAliasMinimumPacketRateRulesGetDirectionEnum: {
    readonly Any: "any";
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosAliasMinimumPacketRateRulesGetDirectionEnum = typeof QosAliasMinimumPacketRateRulesGetDirectionEnum[keyof typeof QosAliasMinimumPacketRateRulesGetDirectionEnum];
/**
 * @export
 */
export declare const QosAliasMinimumPacketRateRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosAliasMinimumPacketRateRulesGetSortDirEnum = typeof QosAliasMinimumPacketRateRulesGetSortDirEnum[keyof typeof QosAliasMinimumPacketRateRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosPoliciesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosPoliciesGetSortDirEnum = typeof QosPoliciesGetSortDirEnum[keyof typeof QosPoliciesGetSortDirEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum = typeof QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum[keyof typeof QosPoliciesPolicyIdBandwidthLimitRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum: {
    readonly _0: "0";
    readonly _8: "8";
    readonly _10: "10";
    readonly _12: "12";
    readonly _14: "14";
    readonly _16: "16";
    readonly _18: "18";
    readonly _20: "20";
    readonly _22: "22";
    readonly _24: "24";
    readonly _26: "26";
    readonly _28: "28";
    readonly _30: "30";
    readonly _32: "32";
    readonly _34: "34";
    readonly _36: "36";
    readonly _38: "38";
    readonly _40: "40";
    readonly _44: "44";
    readonly _46: "46";
    readonly _48: "48";
    readonly _56: "56";
};
export type QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum = typeof QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum[keyof typeof QosPoliciesPolicyIdDscpMarkingRulesGetDscpMarkEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum = typeof QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum[keyof typeof QosPoliciesPolicyIdDscpMarkingRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum = typeof QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum[keyof typeof QosPoliciesPolicyIdMinimumBandwidthRulesGetDirectionEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum = typeof QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum[keyof typeof QosPoliciesPolicyIdMinimumBandwidthRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum: {
    readonly Any: "any";
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum = typeof QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum[keyof typeof QosPoliciesPolicyIdMinimumPacketRateRulesGetDirectionEnum];
/**
 * @export
 */
export declare const QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum = typeof QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum[keyof typeof QosPoliciesPolicyIdMinimumPacketRateRulesGetSortDirEnum];
/**
 * @export
 */
export declare const QosRuleTypesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QosRuleTypesGetSortDirEnum = typeof QosRuleTypesGetSortDirEnum[keyof typeof QosRuleTypesGetSortDirEnum];
/**
 * QuotasApi - axios parameter creator
 * @export
 */
export declare const QuotasApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QuotasGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasGet: (sortKey?: string, sortDir?: QuotasGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/default API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDefaultGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/details API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDetailsGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {QuotaUpdateRequest} [quotaUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdPut: (id: string, quotaUpdateRequest?: QuotaUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * QuotasApi - functional programming interface
 * @export
 */
export declare const QuotasApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QuotasGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasGet(sortKey?: string, sortDir?: QuotasGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuotasIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/default API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDefaultGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuotasDefaultDefaultResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/details API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDetailsGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuotasDetailsDetailsResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuotaShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {QuotaUpdateRequest} [quotaUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdPut(id: string, quotaUpdateRequest?: QuotaUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuotaUpdateResponse>>;
};
/**
 * QuotasApi - factory interface
 * @export
 */
export declare const QuotasApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QuotasGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasGet(sortKey?: string, sortDir?: QuotasGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<QuotasIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/default API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDefaultGet(id: string, options?: any): AxiosPromise<QuotasDefaultDefaultResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/details API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdDetailsGet(id: string, options?: any): AxiosPromise<QuotasDetailsDetailsResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdGet(id: string, options?: any): AxiosPromise<QuotaShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {QuotaUpdateRequest} [quotaUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    quotasIdPut(id: string, quotaUpdateRequest?: QuotaUpdateRequest, options?: any): AxiosPromise<QuotaUpdateResponse>;
};
/**
 * QuotasApi - object-oriented interface
 * @export
 * @class QuotasApi
 * @extends {BaseAPI}
 */
export declare class QuotasApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {QuotasGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotasApi
     */
    quotasGet(sortKey?: string, sortDir?: QuotasGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QuotasIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/default API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotasApi
     */
    quotasIdDefaultGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QuotasDefaultDefaultResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotasApi
     */
    quotasIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id}/details API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotasApi
     */
    quotasIdDetailsGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QuotasDetailsDetailsResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotasApi
     */
    quotasIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QuotaShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/quotas/{id} API
     * @param {QuotaUpdateRequest} [quotaUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuotasApi
     */
    quotasIdPut(id: string, quotaUpdateRequest?: QuotaUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QuotaUpdateResponse, any>>;
}
/**
 * @export
 */
export declare const QuotasGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type QuotasGetSortDirEnum = typeof QuotasGetSortDirEnum[keyof typeof QuotasGetSortDirEnum];
/**
 * RbacPoliciesApi - axios parameter creator
 * @export
 */
export declare const RbacPoliciesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/rbac-policies API
     * @param {string} [objectType] object_type query parameter for /v2.0/rbac-policies API
     * @param {string} [objectId] object_id query parameter for /v2.0/rbac-policies API
     * @param {string} [targetTenant] target_tenant query parameter for /v2.0/rbac-policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/rbac-policies API
     * @param {string} [action] action query parameter for /v2.0/rbac-policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RbacPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesGet: (id?: string, objectType?: string, objectId?: string, targetTenant?: string, tenantId?: string, action?: string, sortKey?: string, sortDir?: RbacPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {RbacPolicyUpdateRequest} [rbacPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdPut: (id: string, rbacPolicyUpdateRequest?: RbacPolicyUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {RbacPoliciesCreateRequest} [rbacPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesPost: (rbacPoliciesCreateRequest?: RbacPoliciesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RbacPoliciesApi - functional programming interface
 * @export
 */
export declare const RbacPoliciesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/rbac-policies API
     * @param {string} [objectType] object_type query parameter for /v2.0/rbac-policies API
     * @param {string} [objectId] object_id query parameter for /v2.0/rbac-policies API
     * @param {string} [targetTenant] target_tenant query parameter for /v2.0/rbac-policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/rbac-policies API
     * @param {string} [action] action query parameter for /v2.0/rbac-policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RbacPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesGet(id?: string, objectType?: string, objectId?: string, targetTenant?: string, tenantId?: string, action?: string, sortKey?: string, sortDir?: RbacPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RbacPoliciesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RbacPolicyShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {RbacPolicyUpdateRequest} [rbacPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdPut(id: string, rbacPolicyUpdateRequest?: RbacPolicyUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RbacPolicyUpdateResponse>>;
    /**
     *
     * @param {RbacPoliciesCreateRequest} [rbacPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesPost(rbacPoliciesCreateRequest?: RbacPoliciesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RbacPoliciesCreateResponse>>;
};
/**
 * RbacPoliciesApi - factory interface
 * @export
 */
export declare const RbacPoliciesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/rbac-policies API
     * @param {string} [objectType] object_type query parameter for /v2.0/rbac-policies API
     * @param {string} [objectId] object_id query parameter for /v2.0/rbac-policies API
     * @param {string} [targetTenant] target_tenant query parameter for /v2.0/rbac-policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/rbac-policies API
     * @param {string} [action] action query parameter for /v2.0/rbac-policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RbacPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesGet(id?: string, objectType?: string, objectId?: string, targetTenant?: string, tenantId?: string, action?: string, sortKey?: string, sortDir?: RbacPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<RbacPoliciesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdGet(id: string, options?: any): AxiosPromise<RbacPolicyShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {RbacPolicyUpdateRequest} [rbacPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesIdPut(id: string, rbacPolicyUpdateRequest?: RbacPolicyUpdateRequest, options?: any): AxiosPromise<RbacPolicyUpdateResponse>;
    /**
     *
     * @param {RbacPoliciesCreateRequest} [rbacPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    rbacPoliciesPost(rbacPoliciesCreateRequest?: RbacPoliciesCreateRequest, options?: any): AxiosPromise<RbacPoliciesCreateResponse>;
};
/**
 * RbacPoliciesApi - object-oriented interface
 * @export
 * @class RbacPoliciesApi
 * @extends {BaseAPI}
 */
export declare class RbacPoliciesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/rbac-policies API
     * @param {string} [objectType] object_type query parameter for /v2.0/rbac-policies API
     * @param {string} [objectId] object_id query parameter for /v2.0/rbac-policies API
     * @param {string} [targetTenant] target_tenant query parameter for /v2.0/rbac-policies API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/rbac-policies API
     * @param {string} [action] action query parameter for /v2.0/rbac-policies API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RbacPoliciesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RbacPoliciesApi
     */
    rbacPoliciesGet(id?: string, objectType?: string, objectId?: string, targetTenant?: string, tenantId?: string, action?: string, sortKey?: string, sortDir?: RbacPoliciesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RbacPoliciesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RbacPoliciesApi
     */
    rbacPoliciesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RbacPoliciesApi
     */
    rbacPoliciesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RbacPolicyShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/rbac-policies/{id} API
     * @param {RbacPolicyUpdateRequest} [rbacPolicyUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RbacPoliciesApi
     */
    rbacPoliciesIdPut(id: string, rbacPolicyUpdateRequest?: RbacPolicyUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RbacPolicyUpdateResponse, any>>;
    /**
     *
     * @param {RbacPoliciesCreateRequest} [rbacPoliciesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RbacPoliciesApi
     */
    rbacPoliciesPost(rbacPoliciesCreateRequest?: RbacPoliciesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RbacPoliciesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const RbacPoliciesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type RbacPoliciesGetSortDirEnum = typeof RbacPoliciesGetSortDirEnum[keyof typeof RbacPoliciesGetSortDirEnum];
/**
 * RoutersApi - axios parameter creator
 * @export
 */
export declare const RoutersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers API
     * @param {string} [name] name query parameter for /v2.0/routers API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/routers API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/routers API
     * @param {string | boolean | null} [enableNdpProxy] enable_ndp_proxy query parameter for /v2.0/routers API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/routers API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/routers API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/routers API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/routers API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/routers API
     * @param {string} [description] description query parameter for /v2.0/routers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersGet: (id?: string, name?: string, adminStateUp?: string | boolean, tenantId?: string, enableNdpProxy?: string | boolean | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExternalGatewaysAddExternalGatewaysRequest} [routersAddExternalGatewaysAddExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddExternalGatewaysPut: (id: string, routersAddExternalGatewaysAddExternalGatewaysRequest?: RoutersAddExternalGatewaysAddExternalGatewaysRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExtraroutesAddExtraroutesRequest} [routersAddExtraroutesAddExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddExtraroutesPut: (id: string, routersAddExtraroutesAddExtraroutesRequest?: RoutersAddExtraroutesAddExtraroutesRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddRouterInterfaceAddRouterInterfaceRequest} [routersAddRouterInterfaceAddRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddRouterInterfacePut: (id: string, routersAddRouterInterfaceAddRouterInterfaceRequest?: RoutersAddRouterInterfaceAddRouterInterfaceRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RouterUpdateRequest} [routerUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdPut: (id: string, routerUpdateRequest?: RouterUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest} [routersRemoveExternalGatewaysRemoveExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveExternalGatewaysPut: (id: string, routersRemoveExternalGatewaysRemoveExternalGatewaysRequest?: RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExtraroutesRemoveExtraroutesRequest} [routersRemoveExtraroutesRemoveExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveExtraroutesPut: (id: string, routersRemoveExtraroutesRemoveExtraroutesRequest?: RoutersRemoveExtraroutesRemoveExtraroutesRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest} [routersRemoveRouterInterfaceRemoveRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveRouterInterfacePut: (id: string, routersRemoveRouterInterfaceRemoveRouterInterfaceRequest?: RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest} [routersUpdateExternalGatewaysUpdateExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdUpdateExternalGatewaysPut: (id: string, routersUpdateExternalGatewaysUpdateExternalGatewaysRequest?: RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {RoutersCreateRequest} [routersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersPost: (routersCreateRequest?: RoutersCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdL3AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsGet: (sortKey?: string, sortDir?: RoutersRouterIdL3AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdDelete: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdGet: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdPut: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsPost: (routerId: string, body?: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsDelete: (routerId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsGet: (sortKey?: string, sortDir?: RoutersRouterIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdDelete: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdGet: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdPut: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {RoutersTagsUpdateAllRequest} [routersTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsPut: (routerId: string, routersTagsUpdateAllRequest?: RoutersTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RoutersApi - functional programming interface
 * @export
 */
export declare const RoutersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers API
     * @param {string} [name] name query parameter for /v2.0/routers API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/routers API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/routers API
     * @param {string | boolean | null} [enableNdpProxy] enable_ndp_proxy query parameter for /v2.0/routers API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/routers API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/routers API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/routers API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/routers API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/routers API
     * @param {string} [description] description query parameter for /v2.0/routers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersGet(id?: string, name?: string, adminStateUp?: string | boolean, tenantId?: string, enableNdpProxy?: string | boolean | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExternalGatewaysAddExternalGatewaysRequest} [routersAddExternalGatewaysAddExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddExternalGatewaysPut(id: string, routersAddExternalGatewaysAddExternalGatewaysRequest?: RoutersAddExternalGatewaysAddExternalGatewaysRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouterShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExtraroutesAddExtraroutesRequest} [routersAddExtraroutesAddExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddExtraroutesPut(id: string, routersAddExtraroutesAddExtraroutesRequest?: RoutersAddExtraroutesAddExtraroutesRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersAddExtraroutesAddExtraroutesResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddRouterInterfaceAddRouterInterfaceRequest} [routersAddRouterInterfaceAddRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddRouterInterfacePut(id: string, routersAddRouterInterfaceAddRouterInterfaceRequest?: RoutersAddRouterInterfaceAddRouterInterfaceRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersAddRouterInterfaceAddRouterInterfaceResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouterShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RouterUpdateRequest} [routerUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdPut(id: string, routerUpdateRequest?: RouterUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouterUpdateResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest} [routersRemoveExternalGatewaysRemoveExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveExternalGatewaysPut(id: string, routersRemoveExternalGatewaysRemoveExternalGatewaysRequest?: RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouterShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExtraroutesRemoveExtraroutesRequest} [routersRemoveExtraroutesRemoveExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveExtraroutesPut(id: string, routersRemoveExtraroutesRemoveExtraroutesRequest?: RoutersRemoveExtraroutesRemoveExtraroutesRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersRemoveExtraroutesRemoveExtraroutesResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest} [routersRemoveRouterInterfaceRemoveRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveRouterInterfacePut(id: string, routersRemoveRouterInterfaceRemoveRouterInterfaceRequest?: RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest} [routersUpdateExternalGatewaysUpdateExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdUpdateExternalGatewaysPut(id: string, routersUpdateExternalGatewaysUpdateExternalGatewaysRequest?: RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouterShowResponse>>;
    /**
     *
     * @param {RoutersCreateRequest} [routersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersPost(routersCreateRequest?: RoutersCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersCreateResponse>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdL3AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsGet(sortKey?: string, sortDir?: RoutersRouterIdL3AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdDelete(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdGet(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdPut(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsPost(routerId: string, body?: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsDelete(routerId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsGet(sortKey?: string, sortDir?: RoutersRouterIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersTagsIndexResponse>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdDelete(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdGet(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdPut(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {RoutersTagsUpdateAllRequest} [routersTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsPut(routerId: string, routersTagsUpdateAllRequest?: RoutersTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersTagsUpdateAllResponse>>;
};
/**
 * RoutersApi - factory interface
 * @export
 */
export declare const RoutersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers API
     * @param {string} [name] name query parameter for /v2.0/routers API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/routers API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/routers API
     * @param {string | boolean | null} [enableNdpProxy] enable_ndp_proxy query parameter for /v2.0/routers API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/routers API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/routers API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/routers API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/routers API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/routers API
     * @param {string} [description] description query parameter for /v2.0/routers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersGet(id?: string, name?: string, adminStateUp?: string | boolean, tenantId?: string, enableNdpProxy?: string | boolean | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<RoutersIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExternalGatewaysAddExternalGatewaysRequest} [routersAddExternalGatewaysAddExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddExternalGatewaysPut(id: string, routersAddExternalGatewaysAddExternalGatewaysRequest?: RoutersAddExternalGatewaysAddExternalGatewaysRequest, options?: any): AxiosPromise<RouterShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExtraroutesAddExtraroutesRequest} [routersAddExtraroutesAddExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddExtraroutesPut(id: string, routersAddExtraroutesAddExtraroutesRequest?: RoutersAddExtraroutesAddExtraroutesRequest, options?: any): AxiosPromise<RoutersAddExtraroutesAddExtraroutesResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddRouterInterfaceAddRouterInterfaceRequest} [routersAddRouterInterfaceAddRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdAddRouterInterfacePut(id: string, routersAddRouterInterfaceAddRouterInterfaceRequest?: RoutersAddRouterInterfaceAddRouterInterfaceRequest, options?: any): AxiosPromise<RoutersAddRouterInterfaceAddRouterInterfaceResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdGet(id: string, options?: any): AxiosPromise<RouterShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RouterUpdateRequest} [routerUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdPut(id: string, routerUpdateRequest?: RouterUpdateRequest, options?: any): AxiosPromise<RouterUpdateResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest} [routersRemoveExternalGatewaysRemoveExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveExternalGatewaysPut(id: string, routersRemoveExternalGatewaysRemoveExternalGatewaysRequest?: RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest, options?: any): AxiosPromise<RouterShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExtraroutesRemoveExtraroutesRequest} [routersRemoveExtraroutesRemoveExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveExtraroutesPut(id: string, routersRemoveExtraroutesRemoveExtraroutesRequest?: RoutersRemoveExtraroutesRemoveExtraroutesRequest, options?: any): AxiosPromise<RoutersRemoveExtraroutesRemoveExtraroutesResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest} [routersRemoveRouterInterfaceRemoveRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdRemoveRouterInterfacePut(id: string, routersRemoveRouterInterfaceRemoveRouterInterfaceRequest?: RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest, options?: any): AxiosPromise<RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest} [routersUpdateExternalGatewaysUpdateExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersIdUpdateExternalGatewaysPut(id: string, routersUpdateExternalGatewaysUpdateExternalGatewaysRequest?: RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest, options?: any): AxiosPromise<RouterShowResponse>;
    /**
     *
     * @param {RoutersCreateRequest} [routersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersPost(routersCreateRequest?: RoutersCreateRequest, options?: any): AxiosPromise<RoutersCreateResponse>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdL3AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsGet(sortKey?: string, sortDir?: RoutersRouterIdL3AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<any>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdDelete(routerId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdGet(routerId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsIdPut(routerId: string, id: string, options?: any): AxiosPromise<any>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdL3AgentsPost(routerId: string, body?: any, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsDelete(routerId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsGet(sortKey?: string, sortDir?: RoutersRouterIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<RoutersTagsIndexResponse>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdDelete(routerId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdGet(routerId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsIdPut(routerId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {RoutersTagsUpdateAllRequest} [routersTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdTagsPut(routerId: string, routersTagsUpdateAllRequest?: RoutersTagsUpdateAllRequest, options?: any): AxiosPromise<RoutersTagsUpdateAllResponse>;
};
/**
 * RoutersApi - object-oriented interface
 * @export
 * @class RoutersApi
 * @extends {BaseAPI}
 */
export declare class RoutersApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers API
     * @param {string} [name] name query parameter for /v2.0/routers API
     * @param {string | boolean} [adminStateUp] admin_state_up query parameter for /v2.0/routers API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/routers API
     * @param {string | boolean | null} [enableNdpProxy] enable_ndp_proxy query parameter for /v2.0/routers API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/routers API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/routers API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/routers API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/routers API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/routers API
     * @param {string} [description] description query parameter for /v2.0/routers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersGet(id?: string, name?: string, adminStateUp?: string | boolean, tenantId?: string, enableNdpProxy?: string | boolean | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: RoutersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExternalGatewaysAddExternalGatewaysRequest} [routersAddExternalGatewaysAddExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdAddExternalGatewaysPut(id: string, routersAddExternalGatewaysAddExternalGatewaysRequest?: RoutersAddExternalGatewaysAddExternalGatewaysRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RouterShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddExtraroutesAddExtraroutesRequest} [routersAddExtraroutesAddExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdAddExtraroutesPut(id: string, routersAddExtraroutesAddExtraroutesRequest?: RoutersAddExtraroutesAddExtraroutesRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersAddExtraroutesAddExtraroutesResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersAddRouterInterfaceAddRouterInterfaceRequest} [routersAddRouterInterfaceAddRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdAddRouterInterfacePut(id: string, routersAddRouterInterfaceAddRouterInterfaceRequest?: RoutersAddRouterInterfaceAddRouterInterfaceRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersAddRouterInterfaceAddRouterInterfaceResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RouterShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RouterUpdateRequest} [routerUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdPut(id: string, routerUpdateRequest?: RouterUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RouterUpdateResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest} [routersRemoveExternalGatewaysRemoveExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdRemoveExternalGatewaysPut(id: string, routersRemoveExternalGatewaysRemoveExternalGatewaysRequest?: RoutersRemoveExternalGatewaysRemoveExternalGatewaysRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RouterShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveExtraroutesRemoveExtraroutesRequest} [routersRemoveExtraroutesRemoveExtraroutesRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdRemoveExtraroutesPut(id: string, routersRemoveExtraroutesRemoveExtraroutesRequest?: RoutersRemoveExtraroutesRemoveExtraroutesRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersRemoveExtraroutesRemoveExtraroutesResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest} [routersRemoveRouterInterfaceRemoveRouterInterfaceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdRemoveRouterInterfacePut(id: string, routersRemoveRouterInterfaceRemoveRouterInterfaceRequest?: RoutersRemoveRouterInterfaceRemoveRouterInterfaceRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersRemoveRouterInterfaceRemoveRouterInterfaceResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/routers/{id} API
     * @param {RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest} [routersUpdateExternalGatewaysUpdateExternalGatewaysRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersIdUpdateExternalGatewaysPut(id: string, routersUpdateExternalGatewaysUpdateExternalGatewaysRequest?: RoutersUpdateExternalGatewaysUpdateExternalGatewaysRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RouterShowResponse, any>>;
    /**
     *
     * @param {RoutersCreateRequest} [routersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersPost(routersCreateRequest?: RoutersCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersCreateResponse, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdL3AgentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdL3AgentsGet(sortKey?: string, sortDir?: RoutersRouterIdL3AgentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdL3AgentsIdDelete(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdL3AgentsIdGet(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdL3AgentsIdPut(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdL3AgentsPost(routerId: string, body?: any, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdTagsDelete(routerId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdTagsGet(sortKey?: string, sortDir?: RoutersRouterIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersTagsIndexResponse, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdTagsIdDelete(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdTagsIdGet(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdTagsIdPut(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
     * @param {RoutersTagsUpdateAllRequest} [routersTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersApi
     */
    routersRouterIdTagsPut(routerId: string, routersTagsUpdateAllRequest?: RoutersTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersTagsUpdateAllResponse, any>>;
}
/**
 * @export
 */
export declare const RoutersGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type RoutersGetSortDirEnum = typeof RoutersGetSortDirEnum[keyof typeof RoutersGetSortDirEnum];
/**
 * @export
 */
export declare const RoutersRouterIdL3AgentsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type RoutersRouterIdL3AgentsGetSortDirEnum = typeof RoutersRouterIdL3AgentsGetSortDirEnum[keyof typeof RoutersRouterIdL3AgentsGetSortDirEnum];
/**
 * @export
 */
export declare const RoutersRouterIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type RoutersRouterIdTagsGetSortDirEnum = typeof RoutersRouterIdTagsGetSortDirEnum[keyof typeof RoutersRouterIdTagsGetSortDirEnum];
/**
 * RoutersConntrackHelperApi - axios parameter creator
 * @export
 */
export declare const RoutersConntrackHelperApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {RoutersRouterIdConntrackHelpersGetProtocolEnum} [protocol] protocol query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string | number} [port] port query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [helper] helper query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdConntrackHelpersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersGet: (id?: string, protocol?: RoutersRouterIdConntrackHelpersGetProtocolEnum, port?: string | number, helper?: string, sortKey?: string, sortDir?: RoutersRouterIdConntrackHelpersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdDelete: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdGet: (routerId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelperUpdateRequest} [routersConntrackHelperUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdPut: (routerId: string, id: string, routersConntrackHelperUpdateRequest?: RoutersConntrackHelperUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelpersCreateRequest} [routersConntrackHelpersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersPost: (routerId: string, routersConntrackHelpersCreateRequest?: RoutersConntrackHelpersCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RoutersConntrackHelperApi - functional programming interface
 * @export
 */
export declare const RoutersConntrackHelperApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {RoutersRouterIdConntrackHelpersGetProtocolEnum} [protocol] protocol query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string | number} [port] port query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [helper] helper query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdConntrackHelpersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersGet(id?: string, protocol?: RoutersRouterIdConntrackHelpersGetProtocolEnum, port?: string | number, helper?: string, sortKey?: string, sortDir?: RoutersRouterIdConntrackHelpersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersConntrackHelpersIndexResponse>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdDelete(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdGet(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersConntrackHelperShowResponse>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelperUpdateRequest} [routersConntrackHelperUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdPut(routerId: string, id: string, routersConntrackHelperUpdateRequest?: RoutersConntrackHelperUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersConntrackHelperUpdateResponse>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelpersCreateRequest} [routersConntrackHelpersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersPost(routerId: string, routersConntrackHelpersCreateRequest?: RoutersConntrackHelpersCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoutersConntrackHelpersCreateResponse>>;
};
/**
 * RoutersConntrackHelperApi - factory interface
 * @export
 */
export declare const RoutersConntrackHelperApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {RoutersRouterIdConntrackHelpersGetProtocolEnum} [protocol] protocol query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string | number} [port] port query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [helper] helper query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdConntrackHelpersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersGet(id?: string, protocol?: RoutersRouterIdConntrackHelpersGetProtocolEnum, port?: string | number, helper?: string, sortKey?: string, sortDir?: RoutersRouterIdConntrackHelpersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<RoutersConntrackHelpersIndexResponse>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdDelete(routerId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdGet(routerId: string, id: string, options?: any): AxiosPromise<RoutersConntrackHelperShowResponse>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelperUpdateRequest} [routersConntrackHelperUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersIdPut(routerId: string, id: string, routersConntrackHelperUpdateRequest?: RoutersConntrackHelperUpdateRequest, options?: any): AxiosPromise<RoutersConntrackHelperUpdateResponse>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelpersCreateRequest} [routersConntrackHelpersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    routersRouterIdConntrackHelpersPost(routerId: string, routersConntrackHelpersCreateRequest?: RoutersConntrackHelpersCreateRequest, options?: any): AxiosPromise<RoutersConntrackHelpersCreateResponse>;
};
/**
 * RoutersConntrackHelperApi - object-oriented interface
 * @export
 * @class RoutersConntrackHelperApi
 * @extends {BaseAPI}
 */
export declare class RoutersConntrackHelperApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {RoutersRouterIdConntrackHelpersGetProtocolEnum} [protocol] protocol query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string | number} [port] port query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [helper] helper query parameter for /v2.0/routers/{router_id}/conntrack_helpers API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {RoutersRouterIdConntrackHelpersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersConntrackHelperApi
     */
    routersRouterIdConntrackHelpersGet(id?: string, protocol?: RoutersRouterIdConntrackHelpersGetProtocolEnum, port?: string | number, helper?: string, sortKey?: string, sortDir?: RoutersRouterIdConntrackHelpersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersConntrackHelpersIndexResponse, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersConntrackHelperApi
     */
    routersRouterIdConntrackHelpersIdDelete(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersConntrackHelperApi
     */
    routersRouterIdConntrackHelpersIdGet(routerId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersConntrackHelperShowResponse, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {string} id id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelperUpdateRequest} [routersConntrackHelperUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersConntrackHelperApi
     */
    routersRouterIdConntrackHelpersIdPut(routerId: string, id: string, routersConntrackHelperUpdateRequest?: RoutersConntrackHelperUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersConntrackHelperUpdateResponse, any>>;
    /**
     *
     * @param {string} routerId router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id} API
     * @param {RoutersConntrackHelpersCreateRequest} [routersConntrackHelpersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoutersConntrackHelperApi
     */
    routersRouterIdConntrackHelpersPost(routerId: string, routersConntrackHelpersCreateRequest?: RoutersConntrackHelpersCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoutersConntrackHelpersCreateResponse, any>>;
}
/**
 * @export
 */
export declare const RoutersRouterIdConntrackHelpersGetProtocolEnum: {
    readonly Dccp: "dccp";
    readonly Icmp: "icmp";
    readonly Ipv6Icmp: "ipv6-icmp";
    readonly Sctp: "sctp";
    readonly Tcp: "tcp";
    readonly Udp: "udp";
};
export type RoutersRouterIdConntrackHelpersGetProtocolEnum = typeof RoutersRouterIdConntrackHelpersGetProtocolEnum[keyof typeof RoutersRouterIdConntrackHelpersGetProtocolEnum];
/**
 * @export
 */
export declare const RoutersRouterIdConntrackHelpersGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type RoutersRouterIdConntrackHelpersGetSortDirEnum = typeof RoutersRouterIdConntrackHelpersGetSortDirEnum[keyof typeof RoutersRouterIdConntrackHelpersGetSortDirEnum];
/**
 * SecurityGroupRulesApi - axios parameter creator
 * @export
 */
export declare const SecurityGroupRulesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-group-rules API
     * @param {string} [securityGroupId] security_group_id query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/security-group-rules API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-group-rules API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/security-group-rules API
     * @param {string | null} [normalizedCidr] normalized_cidr query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/security-group-rules API
     * @param {string | boolean | null} [belongsToDefaultSg] belongs_to_default_sg query parameter for /v2.0/security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesGet: (id?: string, securityGroupId?: string, remoteGroupId?: string, direction?: SecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: SecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, tenantId?: string, revisionNumber?: string, description?: string, normalizedCidr?: string | null, remoteAddressGroupId?: string, belongsToDefaultSg?: string | boolean | null, sortKey?: string, sortDir?: SecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {SecurityGroupRuleUpdateRequest} [securityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdPut: (id: string, securityGroupRuleUpdateRequest?: SecurityGroupRuleUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SecurityGroupRulesCreateRequest} [securityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesPost: (securityGroupRulesCreateRequest?: SecurityGroupRulesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SecurityGroupRulesApi - functional programming interface
 * @export
 */
export declare const SecurityGroupRulesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-group-rules API
     * @param {string} [securityGroupId] security_group_id query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/security-group-rules API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-group-rules API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/security-group-rules API
     * @param {string | null} [normalizedCidr] normalized_cidr query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/security-group-rules API
     * @param {string | boolean | null} [belongsToDefaultSg] belongs_to_default_sg query parameter for /v2.0/security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesGet(id?: string, securityGroupId?: string, remoteGroupId?: string, direction?: SecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: SecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, tenantId?: string, revisionNumber?: string, description?: string, normalizedCidr?: string | null, remoteAddressGroupId?: string, belongsToDefaultSg?: string | boolean | null, sortKey?: string, sortDir?: SecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupRulesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupRuleShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {SecurityGroupRuleUpdateRequest} [securityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdPut(id: string, securityGroupRuleUpdateRequest?: SecurityGroupRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupRuleUpdateResponse>>;
    /**
     *
     * @param {SecurityGroupRulesCreateRequest} [securityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesPost(securityGroupRulesCreateRequest?: SecurityGroupRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupRulesCreateResponse>>;
};
/**
 * SecurityGroupRulesApi - factory interface
 * @export
 */
export declare const SecurityGroupRulesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-group-rules API
     * @param {string} [securityGroupId] security_group_id query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/security-group-rules API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-group-rules API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/security-group-rules API
     * @param {string | null} [normalizedCidr] normalized_cidr query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/security-group-rules API
     * @param {string | boolean | null} [belongsToDefaultSg] belongs_to_default_sg query parameter for /v2.0/security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesGet(id?: string, securityGroupId?: string, remoteGroupId?: string, direction?: SecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: SecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, tenantId?: string, revisionNumber?: string, description?: string, normalizedCidr?: string | null, remoteAddressGroupId?: string, belongsToDefaultSg?: string | boolean | null, sortKey?: string, sortDir?: SecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SecurityGroupRulesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdGet(id: string, options?: any): AxiosPromise<SecurityGroupRuleShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {SecurityGroupRuleUpdateRequest} [securityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesIdPut(id: string, securityGroupRuleUpdateRequest?: SecurityGroupRuleUpdateRequest, options?: any): AxiosPromise<SecurityGroupRuleUpdateResponse>;
    /**
     *
     * @param {SecurityGroupRulesCreateRequest} [securityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupRulesPost(securityGroupRulesCreateRequest?: SecurityGroupRulesCreateRequest, options?: any): AxiosPromise<SecurityGroupRulesCreateResponse>;
};
/**
 * SecurityGroupRulesApi - object-oriented interface
 * @export
 * @class SecurityGroupRulesApi
 * @extends {BaseAPI}
 */
export declare class SecurityGroupRulesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-group-rules API
     * @param {string} [securityGroupId] security_group_id query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteGroupId] remote_group_id query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetDirectionEnum} [direction] direction query parameter for /v2.0/security-group-rules API
     * @param {string} [protocol] protocol query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMin] port_range_min query parameter for /v2.0/security-group-rules API
     * @param {number | null} [portRangeMax] port_range_max query parameter for /v2.0/security-group-rules API
     * @param {SecurityGroupRulesGetEthertypeEnum} [ethertype] ethertype query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteIpPrefix] remote_ip_prefix query parameter for /v2.0/security-group-rules API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-group-rules API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-group-rules API
     * @param {string} [description] description query parameter for /v2.0/security-group-rules API
     * @param {string | null} [normalizedCidr] normalized_cidr query parameter for /v2.0/security-group-rules API
     * @param {string} [remoteAddressGroupId] remote_address_group_id query parameter for /v2.0/security-group-rules API
     * @param {string | boolean | null} [belongsToDefaultSg] belongs_to_default_sg query parameter for /v2.0/security-group-rules API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupRulesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupRulesApi
     */
    securityGroupRulesGet(id?: string, securityGroupId?: string, remoteGroupId?: string, direction?: SecurityGroupRulesGetDirectionEnum, protocol?: string, portRangeMin?: number | null, portRangeMax?: number | null, ethertype?: SecurityGroupRulesGetEthertypeEnum, remoteIpPrefix?: string, tenantId?: string, revisionNumber?: string, description?: string, normalizedCidr?: string | null, remoteAddressGroupId?: string, belongsToDefaultSg?: string | boolean | null, sortKey?: string, sortDir?: SecurityGroupRulesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupRulesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupRulesApi
     */
    securityGroupRulesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupRulesApi
     */
    securityGroupRulesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupRuleShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-group-rules/{id} API
     * @param {SecurityGroupRuleUpdateRequest} [securityGroupRuleUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupRulesApi
     */
    securityGroupRulesIdPut(id: string, securityGroupRuleUpdateRequest?: SecurityGroupRuleUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupRuleUpdateResponse, any>>;
    /**
     *
     * @param {SecurityGroupRulesCreateRequest} [securityGroupRulesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupRulesApi
     */
    securityGroupRulesPost(securityGroupRulesCreateRequest?: SecurityGroupRulesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupRulesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const SecurityGroupRulesGetDirectionEnum: {
    readonly Ingress: "ingress";
    readonly Egress: "egress";
};
export type SecurityGroupRulesGetDirectionEnum = typeof SecurityGroupRulesGetDirectionEnum[keyof typeof SecurityGroupRulesGetDirectionEnum];
/**
 * @export
 */
export declare const SecurityGroupRulesGetEthertypeEnum: {
    readonly Ipv4: "IPv4";
    readonly Ipv6: "IPv6";
};
export type SecurityGroupRulesGetEthertypeEnum = typeof SecurityGroupRulesGetEthertypeEnum[keyof typeof SecurityGroupRulesGetEthertypeEnum];
/**
 * @export
 */
export declare const SecurityGroupRulesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SecurityGroupRulesGetSortDirEnum = typeof SecurityGroupRulesGetSortDirEnum[keyof typeof SecurityGroupRulesGetSortDirEnum];
/**
 * SecurityGroupsApi - axios parameter creator
 * @export
 */
export declare const SecurityGroupsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-groups API
     * @param {string} [name] name query parameter for /v2.0/security-groups API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-groups API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/security-groups API
     * @param {string} [description] description query parameter for /v2.0/security-groups API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/security-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsGet: (id?: string, name?: string, tenantId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, shared?: string | boolean, sortKey?: string, sortDir?: SecurityGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {SecurityGroupUpdateRequest} [securityGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdPut: (id: string, securityGroupUpdateRequest?: SecurityGroupUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SecurityGroupsCreateRequest} [securityGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsPost: (securityGroupsCreateRequest?: SecurityGroupsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsDelete: (securityGroupId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsSecurityGroupIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsGet: (sortKey?: string, sortDir?: SecurityGroupsSecurityGroupIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdDelete: (securityGroupId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdGet: (securityGroupId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdPut: (securityGroupId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {SecurityGroupsTagsUpdateAllRequest} [securityGroupsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsPut: (securityGroupId: string, securityGroupsTagsUpdateAllRequest?: SecurityGroupsTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SecurityGroupsApi - functional programming interface
 * @export
 */
export declare const SecurityGroupsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-groups API
     * @param {string} [name] name query parameter for /v2.0/security-groups API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-groups API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/security-groups API
     * @param {string} [description] description query parameter for /v2.0/security-groups API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/security-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsGet(id?: string, name?: string, tenantId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, shared?: string | boolean, sortKey?: string, sortDir?: SecurityGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {SecurityGroupUpdateRequest} [securityGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdPut(id: string, securityGroupUpdateRequest?: SecurityGroupUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupUpdateResponse>>;
    /**
     *
     * @param {SecurityGroupsCreateRequest} [securityGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsPost(securityGroupsCreateRequest?: SecurityGroupsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupsCreateResponse>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsDelete(securityGroupId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsSecurityGroupIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsGet(sortKey?: string, sortDir?: SecurityGroupsSecurityGroupIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupsTagsIndexResponse>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdDelete(securityGroupId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdGet(securityGroupId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdPut(securityGroupId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {SecurityGroupsTagsUpdateAllRequest} [securityGroupsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsPut(securityGroupId: string, securityGroupsTagsUpdateAllRequest?: SecurityGroupsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SecurityGroupsTagsUpdateAllResponse>>;
};
/**
 * SecurityGroupsApi - factory interface
 * @export
 */
export declare const SecurityGroupsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-groups API
     * @param {string} [name] name query parameter for /v2.0/security-groups API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-groups API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/security-groups API
     * @param {string} [description] description query parameter for /v2.0/security-groups API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/security-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsGet(id?: string, name?: string, tenantId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, shared?: string | boolean, sortKey?: string, sortDir?: SecurityGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SecurityGroupsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdGet(id: string, options?: any): AxiosPromise<SecurityGroupShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {SecurityGroupUpdateRequest} [securityGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsIdPut(id: string, securityGroupUpdateRequest?: SecurityGroupUpdateRequest, options?: any): AxiosPromise<SecurityGroupUpdateResponse>;
    /**
     *
     * @param {SecurityGroupsCreateRequest} [securityGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsPost(securityGroupsCreateRequest?: SecurityGroupsCreateRequest, options?: any): AxiosPromise<SecurityGroupsCreateResponse>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsDelete(securityGroupId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsSecurityGroupIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsGet(sortKey?: string, sortDir?: SecurityGroupsSecurityGroupIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SecurityGroupsTagsIndexResponse>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdDelete(securityGroupId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdGet(securityGroupId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsIdPut(securityGroupId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {SecurityGroupsTagsUpdateAllRequest} [securityGroupsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    securityGroupsSecurityGroupIdTagsPut(securityGroupId: string, securityGroupsTagsUpdateAllRequest?: SecurityGroupsTagsUpdateAllRequest, options?: any): AxiosPromise<SecurityGroupsTagsUpdateAllResponse>;
};
/**
 * SecurityGroupsApi - object-oriented interface
 * @export
 * @class SecurityGroupsApi
 * @extends {BaseAPI}
 */
export declare class SecurityGroupsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/security-groups API
     * @param {string} [name] name query parameter for /v2.0/security-groups API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/security-groups API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/security-groups API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/security-groups API
     * @param {string} [description] description query parameter for /v2.0/security-groups API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/security-groups API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsGet(id?: string, name?: string, tenantId?: string, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, shared?: string | boolean, sortKey?: string, sortDir?: SecurityGroupsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/security-groups/{id} API
     * @param {SecurityGroupUpdateRequest} [securityGroupUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsIdPut(id: string, securityGroupUpdateRequest?: SecurityGroupUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupUpdateResponse, any>>;
    /**
     *
     * @param {SecurityGroupsCreateRequest} [securityGroupsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsPost(securityGroupsCreateRequest?: SecurityGroupsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupsCreateResponse, any>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsSecurityGroupIdTagsDelete(securityGroupId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SecurityGroupsSecurityGroupIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsSecurityGroupIdTagsGet(sortKey?: string, sortDir?: SecurityGroupsSecurityGroupIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupsTagsIndexResponse, any>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsSecurityGroupIdTagsIdDelete(securityGroupId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsSecurityGroupIdTagsIdGet(securityGroupId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsSecurityGroupIdTagsIdPut(securityGroupId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} securityGroupId security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id} API
     * @param {SecurityGroupsTagsUpdateAllRequest} [securityGroupsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SecurityGroupsApi
     */
    securityGroupsSecurityGroupIdTagsPut(securityGroupId: string, securityGroupsTagsUpdateAllRequest?: SecurityGroupsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SecurityGroupsTagsUpdateAllResponse, any>>;
}
/**
 * @export
 */
export declare const SecurityGroupsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SecurityGroupsGetSortDirEnum = typeof SecurityGroupsGetSortDirEnum[keyof typeof SecurityGroupsGetSortDirEnum];
/**
 * @export
 */
export declare const SecurityGroupsSecurityGroupIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SecurityGroupsSecurityGroupIdTagsGetSortDirEnum = typeof SecurityGroupsSecurityGroupIdTagsGetSortDirEnum[keyof typeof SecurityGroupsSecurityGroupIdTagsGetSortDirEnum];
/**
 * SegmentsApi - axios parameter creator
 * @export
 */
export declare const SegmentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/segments API
     * @param {string} [networkId] network_id query parameter for /v2.0/segments API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/segments API
     * @param {string} [networkType] network_type query parameter for /v2.0/segments API
     * @param {string | null} [name] name query parameter for /v2.0/segments API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/segments API
     * @param {string} [description] description query parameter for /v2.0/segments API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SegmentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsGet: (id?: string, networkId?: string, physicalNetwork?: string, networkType?: string, name?: string | null, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: SegmentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {SegmentUpdateRequest} [segmentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdPut: (id: string, segmentUpdateRequest?: SegmentUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SegmentsCreateRequest} [segmentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsPost: (segmentsCreateRequest?: SegmentsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SegmentsApi - functional programming interface
 * @export
 */
export declare const SegmentsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/segments API
     * @param {string} [networkId] network_id query parameter for /v2.0/segments API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/segments API
     * @param {string} [networkType] network_type query parameter for /v2.0/segments API
     * @param {string | null} [name] name query parameter for /v2.0/segments API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/segments API
     * @param {string} [description] description query parameter for /v2.0/segments API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SegmentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsGet(id?: string, networkId?: string, physicalNetwork?: string, networkType?: string, name?: string | null, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: SegmentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SegmentsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SegmentShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {SegmentUpdateRequest} [segmentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdPut(id: string, segmentUpdateRequest?: SegmentUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SegmentUpdateResponse>>;
    /**
     *
     * @param {SegmentsCreateRequest} [segmentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsPost(segmentsCreateRequest?: SegmentsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SegmentsCreateResponse>>;
};
/**
 * SegmentsApi - factory interface
 * @export
 */
export declare const SegmentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/segments API
     * @param {string} [networkId] network_id query parameter for /v2.0/segments API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/segments API
     * @param {string} [networkType] network_type query parameter for /v2.0/segments API
     * @param {string | null} [name] name query parameter for /v2.0/segments API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/segments API
     * @param {string} [description] description query parameter for /v2.0/segments API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SegmentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsGet(id?: string, networkId?: string, physicalNetwork?: string, networkType?: string, name?: string | null, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: SegmentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SegmentsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdGet(id: string, options?: any): AxiosPromise<SegmentShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {SegmentUpdateRequest} [segmentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsIdPut(id: string, segmentUpdateRequest?: SegmentUpdateRequest, options?: any): AxiosPromise<SegmentUpdateResponse>;
    /**
     *
     * @param {SegmentsCreateRequest} [segmentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    segmentsPost(segmentsCreateRequest?: SegmentsCreateRequest, options?: any): AxiosPromise<SegmentsCreateResponse>;
};
/**
 * SegmentsApi - object-oriented interface
 * @export
 * @class SegmentsApi
 * @extends {BaseAPI}
 */
export declare class SegmentsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/segments API
     * @param {string} [networkId] network_id query parameter for /v2.0/segments API
     * @param {string} [physicalNetwork] physical_network query parameter for /v2.0/segments API
     * @param {string} [networkType] network_type query parameter for /v2.0/segments API
     * @param {string | null} [name] name query parameter for /v2.0/segments API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/segments API
     * @param {string} [description] description query parameter for /v2.0/segments API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SegmentsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    segmentsGet(id?: string, networkId?: string, physicalNetwork?: string, networkType?: string, name?: string | null, revisionNumber?: string, description?: string, sortKey?: string, sortDir?: SegmentsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SegmentsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    segmentsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    segmentsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SegmentShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/segments/{id} API
     * @param {SegmentUpdateRequest} [segmentUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    segmentsIdPut(id: string, segmentUpdateRequest?: SegmentUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SegmentUpdateResponse, any>>;
    /**
     *
     * @param {SegmentsCreateRequest} [segmentsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SegmentsApi
     */
    segmentsPost(segmentsCreateRequest?: SegmentsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SegmentsCreateResponse, any>>;
}
/**
 * @export
 */
export declare const SegmentsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SegmentsGetSortDirEnum = typeof SegmentsGetSortDirEnum[keyof typeof SegmentsGetSortDirEnum];
/**
 * ServiceProfilesApi - axios parameter creator
 * @export
 */
export declare const ServiceProfilesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/service_profiles API
     * @param {string | null} [description] description query parameter for /v2.0/service_profiles API
     * @param {string} [driver] driver query parameter for /v2.0/service_profiles API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/service_profiles API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesGet: (id?: string, description?: string | null, driver?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: ServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {ServiceProfileUpdateRequest} [serviceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdPut: (id: string, serviceProfileUpdateRequest?: ServiceProfileUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {ServiceProfilesCreateRequest} [serviceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesPost: (serviceProfilesCreateRequest?: ServiceProfilesCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServiceProfilesApi - functional programming interface
 * @export
 */
export declare const ServiceProfilesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/service_profiles API
     * @param {string | null} [description] description query parameter for /v2.0/service_profiles API
     * @param {string} [driver] driver query parameter for /v2.0/service_profiles API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/service_profiles API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesGet(id?: string, description?: string | null, driver?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: ServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProfilesIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProfileShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {ServiceProfileUpdateRequest} [serviceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdPut(id: string, serviceProfileUpdateRequest?: ServiceProfileUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProfileUpdateResponse>>;
    /**
     *
     * @param {ServiceProfilesCreateRequest} [serviceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesPost(serviceProfilesCreateRequest?: ServiceProfilesCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProfilesCreateResponse>>;
};
/**
 * ServiceProfilesApi - factory interface
 * @export
 */
export declare const ServiceProfilesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/service_profiles API
     * @param {string | null} [description] description query parameter for /v2.0/service_profiles API
     * @param {string} [driver] driver query parameter for /v2.0/service_profiles API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/service_profiles API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesGet(id?: string, description?: string | null, driver?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: ServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<ServiceProfilesIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdGet(id: string, options?: any): AxiosPromise<ServiceProfileShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {ServiceProfileUpdateRequest} [serviceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesIdPut(id: string, serviceProfileUpdateRequest?: ServiceProfileUpdateRequest, options?: any): AxiosPromise<ServiceProfileUpdateResponse>;
    /**
     *
     * @param {ServiceProfilesCreateRequest} [serviceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProfilesPost(serviceProfilesCreateRequest?: ServiceProfilesCreateRequest, options?: any): AxiosPromise<ServiceProfilesCreateResponse>;
};
/**
 * ServiceProfilesApi - object-oriented interface
 * @export
 * @class ServiceProfilesApi
 * @extends {BaseAPI}
 */
export declare class ServiceProfilesApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/service_profiles API
     * @param {string | null} [description] description query parameter for /v2.0/service_profiles API
     * @param {string} [driver] driver query parameter for /v2.0/service_profiles API
     * @param {string | boolean | null} [enabled] enabled query parameter for /v2.0/service_profiles API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProfilesGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProfilesApi
     */
    serviceProfilesGet(id?: string, description?: string | null, driver?: string, enabled?: string | boolean | null, sortKey?: string, sortDir?: ServiceProfilesGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProfilesIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProfilesApi
     */
    serviceProfilesIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProfilesApi
     */
    serviceProfilesIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProfileShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id} API
     * @param {ServiceProfileUpdateRequest} [serviceProfileUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProfilesApi
     */
    serviceProfilesIdPut(id: string, serviceProfileUpdateRequest?: ServiceProfileUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProfileUpdateResponse, any>>;
    /**
     *
     * @param {ServiceProfilesCreateRequest} [serviceProfilesCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProfilesApi
     */
    serviceProfilesPost(serviceProfilesCreateRequest?: ServiceProfilesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProfilesCreateResponse, any>>;
}
/**
 * @export
 */
export declare const ServiceProfilesGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type ServiceProfilesGetSortDirEnum = typeof ServiceProfilesGetSortDirEnum[keyof typeof ServiceProfilesGetSortDirEnum];
/**
 * ServiceProvidersApi - axios parameter creator
 * @export
 */
export declare const ServiceProvidersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersGet: (sortKey?: string, sortDir?: ServiceProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {ServiceProviderUpdateRequest} [serviceProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdPut: (id: string, serviceProviderUpdateRequest?: ServiceProviderUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {ServiceProvidersCreateRequest} [serviceProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersPost: (serviceProvidersCreateRequest?: ServiceProvidersCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ServiceProvidersApi - functional programming interface
 * @export
 */
export declare const ServiceProvidersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersGet(sortKey?: string, sortDir?: ServiceProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProvidersIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProviderShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {ServiceProviderUpdateRequest} [serviceProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdPut(id: string, serviceProviderUpdateRequest?: ServiceProviderUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProviderUpdateResponse>>;
    /**
     *
     * @param {ServiceProvidersCreateRequest} [serviceProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersPost(serviceProvidersCreateRequest?: ServiceProvidersCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ServiceProvidersCreateResponse>>;
};
/**
 * ServiceProvidersApi - factory interface
 * @export
 */
export declare const ServiceProvidersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersGet(sortKey?: string, sortDir?: ServiceProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<ServiceProvidersIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdGet(id: string, options?: any): AxiosPromise<ServiceProviderShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {ServiceProviderUpdateRequest} [serviceProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersIdPut(id: string, serviceProviderUpdateRequest?: ServiceProviderUpdateRequest, options?: any): AxiosPromise<ServiceProviderUpdateResponse>;
    /**
     *
     * @param {ServiceProvidersCreateRequest} [serviceProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    serviceProvidersPost(serviceProvidersCreateRequest?: ServiceProvidersCreateRequest, options?: any): AxiosPromise<ServiceProvidersCreateResponse>;
};
/**
 * ServiceProvidersApi - object-oriented interface
 * @export
 * @class ServiceProvidersApi
 * @extends {BaseAPI}
 */
export declare class ServiceProvidersApi extends BaseAPI {
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {ServiceProvidersGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProvidersApi
     */
    serviceProvidersGet(sortKey?: string, sortDir?: ServiceProvidersGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProvidersIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProvidersApi
     */
    serviceProvidersIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProvidersApi
     */
    serviceProvidersIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProviderShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/service-providers/{id} API
     * @param {ServiceProviderUpdateRequest} [serviceProviderUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProvidersApi
     */
    serviceProvidersIdPut(id: string, serviceProviderUpdateRequest?: ServiceProviderUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProviderUpdateResponse, any>>;
    /**
     *
     * @param {ServiceProvidersCreateRequest} [serviceProvidersCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServiceProvidersApi
     */
    serviceProvidersPost(serviceProvidersCreateRequest?: ServiceProvidersCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ServiceProvidersCreateResponse, any>>;
}
/**
 * @export
 */
export declare const ServiceProvidersGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type ServiceProvidersGetSortDirEnum = typeof ServiceProvidersGetSortDirEnum[keyof typeof ServiceProvidersGetSortDirEnum];
/**
 * SubnetpoolsApi - axios parameter creator
 * @export
 */
export declare const SubnetpoolsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnetpools API
     * @param {string} [name] name query parameter for /v2.0/subnetpools API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultQuota] default_quota query parameter for /v2.0/subnetpools API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultPrefixlen] default_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [minPrefixlen] min_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [maxPrefixlen] max_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnetpools API
     * @param {string | null} [addressScopeId] address_scope_id query parameter for /v2.0/subnetpools API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnetpools API
     * @param {string} [description] description query parameter for /v2.0/subnetpools API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsGet: (id?: string, name?: string, tenantId?: string, defaultQuota?: string | number, ipVersion?: string, defaultPrefixlen?: string | number, minPrefixlen?: string | number, maxPrefixlen?: string | number, isDefault?: string | boolean, shared?: string | boolean, addressScopeId?: string | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: SubnetpoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdAddPrefixesPut: (id: string, body?: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdOnboardNetworkSubnetsPut: (id: string, body?: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {SubnetpoolUpdateRequest} [subnetpoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdPut: (id: string, subnetpoolUpdateRequest?: SubnetpoolUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdRemovePrefixesPut: (id: string, body?: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SubnetpoolsCreateRequest} [subnetpoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsPost: (subnetpoolsCreateRequest?: SubnetpoolsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsDelete: (subnetpoolId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsSubnetpoolIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsGet: (sortKey?: string, sortDir?: SubnetpoolsSubnetpoolIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdDelete: (subnetpoolId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdGet: (subnetpoolId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdPut: (subnetpoolId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {SubnetpoolsTagsUpdateAllRequest} [subnetpoolsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsPut: (subnetpoolId: string, subnetpoolsTagsUpdateAllRequest?: SubnetpoolsTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SubnetpoolsApi - functional programming interface
 * @export
 */
export declare const SubnetpoolsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnetpools API
     * @param {string} [name] name query parameter for /v2.0/subnetpools API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultQuota] default_quota query parameter for /v2.0/subnetpools API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultPrefixlen] default_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [minPrefixlen] min_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [maxPrefixlen] max_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnetpools API
     * @param {string | null} [addressScopeId] address_scope_id query parameter for /v2.0/subnetpools API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnetpools API
     * @param {string} [description] description query parameter for /v2.0/subnetpools API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsGet(id?: string, name?: string, tenantId?: string, defaultQuota?: string | number, ipVersion?: string, defaultPrefixlen?: string | number, minPrefixlen?: string | number, maxPrefixlen?: string | number, isDefault?: string | boolean, shared?: string | boolean, addressScopeId?: string | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: SubnetpoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetpoolsIndexResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdAddPrefixesPut(id: string, body?: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetpoolShowResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdOnboardNetworkSubnetsPut(id: string, body?: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {SubnetpoolUpdateRequest} [subnetpoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdPut(id: string, subnetpoolUpdateRequest?: SubnetpoolUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetpoolUpdateResponse>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdRemovePrefixesPut(id: string, body?: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     *
     * @param {SubnetpoolsCreateRequest} [subnetpoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsPost(subnetpoolsCreateRequest?: SubnetpoolsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetpoolsCreateResponse>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsDelete(subnetpoolId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsSubnetpoolIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsGet(sortKey?: string, sortDir?: SubnetpoolsSubnetpoolIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetpoolsTagsIndexResponse>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdDelete(subnetpoolId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdGet(subnetpoolId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdPut(subnetpoolId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {SubnetpoolsTagsUpdateAllRequest} [subnetpoolsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsPut(subnetpoolId: string, subnetpoolsTagsUpdateAllRequest?: SubnetpoolsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetpoolsTagsUpdateAllResponse>>;
};
/**
 * SubnetpoolsApi - factory interface
 * @export
 */
export declare const SubnetpoolsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnetpools API
     * @param {string} [name] name query parameter for /v2.0/subnetpools API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultQuota] default_quota query parameter for /v2.0/subnetpools API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultPrefixlen] default_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [minPrefixlen] min_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [maxPrefixlen] max_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnetpools API
     * @param {string | null} [addressScopeId] address_scope_id query parameter for /v2.0/subnetpools API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnetpools API
     * @param {string} [description] description query parameter for /v2.0/subnetpools API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsGet(id?: string, name?: string, tenantId?: string, defaultQuota?: string | number, ipVersion?: string, defaultPrefixlen?: string | number, minPrefixlen?: string | number, maxPrefixlen?: string | number, isDefault?: string | boolean, shared?: string | boolean, addressScopeId?: string | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: SubnetpoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SubnetpoolsIndexResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdAddPrefixesPut(id: string, body?: any, options?: any): AxiosPromise<any>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdDelete(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdGet(id: string, options?: any): AxiosPromise<SubnetpoolShowResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdOnboardNetworkSubnetsPut(id: string, body?: any, options?: any): AxiosPromise<any>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {SubnetpoolUpdateRequest} [subnetpoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdPut(id: string, subnetpoolUpdateRequest?: SubnetpoolUpdateRequest, options?: any): AxiosPromise<SubnetpoolUpdateResponse>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsIdRemovePrefixesPut(id: string, body?: any, options?: any): AxiosPromise<any>;
    /**
     *
     * @param {SubnetpoolsCreateRequest} [subnetpoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsPost(subnetpoolsCreateRequest?: SubnetpoolsCreateRequest, options?: any): AxiosPromise<SubnetpoolsCreateResponse>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsDelete(subnetpoolId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsSubnetpoolIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsGet(sortKey?: string, sortDir?: SubnetpoolsSubnetpoolIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SubnetpoolsTagsIndexResponse>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdDelete(subnetpoolId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdGet(subnetpoolId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsIdPut(subnetpoolId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {SubnetpoolsTagsUpdateAllRequest} [subnetpoolsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetpoolsSubnetpoolIdTagsPut(subnetpoolId: string, subnetpoolsTagsUpdateAllRequest?: SubnetpoolsTagsUpdateAllRequest, options?: any): AxiosPromise<SubnetpoolsTagsUpdateAllResponse>;
};
/**
 * SubnetpoolsApi - object-oriented interface
 * @export
 * @class SubnetpoolsApi
 * @extends {BaseAPI}
 */
export declare class SubnetpoolsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnetpools API
     * @param {string} [name] name query parameter for /v2.0/subnetpools API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultQuota] default_quota query parameter for /v2.0/subnetpools API
     * @param {string} [ipVersion] ip_version query parameter for /v2.0/subnetpools API
     * @param {string | number} [defaultPrefixlen] default_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [minPrefixlen] min_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | number} [maxPrefixlen] max_prefixlen query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [isDefault] is_default query parameter for /v2.0/subnetpools API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnetpools API
     * @param {string | null} [addressScopeId] address_scope_id query parameter for /v2.0/subnetpools API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnetpools API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnetpools API
     * @param {string} [description] description query parameter for /v2.0/subnetpools API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsGet(id?: string, name?: string, tenantId?: string, defaultQuota?: string | number, ipVersion?: string, defaultPrefixlen?: string | number, minPrefixlen?: string | number, maxPrefixlen?: string | number, isDefault?: string | boolean, shared?: string | boolean, addressScopeId?: string | null, revisionNumber?: string, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, sortKey?: string, sortDir?: SubnetpoolsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetpoolsIndexResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsIdAddPrefixesPut(id: string, body?: any, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsIdDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsIdGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetpoolShowResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsIdOnboardNetworkSubnetsPut(id: string, body?: any, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {SubnetpoolUpdateRequest} [subnetpoolUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsIdPut(id: string, subnetpoolUpdateRequest?: SubnetpoolUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetpoolUpdateResponse, any>>;
    /**
     *
     * @param {string} id id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsIdRemovePrefixesPut(id: string, body?: any, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<any, any>>;
    /**
     *
     * @param {SubnetpoolsCreateRequest} [subnetpoolsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsPost(subnetpoolsCreateRequest?: SubnetpoolsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetpoolsCreateResponse, any>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsSubnetpoolIdTagsDelete(subnetpoolId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetpoolsSubnetpoolIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsSubnetpoolIdTagsGet(sortKey?: string, sortDir?: SubnetpoolsSubnetpoolIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetpoolsTagsIndexResponse, any>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsSubnetpoolIdTagsIdDelete(subnetpoolId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsSubnetpoolIdTagsIdGet(subnetpoolId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsSubnetpoolIdTagsIdPut(subnetpoolId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetpoolId subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
     * @param {SubnetpoolsTagsUpdateAllRequest} [subnetpoolsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetpoolsApi
     */
    subnetpoolsSubnetpoolIdTagsPut(subnetpoolId: string, subnetpoolsTagsUpdateAllRequest?: SubnetpoolsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetpoolsTagsUpdateAllResponse, any>>;
}
/**
 * @export
 */
export declare const SubnetpoolsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SubnetpoolsGetSortDirEnum = typeof SubnetpoolsGetSortDirEnum[keyof typeof SubnetpoolsGetSortDirEnum];
/**
 * @export
 */
export declare const SubnetpoolsSubnetpoolIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SubnetpoolsSubnetpoolIdTagsGetSortDirEnum = typeof SubnetpoolsSubnetpoolIdTagsGetSortDirEnum[keyof typeof SubnetpoolsSubnetpoolIdTagsGetSortDirEnum];
/**
 * SubnetsApi - axios parameter creator
 * @export
 */
export declare const SubnetsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnets API
     * @param {string} [name] name query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/subnets API
     * @param {string} [networkId] network_id query parameter for /v2.0/subnets API
     * @param {string | null} [subnetpoolId] subnetpool_id query parameter for /v2.0/subnets API
     * @param {string | null} [cidr] cidr query parameter for /v2.0/subnets API
     * @param {string} [gatewayIp] gateway_ip query parameter for /v2.0/subnets API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnets API
     * @param {string | boolean} [enableDhcp] enable_dhcp query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6RaModeEnum} [ipv6RaMode] ipv6_ra_mode query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6AddressModeEnum} [ipv6AddressMode] ipv6_address_mode query parameter for /v2.0/subnets API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnets API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnets API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/subnets API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnets API
     * @param {string} [description] description query parameter for /v2.0/subnets API
     * @param {string | null} [segmentId] segment_id query parameter for /v2.0/subnets API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsGet: (id?: string, name?: string, ipVersion?: SubnetsGetIpVersionEnum, networkId?: string, subnetpoolId?: string | null, cidr?: string | null, gatewayIp?: string, tenantId?: string, enableDhcp?: string | boolean, ipv6RaMode?: SubnetsGetIpv6RaModeEnum, ipv6AddressMode?: SubnetsGetIpv6AddressModeEnum, shared?: string | boolean, revisionNumber?: string, routerexternal?: string | boolean, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, segmentId?: string | null, sortKey?: string, sortDir?: SubnetsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SubnetsCreateRequest} [subnetsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsPost: (subnetsCreateRequest?: SubnetsCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdDelete: (subnetId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdGet: (subnetId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {SubnetUpdateRequest} [subnetUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdPut: (subnetId: string, subnetUpdateRequest?: SubnetUpdateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsDelete: (subnetId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsSubnetIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsGet: (sortKey?: string, sortDir?: SubnetsSubnetIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdDelete: (subnetId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdGet: (subnetId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdPut: (subnetId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {SubnetsTagsUpdateAllRequest} [subnetsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsPut: (subnetId: string, subnetsTagsUpdateAllRequest?: SubnetsTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SubnetsApi - functional programming interface
 * @export
 */
export declare const SubnetsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnets API
     * @param {string} [name] name query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/subnets API
     * @param {string} [networkId] network_id query parameter for /v2.0/subnets API
     * @param {string | null} [subnetpoolId] subnetpool_id query parameter for /v2.0/subnets API
     * @param {string | null} [cidr] cidr query parameter for /v2.0/subnets API
     * @param {string} [gatewayIp] gateway_ip query parameter for /v2.0/subnets API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnets API
     * @param {string | boolean} [enableDhcp] enable_dhcp query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6RaModeEnum} [ipv6RaMode] ipv6_ra_mode query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6AddressModeEnum} [ipv6AddressMode] ipv6_address_mode query parameter for /v2.0/subnets API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnets API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnets API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/subnets API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnets API
     * @param {string} [description] description query parameter for /v2.0/subnets API
     * @param {string | null} [segmentId] segment_id query parameter for /v2.0/subnets API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsGet(id?: string, name?: string, ipVersion?: SubnetsGetIpVersionEnum, networkId?: string, subnetpoolId?: string | null, cidr?: string | null, gatewayIp?: string, tenantId?: string, enableDhcp?: string | boolean, ipv6RaMode?: SubnetsGetIpv6RaModeEnum, ipv6AddressMode?: SubnetsGetIpv6AddressModeEnum, shared?: string | boolean, revisionNumber?: string, routerexternal?: string | boolean, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, segmentId?: string | null, sortKey?: string, sortDir?: SubnetsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetsIndexResponse>>;
    /**
     *
     * @param {SubnetsCreateRequest} [subnetsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsPost(subnetsCreateRequest?: SubnetsCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetsCreateResponse>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdDelete(subnetId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdGet(subnetId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetShowResponse>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {SubnetUpdateRequest} [subnetUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdPut(subnetId: string, subnetUpdateRequest?: SubnetUpdateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetUpdateResponse>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsDelete(subnetId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsSubnetIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsGet(sortKey?: string, sortDir?: SubnetsSubnetIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetsTagsIndexResponse>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdDelete(subnetId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdGet(subnetId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdPut(subnetId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {SubnetsTagsUpdateAllRequest} [subnetsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsPut(subnetId: string, subnetsTagsUpdateAllRequest?: SubnetsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubnetsTagsUpdateAllResponse>>;
};
/**
 * SubnetsApi - factory interface
 * @export
 */
export declare const SubnetsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnets API
     * @param {string} [name] name query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/subnets API
     * @param {string} [networkId] network_id query parameter for /v2.0/subnets API
     * @param {string | null} [subnetpoolId] subnetpool_id query parameter for /v2.0/subnets API
     * @param {string | null} [cidr] cidr query parameter for /v2.0/subnets API
     * @param {string} [gatewayIp] gateway_ip query parameter for /v2.0/subnets API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnets API
     * @param {string | boolean} [enableDhcp] enable_dhcp query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6RaModeEnum} [ipv6RaMode] ipv6_ra_mode query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6AddressModeEnum} [ipv6AddressMode] ipv6_address_mode query parameter for /v2.0/subnets API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnets API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnets API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/subnets API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnets API
     * @param {string} [description] description query parameter for /v2.0/subnets API
     * @param {string | null} [segmentId] segment_id query parameter for /v2.0/subnets API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsGet(id?: string, name?: string, ipVersion?: SubnetsGetIpVersionEnum, networkId?: string, subnetpoolId?: string | null, cidr?: string | null, gatewayIp?: string, tenantId?: string, enableDhcp?: string | boolean, ipv6RaMode?: SubnetsGetIpv6RaModeEnum, ipv6AddressMode?: SubnetsGetIpv6AddressModeEnum, shared?: string | boolean, revisionNumber?: string, routerexternal?: string | boolean, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, segmentId?: string | null, sortKey?: string, sortDir?: SubnetsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SubnetsIndexResponse>;
    /**
     *
     * @param {SubnetsCreateRequest} [subnetsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsPost(subnetsCreateRequest?: SubnetsCreateRequest, options?: any): AxiosPromise<SubnetsCreateResponse>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdDelete(subnetId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdGet(subnetId: string, options?: any): AxiosPromise<SubnetShowResponse>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {SubnetUpdateRequest} [subnetUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdPut(subnetId: string, subnetUpdateRequest?: SubnetUpdateRequest, options?: any): AxiosPromise<SubnetUpdateResponse>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsDelete(subnetId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsSubnetIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsGet(sortKey?: string, sortDir?: SubnetsSubnetIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<SubnetsTagsIndexResponse>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdDelete(subnetId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdGet(subnetId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsIdPut(subnetId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {SubnetsTagsUpdateAllRequest} [subnetsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    subnetsSubnetIdTagsPut(subnetId: string, subnetsTagsUpdateAllRequest?: SubnetsTagsUpdateAllRequest, options?: any): AxiosPromise<SubnetsTagsUpdateAllResponse>;
};
/**
 * SubnetsApi - object-oriented interface
 * @export
 * @class SubnetsApi
 * @extends {BaseAPI}
 */
export declare class SubnetsApi extends BaseAPI {
    /**
     *
     * @param {string} [id] id query parameter for /v2.0/subnets API
     * @param {string} [name] name query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpVersionEnum} [ipVersion] ip_version query parameter for /v2.0/subnets API
     * @param {string} [networkId] network_id query parameter for /v2.0/subnets API
     * @param {string | null} [subnetpoolId] subnetpool_id query parameter for /v2.0/subnets API
     * @param {string | null} [cidr] cidr query parameter for /v2.0/subnets API
     * @param {string} [gatewayIp] gateway_ip query parameter for /v2.0/subnets API
     * @param {string} [tenantId] tenant_id query parameter for /v2.0/subnets API
     * @param {string | boolean} [enableDhcp] enable_dhcp query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6RaModeEnum} [ipv6RaMode] ipv6_ra_mode query parameter for /v2.0/subnets API
     * @param {SubnetsGetIpv6AddressModeEnum} [ipv6AddressMode] ipv6_address_mode query parameter for /v2.0/subnets API
     * @param {string | boolean} [shared] shared query parameter for /v2.0/subnets API
     * @param {string} [revisionNumber] revision_number query parameter for /v2.0/subnets API
     * @param {string | boolean} [routerexternal] router:external query parameter for /v2.0/subnets API
     * @param {Array<string>} [tags] tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [tagsAny] tags-any query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTags] not-tags query parameter for /v2.0/subnets API
     * @param {Array<string>} [notTagsAny] not-tags-any query parameter for /v2.0/subnets API
     * @param {string} [description] description query parameter for /v2.0/subnets API
     * @param {string | null} [segmentId] segment_id query parameter for /v2.0/subnets API
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsGet(id?: string, name?: string, ipVersion?: SubnetsGetIpVersionEnum, networkId?: string, subnetpoolId?: string | null, cidr?: string | null, gatewayIp?: string, tenantId?: string, enableDhcp?: string | boolean, ipv6RaMode?: SubnetsGetIpv6RaModeEnum, ipv6AddressMode?: SubnetsGetIpv6AddressModeEnum, shared?: string | boolean, revisionNumber?: string, routerexternal?: string | boolean, tags?: Array<string>, tagsAny?: Array<string>, notTags?: Array<string>, notTagsAny?: Array<string>, description?: string, segmentId?: string | null, sortKey?: string, sortDir?: SubnetsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetsIndexResponse, any>>;
    /**
     *
     * @param {SubnetsCreateRequest} [subnetsCreateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsPost(subnetsCreateRequest?: SubnetsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetsCreateResponse, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdDelete(subnetId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdGet(subnetId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetShowResponse, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id} API
     * @param {SubnetUpdateRequest} [subnetUpdateRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdPut(subnetId: string, subnetUpdateRequest?: SubnetUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetUpdateResponse, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdTagsDelete(subnetId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {SubnetsSubnetIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdTagsGet(sortKey?: string, sortDir?: SubnetsSubnetIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetsTagsIndexResponse, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdTagsIdDelete(subnetId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdTagsIdGet(subnetId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdTagsIdPut(subnetId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} subnetId subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
     * @param {SubnetsTagsUpdateAllRequest} [subnetsTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SubnetsApi
     */
    subnetsSubnetIdTagsPut(subnetId: string, subnetsTagsUpdateAllRequest?: SubnetsTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SubnetsTagsUpdateAllResponse, any>>;
}
/**
 * @export
 */
export declare const SubnetsGetIpVersionEnum: {
    readonly _4: "4";
    readonly _6: "6";
};
export type SubnetsGetIpVersionEnum = typeof SubnetsGetIpVersionEnum[keyof typeof SubnetsGetIpVersionEnum];
/**
 * @export
 */
export declare const SubnetsGetIpv6RaModeEnum: {
    readonly Dhcpv6Stateful: "dhcpv6-stateful";
    readonly Dhcpv6Stateless: "dhcpv6-stateless";
    readonly Slaac: "slaac";
};
export type SubnetsGetIpv6RaModeEnum = typeof SubnetsGetIpv6RaModeEnum[keyof typeof SubnetsGetIpv6RaModeEnum];
/**
 * @export
 */
export declare const SubnetsGetIpv6AddressModeEnum: {
    readonly Dhcpv6Stateful: "dhcpv6-stateful";
    readonly Dhcpv6Stateless: "dhcpv6-stateless";
    readonly Slaac: "slaac";
};
export type SubnetsGetIpv6AddressModeEnum = typeof SubnetsGetIpv6AddressModeEnum[keyof typeof SubnetsGetIpv6AddressModeEnum];
/**
 * @export
 */
export declare const SubnetsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SubnetsGetSortDirEnum = typeof SubnetsGetSortDirEnum[keyof typeof SubnetsGetSortDirEnum];
/**
 * @export
 */
export declare const SubnetsSubnetIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type SubnetsSubnetIdTagsGetSortDirEnum = typeof SubnetsSubnetIdTagsGetSortDirEnum[keyof typeof SubnetsSubnetIdTagsGetSortDirEnum];
/**
 * TrunksApi - axios parameter creator
 * @export
 */
export declare const TrunksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsDelete: (trunkId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {TrunksTrunkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsGet: (sortKey?: string, sortDir?: TrunksTrunkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdDelete: (trunkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdGet: (trunkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdPut: (trunkId: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {TrunksTagsUpdateAllRequest} [trunksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsPut: (trunkId: string, trunksTagsUpdateAllRequest?: TrunksTagsUpdateAllRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TrunksApi - functional programming interface
 * @export
 */
export declare const TrunksApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsDelete(trunkId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {TrunksTrunkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsGet(sortKey?: string, sortDir?: TrunksTrunkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrunksTagsIndexResponse>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdDelete(trunkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdGet(trunkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdPut(trunkId: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {TrunksTagsUpdateAllRequest} [trunksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsPut(trunkId: string, trunksTagsUpdateAllRequest?: TrunksTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TrunksTagsUpdateAllResponse>>;
};
/**
 * TrunksApi - factory interface
 * @export
 */
export declare const TrunksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsDelete(trunkId: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {TrunksTrunkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsGet(sortKey?: string, sortDir?: TrunksTrunkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: any): AxiosPromise<TrunksTagsIndexResponse>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdDelete(trunkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdGet(trunkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsIdPut(trunkId: string, id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {TrunksTagsUpdateAllRequest} [trunksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    trunksTrunkIdTagsPut(trunkId: string, trunksTagsUpdateAllRequest?: TrunksTagsUpdateAllRequest, options?: any): AxiosPromise<TrunksTagsUpdateAllResponse>;
};
/**
 * TrunksApi - object-oriented interface
 * @export
 * @class TrunksApi
 * @extends {BaseAPI}
 */
export declare class TrunksApi extends BaseAPI {
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrunksApi
     */
    trunksTrunkIdTagsDelete(trunkId: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} [sortKey] Sort results by the attribute. This is an optional feature and may be silently ignored by the server.
     * @param {TrunksTrunkIdTagsGetSortDirEnum} [sortDir] Sort direction. This is an optional feature and may be silently ignored by the server.
     * @param {number} [limit] Requests a page size of items. Returns a number of items up to a limit value. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {string} [marker] The ID of the last-seen item. Use the limit parameter to make an initial limited request and use the ID of the last-seen item from the response as the marker parameter value in a subsequent limited request.
     * @param {boolean} [pageReverse] Reverse the page direction
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrunksApi
     */
    trunksTrunkIdTagsGet(sortKey?: string, sortDir?: TrunksTrunkIdTagsGetSortDirEnum, limit?: number, marker?: string, pageReverse?: boolean, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TrunksTagsIndexResponse, any>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrunksApi
     */
    trunksTrunkIdTagsIdDelete(trunkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrunksApi
     */
    trunksTrunkIdTagsIdGet(trunkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {string} id id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrunksApi
     */
    trunksTrunkIdTagsIdPut(trunkId: string, id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} trunkId trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
     * @param {TrunksTagsUpdateAllRequest} [trunksTagsUpdateAllRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrunksApi
     */
    trunksTrunkIdTagsPut(trunkId: string, trunksTagsUpdateAllRequest?: TrunksTagsUpdateAllRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TrunksTagsUpdateAllResponse, any>>;
}
/**
 * @export
 */
export declare const TrunksTrunkIdTagsGetSortDirEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type TrunksTrunkIdTagsGetSortDirEnum = typeof TrunksTrunkIdTagsGetSortDirEnum[keyof typeof TrunksTrunkIdTagsGetSortDirEnum];
