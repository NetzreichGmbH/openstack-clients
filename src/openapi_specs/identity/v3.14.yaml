openapi: 3.1.0
info:
  title: OpenStack Identity API
  description: |-
    Identity API provided by Keystone service
  version: '3.14'
paths:
  /:
    get:
      description: |-
        GET operation on /
      operationId: versions:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootGetResponse'
      tags:
        - version
    head:
      description: |-
        HEAD operation on /
      operationId: versions:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - version
  /v3:
    get:
      description: |-
        GET operation on /v3
      operationId: version:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootGetResponse'
      tags:
        - v3
    head:
      description: |-
        HEAD operation on /v3
      operationId: version:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - v3
  /v3/auth/projects:
    get:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: auth/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProjectsGetResponse'
      tags:
        - auth
    head:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: auth/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/OS-FEDERATION/projects:
    get:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: OS-FEDERATION/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationProjectsGetResponse'
      tags:
        - OS-FEDERATION
      deprecated: true
    head:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: OS-FEDERATION/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
      deprecated: true
  /v3/auth/domains:
    get:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: auth/domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDomainsGetResponse'
      tags:
        - auth
    head:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: auth/domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/OS-FEDERATION/domains:
    get:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: OS-FEDERATION/domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationDomainsGetResponse'
      tags:
        - OS-FEDERATION
      deprecated: true
    head:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: OS-FEDERATION/domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
      deprecated: true
  /v3/auth/system:
    get:
      description: |-
        Get possible system scopes for token.

        GET/HEAD /v3/auth/system
      operationId: auth/system:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSystemGetResponse'
      tags:
        - auth
    head:
      description: |-
        Get possible system scopes for token.

        GET/HEAD /v3/auth/system
      operationId: auth/system:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/catalog:
    get:
      description: |-
        Get service catalog for token.

        GET/HEAD /v3/auth/catalog
      operationId: auth/catalog:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCatalogGetResponse'
      tags:
        - auth
    head:
      description: |-
        Get service catalog for token.

        GET/HEAD /v3/auth/catalog
      operationId: auth/catalog:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/tokens/OS-PKI/revoked:
    get:
      description: |-
        Deprecated; get revoked token list.

        GET/HEAD /v3/auth/tokens/OS-PKI/revoked
      operationId: auth/tokens/OS-PKI/revoked:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensOs_PkiRevokedGetResponse'
      tags:
        - auth
    head:
      description: |-
        Deprecated; get revoked token list.

        GET/HEAD /v3/auth/tokens/OS-PKI/revoked
      operationId: auth/tokens/OS-PKI/revoked:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/tokens:
    get:
      parameters:
        - $ref: '#/components/parameters/X-Subject-Token'
      description: |-
        Validate a token.

        HEAD/GET /v3/auth/tokens
      operationId: auth/tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensGetResponse'
          headers:
            X-Subject-Token:
              $ref: '#/components/headers/X-Subject-Token'
      tags:
        - auth
    post:
      description: |-
        Issue a token.

        POST /v3/auth/tokens
      operationId: auth/tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensPostResponse'
          headers:
            X-Subject-Token:
              $ref: '#/components/headers/X-Subject-Token'
        '401':
          description: Unauthorized
          headers:
            Openstack-Auth-Receipt:
              $ref: '#/components/headers/Openstack-Auth-Receipt'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthReceiptSchema'
      tags:
        - auth
      security: []
    delete:
      description: |-
        Revoke a token.

        DELETE /v3/auth/tokens
      operationId: auth/tokens:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
          headers: {}
      tags:
        - auth
    head:
      description: |-
        Validate a token.

        HEAD/GET /v3/auth/tokens
      operationId: auth/tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          headers: {}
      tags:
        - auth
  /v3/auth/OS-FEDERATION/saml2:
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2GetResponse'
      tags:
        - auth
    post:
      description: |-
        Exchange a scoped token for a SAML assertion.

        POST /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationSaml2PostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2PostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/saml2/ecp:
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2EcpGetResponse'
      tags:
        - auth
    post:
      description: |-
        Exchange a scoped token for an ECP assertion.

        POST /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationSaml2EcpPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2EcpPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/websso/{protocol_id}:
    parameters:
      - $ref: '#/components/parameters/auth_OS_FEDERATION_websso_protocol_id'
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationWebssoGetResponse'
      tags:
        - auth
    post:
      description: |-
        POST operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:post
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationWebssoPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso:
    parameters:
      - $ref: '#/components/parameters/auth_OS_FEDERATION_identity_providers_protocols_websso_idp_id'
      - $ref: '#/components/parameters/auth_OS_FEDERATION_identity_providers_protocols_websso_protocol_id'
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoGetResponse'
      tags:
        - auth
    post:
      description: |-
        POST operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:post
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/credentials/{credential_id}:
    parameters:
      - $ref: '#/components/parameters/credentials_credential_id'
    get:
      description: |-
        GET operation on /v3/credentials/{credential_id}
      operationId: credentials/credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialGetResponse'
      tags:
        - credentials
    delete:
      description: |-
        DELETE operation on /v3/credentials/{credential_id}
      operationId: credentials/credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - credentials
    patch:
      description: |-
        PATCH operation on /v3/credentials/{credential_id}
      operationId: credentials/credential_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialPatchResponse'
      tags:
        - credentials
    head:
      description: |-
        HEAD operation on /v3/credentials/{credential_id}
      operationId: credentials/credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - credentials
  /v3/credentials:
    get:
      description: |-
        GET operation on /v3/credentials
      operationId: credentials:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetResponse'
      tags:
        - credentials
    post:
      description: |-
        POST operation on /v3/credentials
      operationId: credentials:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsPostResponse'
      tags:
        - credentials
    head:
      description: |-
        HEAD operation on /v3/credentials
      operationId: credentials:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - credentials
  /v3/domains/{domain_id}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
    get:
      description: |-
        Get domain or list domains.

        GET/HEAD /v3/domains
        GET/HEAD /v3/domains/{domain_id}
      operationId: domains/domain_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      tags:
        - domains
    delete:
      description: |-
        Delete domain.

        DELETE /v3/domains/{domain_id}
      operationId: domains/domain_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
    patch:
      description: |-
        Update domain.

        PATCH /v3/domains/{domain_id}
      operationId: domains/domain_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      tags:
        - domains
    head:
      description: |-
        Get domain or list domains.

        GET/HEAD /v3/domains
        GET/HEAD /v3/domains/{domain_id}
      operationId: domains/domain_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains:
    get:
      parameters:
        - $ref: '#/components/parameters/domain_name'
        - $ref: '#/components/parameters/domain_enabled'
      description: |-
        Get domain or list domains.

        GET/HEAD /v3/domains
        GET/HEAD /v3/domains/{domain_id}
      operationId: domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsGetResponse'
      tags:
        - domains
    post:
      description: |-
        Create domain.

        POST /v3/domains
      operationId: domains:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      tags:
        - domains
    head:
      description: |-
        Get domain or list domains.

        GET/HEAD /v3/domains
        GET/HEAD /v3/domains/{domain_id}
      operationId: domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/config:
    parameters:
      - $ref: '#/components/parameters/domains_config_domain_id'
    get:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
    delete:
      description: |-
        Delete domain config.

        DELETE /v3/domains/{domain_id}/config
        DELETE /v3/domains/{domain_id}/config/{group}
        DELETE /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domain-configuration
    put:
      description: |-
        Create domain config.

        PUT /v3/domains/{domain_id}/config
      operationId: domains/domain_id/config:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfig'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
    patch:
      description: |-
        Update domain config option.

        PATCH /v3/domains/{domain_id}/config
        PATCH /v3/domains/{domain_id}/config/{group}
        PATCH /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfig'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/{domain_id}/config/{group}:
    parameters:
      - $ref: '#/components/parameters/domains_config_domain_id'
      - $ref: '#/components/parameters/domains_config_group'
    get:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroup'
      tags:
        - domain-configuration
    delete:
      description: |-
        Delete domain config.

        DELETE /v3/domains/{domain_id}/config
        DELETE /v3/domains/{domain_id}/config/{group}
        DELETE /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domain-configuration
    patch:
      description: |-
        Update domain config option.

        PATCH /v3/domains/{domain_id}/config
        PATCH /v3/domains/{domain_id}/config/{group}
        PATCH /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfigGroup'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroup'
      tags:
        - domain-configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/{domain_id}/config/{group}/{option}:
    parameters:
      - $ref: '#/components/parameters/domains_config_domain_id'
      - $ref: '#/components/parameters/domains_config_group'
      - $ref: '#/components/parameters/domains_config_option'
    get:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group/option:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroupOption'
      tags:
        - domain-configuration
    delete:
      description: |-
        Delete domain config.

        DELETE /v3/domains/{domain_id}/config
        DELETE /v3/domains/{domain_id}/config/{group}
        DELETE /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group/option:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domain-configuration
    patch:
      description: |-
        Update domain config option.

        PATCH /v3/domains/{domain_id}/config
        PATCH /v3/domains/{domain_id}/config/{group}
        PATCH /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group/option:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfigGroupOption'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroupOption'
      tags:
        - domain-configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group/option:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/config/default:
    get:
      description: |-
        Get default domain config.

        GET/HEAD /v3/domains/config/default
      operationId: domains/config/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
    head:
      description: |-
        Get default domain config.

        GET/HEAD /v3/domains/config/default
      operationId: domains/config/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/config/{group}/default:
    parameters:
      - $ref: '#/components/parameters/domains_config_default_group'
    get:
      description: |-
        Get default domain group config.

        GET/HEAD /v3/domains/config/{group}/default
      operationId: domains/config/group/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroup'
      tags:
        - domain-configuration
    head:
      description: |-
        Get default domain group config.

        GET/HEAD /v3/domains/config/{group}/default
      operationId: domains/config/group/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/config/{group}/{option}/default:
    parameters:
      - $ref: '#/components/parameters/domains_config_default_group'
      - $ref: '#/components/parameters/domains_config_default_option'
    get:
      description: |-
        Get default domain group option config.

        GET/HEAD /v3/domains/config/{group}/{option}/default
      operationId: domains/config/group/option/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroupOption'
      tags:
        - domain-configuration
    head:
      description: |-
        Get default domain group option config.

        GET/HEAD /v3/domains/config/{group}/{option}/default
      operationId: domains/config/group/option/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/{domain_id}/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/domains_users_roles_domain_id'
      - $ref: '#/components/parameters/domains_users_roles_user_id'
    get:
      description: |-
        Get user grant.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles
      operationId: domains/domain_id/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - roles
    head:
      description: |-
        Get user grant.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles
      operationId: domains/domain_id/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/domains_users_roles_domain_id'
      - $ref: '#/components/parameters/domains_users_roles_user_id'
      - $ref: '#/components/parameters/domains_users_roles_role_id'
    get:
      description: |-
        Check if a user has a specific role on the domain.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
      operationId: domains/domain_id/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
    delete:
      description: |-
        Revoke a role from user on a domain.

        DELETE /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
      operationId: domains/domain_id/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
    put:
      description: |-
        Create a role to a user on a domain.

        PUT /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
      operationId: domains/domain_id/users/user_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - roles
    head:
      description: |-
        Check if a user has a specific role on the domain.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
      operationId: domains/domain_id/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/domains/{domain_id}/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/domains_groups_roles_domain_id'
      - $ref: '#/components/parameters/domains_groups_roles_group_id'
    get:
      description: |-
        List all domain grats for a specific group.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles
      operationId: domains/domain_id/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - roles
    head:
      description: |-
        List all domain grats for a specific group.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles
      operationId: domains/domain_id/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/domains_groups_roles_domain_id'
      - $ref: '#/components/parameters/domains_groups_roles_group_id'
      - $ref: '#/components/parameters/domains_groups_roles_role_id'
    get:
      description: |-
        Check if a group has a specific role on a domain.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
      operationId: domains/domain_id/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
    delete:
      description: |-
        Revoke a role from a group on a domain.

        DELETE /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
      operationId: domains/domain_id/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
    put:
      description: |-
        Grant a role to a group on a domain.

        PUT /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
      operationId: domains/domain_id/groups/group_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - roles
    head:
      description: |-
        Check if a group has a specific role on a domain.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
      operationId: domains/domain_id/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/ec2tokens:
    get:
      description: |-
        GET operation on /v3/ec2tokens
      operationId: ec2tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2TokensGetResponse'
      tags:
        - ec2tokens
    post:
      description: |-
        Authenticate ec2 token.

        POST /v3/ec2tokens
      operationId: ec2tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ec2TokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2TokensPostResponse'
      tags:
        - ec2tokens
    head:
      description: |-
        HEAD operation on /v3/ec2tokens
      operationId: ec2tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - ec2tokens
  /v3/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/endpoints/{endpoint_id}
      operationId: endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      tags:
        - endpoints
    delete:
      description: |-
        DELETE operation on /v3/endpoints/{endpoint_id}
      operationId: endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - endpoints
    patch:
      description: |-
        PATCH operation on /v3/endpoints/{endpoint_id}
      operationId: endpoints/endpoint_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      tags:
        - endpoints
    head:
      description: |-
        HEAD operation on /v3/endpoints/{endpoint_id}
      operationId: endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/endpoints:
    get:
      parameters:
        - $ref: '#/components/parameters/endpoint_service_id'
        - $ref: '#/components/parameters/endpoint_region_id'
        - $ref: '#/components/parameters/endpoint_interface'
      description: |-
        GET operation on /v3/endpoints
      operationId: endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsGetResponse'
      tags:
        - endpoints
    post:
      description: |-
        POST operation on /v3/endpoints
      operationId: endpoints:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      tags:
        - endpoints
    head:
      description: |-
        HEAD operation on /v3/endpoints
      operationId: endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy:
    parameters:
      - $ref: '#/components/parameters/endpoints_OS_ENDPOINT_POLICY_policy_endpoint_id'
    get:
      description: |-
        GET operation on /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
      operationId: endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsOs_Endpoint_PolicyPolicyGetResponse'
      tags:
        - endpoints
      deprecated: true
    head:
      description: |-
        HEAD operation on /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
      operationId: endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/groups/{group_id}:
    parameters:
      - $ref: '#/components/parameters/groups_group_id'
    get:
      description: |-
        GET operation on /v3/groups/{group_id}
      operationId: groups/group_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      tags:
        - groups
    delete:
      description: |-
        Delete group.

        DELETE /groups/{group_id}
      operationId: groups/group_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - groups
    patch:
      description: |-
        Update group.

        PATCH /groups/{group_id}
      operationId: groups/group_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      tags:
        - groups
    head:
      description: |-
        HEAD operation on /v3/groups/{group_id}
      operationId: groups/group_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups:
    get:
      parameters:
        - $ref: '#/components/parameters/group_domain_id'
      description: |-
        GET operation on /v3/groups
      operationId: groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetResponse'
      tags:
        - groups
    post:
      description: |-
        Create group.

        POST /groups
      operationId: groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      tags:
        - groups
    head:
      description: |-
        HEAD operation on /v3/groups
      operationId: groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}/users:
    parameters:
      - $ref: '#/components/parameters/groups_users_group_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_user_password_expires_at'
      description: |-
        Get list of users in group.

        GET/HEAD /groups/{group_id}/users
      operationId: groups/group_id/users:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUsersGetResponse'
      tags:
        - groups
    head:
      description: |-
        Get list of users in group.

        GET/HEAD /groups/{group_id}/users
      operationId: groups/group_id/users:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/groups_users_group_id'
      - $ref: '#/components/parameters/groups_users_user_id'
    get:
      description: |-
        Check if a user is in a group.

        GET/HEAD /groups/{group_id}/users/{user_id}
      operationId: groups/group_id/users/user_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
    delete:
      description: |-
        Remove user from group.

        DELETE /groups/{group_id}/users/{user_id}
      operationId: groups/group_id/users/user_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - groups
    put:
      description: |-
        Add user to group.

        PUT /groups/{group_id}/users/{user_id}
      operationId: groups/group_id/users/user_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - groups
    head:
      description: |-
        Check if a user is in a group.

        GET/HEAD /groups/{group_id}/users/{user_id}
      operationId: groups/group_id/users/user_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/limits/{limit_id}:
    parameters:
      - $ref: '#/components/parameters/limits_limit_id'
    get:
      description: |-
        GET operation on /v3/limits/{limit_id}
      operationId: limits/limit_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitGetResponse'
      tags:
        - limits
    delete:
      description: |-
        DELETE operation on /v3/limits/{limit_id}
      operationId: limits/limit_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - limits
    patch:
      description: |-
        PATCH operation on /v3/limits/{limit_id}
      operationId: limits/limit_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitPatchResponse'
      tags:
        - limits
    head:
      description: |-
        HEAD operation on /v3/limits/{limit_id}
      operationId: limits/limit_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/limits:
    get:
      description: |-
        GET operation on /v3/limits
      operationId: limits:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsGetResponse'
      tags:
        - limits
    post:
      description: |-
        POST operation on /v3/limits
      operationId: limits:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsPostResponse'
      tags:
        - limits
    head:
      description: |-
        HEAD operation on /v3/limits
      operationId: limits:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/limits/model:
    get:
      description: |-
        GET operation on /v3/limits/model
      operationId: limits/model:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsModelGetResponse'
      tags:
        - limits
    head:
      description: |-
        HEAD operation on /v3/limits/model
      operationId: limits/model:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    patch:
      description: |-
        PATCH operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupPatchResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups:
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsGetResponse'
      tags:
        - OS-EP-FILTER
    post:
      description: |-
        POST operation on /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsPostResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoints_projects_endpoint_id'
    get:
      description: |-
        Return a list of projects associated with the endpoint.
      operationId: OS-EP-FILTER/endpoints/endpoint_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpointsProjectsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        Return a list of projects associated with the endpoint.
      operationId: OS-EP-FILTER/endpoints/endpoint_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_project_id'
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    put:
      description: |-
        PUT operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointPutResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoints:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints
      operationId: OS-EP-FILTER/projects/project_id/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints
      operationId: OS-EP-FILTER/projects/project_id/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoint_groups_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
      operationId: OS-EP-FILTER/projects/project_id/endpoint_groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpoint_GroupsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
      operationId: OS-EP-FILTER/projects/project_id/endpoint_groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoints_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsEndpointsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_endpoint_group_id'
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    put:
      description: |-
        PUT operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectPutResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-FEDERATION/saml2/metadata:
    get:
      description: |-
        Get SAML2 metadata.

        GET/HEAD /OS-FEDERATION/saml2/metadata
      operationId: OS-FEDERATION/saml2/metadata:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Os_FederationSaml2MetadataGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get SAML2 metadata.

        GET/HEAD /OS-FEDERATION/saml2/metadata
      operationId: OS-FEDERATION/saml2/metadata:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_auth_idp_id'
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_auth_protocol_id'
    get:
      description: |-
        Authenticate from dedicated uri endpoint.

        GET/HEAD /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthGetResponse'
      tags:
        - OS-FEDERATION
    post:
      description: |-
        Authenticate from dedicated uri endpoint.

        POST /OS-FEDERATION/identity_providers/
             {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthPostResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Authenticate from dedicated uri endpoint.

        GET/HEAD /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_idp_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        DELETE operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create an idp resource for federated authentication.

        PUT /OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProviderPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        PATCH operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProviderPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers:
    get:
      parameters:
        - $ref: '#/components/parameters/idp_id'
        - $ref: '#/components/parameters/idp_enabled'
      description: |-
        GET operation on /v3/OS-FEDERATION/identity_providers
      operationId: OS-FEDERATION/identity_providers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/identity_providers
      operationId: OS-FEDERATION/identity_providers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_idp_id'
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_protocol_id'
    get:
      description: |-
        Get protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a protocol from an IDP.

        DELETE /OS-FEDERATION/identity_providers/
               {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create protocol for an IDP.

        PUT /OS-Federation/identity_providers/{idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update protocol for an IDP.

        PATCH /OS-FEDERATION/identity_providers/
              {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_idp_id'
    get:
      description: |-
        List protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/{idp_id}/protocols
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        List protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/{idp_id}/protocols
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/mappings/{mapping_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_mappings_mapping_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a mapping.

        DELETE /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create a mapping.

        PUT /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationMappingPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update an attribute mapping for identity federation.

        PATCH /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationMappingPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/mappings:
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/mappings
      operationId: OS-FEDERATION/mappings:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/mappings
      operationId: OS-FEDERATION/mappings:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/service_providers/{sp_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_service_providers_sp_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a service provider.

        DELETE /OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create a service provider.

        PUT /OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationService_ProviderPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update a service provider.

        PATCH /OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationService_ProviderPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/service_providers:
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/service_providers
      operationId: OS-FEDERATION/service_providers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProvidersGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/service_providers
      operationId: OS-FEDERATION/service_providers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_group_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Revoke an inherited grant for a group on a domain.

        DELETE /OS-INHERIT/domains/{domain_id}/groups/{group_id}
               /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
    put:
      description: |-
        Create an inherited grant for a group on a domain.

        PUT /OS-INHERIT/domains/{domain_id}/groups/{group_id}
            /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
    head:
      description: |-
        Check for an inherited grant for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_group_id'
    get:
      description: |-
        List roles (inherited) for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/groups/group_id/roles/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    head:
      description: |-
        List roles (inherited) for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/groups/group_id/roles/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_user_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}/roles
                 /{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Revoke a grant from a user on a domain.

        DELETE /OS-INHERIT/domains/{domain_id}/users/{user_id}/roles
               /{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
    put:
      description: |-
        Create an inherited grant for a user on a domain.

        PUT /OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}
            /inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
    head:
      description: |-
        Check for an inherited grant for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}/roles
                 /{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_user_id'
    get:
      description: |-
        List roles (inherited) for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/users/user_id/roles/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    head:
      description: |-
        List roles (inherited) for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/users/user_id/roles/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_inherited_to_projects_project_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_inherited_to_projects_user_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a user on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/users/{user_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Revoke an inherited grant for a user on a project.

        DELETE /OS-INHERIT/projects/{project_id}/users/{user_id}
               /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
    put:
      description: |-
        Create an inherited grant for a user on a project.

        PUT /OS-INHERIT/projects/{project_id}/users/{user_id}
            /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
    head:
      description: |-
        Check for an inherited grant for a user on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/users/{user_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_inherited_to_projects_project_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_inherited_to_projects_group_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a group on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Revoke an inherited grant for a group on a project.

        DELETE /OS-INHERIT/projects/{project_id}/groups/{group_id}
               /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
    put:
      description: |-
        Create an inherited grant for a group on a project.

        PUT /OS-INHERIT/projects/{project_id}/groups/{group_id}
            /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
    head:
      description: |-
        Check for an inherited grant for a group on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-OAUTH1/consumers/{consumer_id}:
    parameters:
      - $ref: '#/components/parameters/OS_OAUTH1_consumers_consumer_id'
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumerGetResponse'
      tags:
        - OS-OAUTH1
    delete:
      description: |-
        DELETE operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-OAUTH1
    patch:
      description: |-
        PATCH operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1ConsumerPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumerPatchResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/consumers:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumersGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1ConsumersPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumersPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/request_token:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Request_TokenGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1Request_TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Request_TokenPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/access_token:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Access_TokenGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1Access_TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Access_TokenPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/authorize/{request_token_id}:
    parameters:
      - $ref: '#/components/parameters/OS_OAUTH1_authorize_request_token_id'
    put:
      description: |-
        PUT operation on /v3/OS-OAUTH1/authorize/{request_token_id}
      operationId: OS-OAUTH1/authorize/request_token_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1AuthorizePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1AuthorizePutResponse'
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH2/token:
    get:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenGetResponse'
      tags:
        - OS-OAUTH2
    post:
      description: |-
        Get an OAuth2.0 Access Token.

        POST /v3/OS-OAUTH2/token
      operationId: OS-OAUTH2/token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPostResponse'
      tags:
        - OS-OAUTH2
    delete:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-OAUTH2
    put:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPutResponse'
      tags:
        - OS-OAUTH2
    patch:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPatchResponse'
      tags:
        - OS-OAUTH2
    head:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH2
  /v3/OS-REVOKE/events:
    get:
      description: |-
        GET operation on /v3/OS-REVOKE/events
      operationId: OS-REVOKE/events:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_RevokeEventsGetResponse'
      tags:
        - OS-REVOKE
    head:
      description: |-
        HEAD operation on /v3/OS-REVOKE/events
      operationId: OS-REVOKE/events:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-REVOKE
  /v3/OS-SIMPLE-CERT/ca:
    get:
      description: |-
        GET operation on /v3/OS-SIMPLE-CERT/ca
      operationId: OS-SIMPLE-CERT/ca:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Simple_CertCaGetResponse'
      tags:
        - OS-SIMPLE-CERT
    head:
      description: |-
        HEAD operation on /v3/OS-SIMPLE-CERT/ca
      operationId: OS-SIMPLE-CERT/ca:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-SIMPLE-CERT
  /v3/OS-SIMPLE-CERT/certificates:
    get:
      description: |-
        GET operation on /v3/OS-SIMPLE-CERT/certificates
      operationId: OS-SIMPLE-CERT/certificates:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Simple_CertCertificatesGetResponse'
      tags:
        - OS-SIMPLE-CERT
    head:
      description: |-
        HEAD operation on /v3/OS-SIMPLE-CERT/certificates
      operationId: OS-SIMPLE-CERT/certificates:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-SIMPLE-CERT
  /v3/policies/{policy_id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}
      operationId: policies/policy_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}
      operationId: policies/policy_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    patch:
      description: |-
        PATCH operation on /v3/policies/{policy_id}
      operationId: policies/policy_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyPatchResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}
      operationId: policies/policy_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies:
    get:
      description: |-
        GET operation on /v3/policies
      operationId: policies:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesGetResponse'
      tags:
        - policies
    post:
      description: |-
        POST operation on /v3/policies
      operationId: policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPostResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies
      operationId: policies:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_policy_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointsGetResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointPutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_service_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServiceGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicePutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_service_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_region_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: 
        policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionPutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/projects/{project_id}:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
    get:
      description: |-
        Get project or list projects.

        GET/HEAD /v3/projects
        GET/HEAD /v3/projects/{project_id}
      operationId: projects/project_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      tags:
        - projects
    delete:
      description: |-
        Delete project.

        DELETE /v3/projects/{project_id}
      operationId: projects/project_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    patch:
      description: |-
        Update project.

        PATCH /v3/projects/{project_id}
      operationId: projects/project_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      tags:
        - projects
    head:
      description: |-
        Get project or list projects.

        GET/HEAD /v3/projects
        GET/HEAD /v3/projects/{project_id}
      operationId: projects/project_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects:
    get:
      parameters:
        - $ref: '#/components/parameters/project_domain_id'
        - $ref: '#/components/parameters/project_enabled'
        - $ref: '#/components/parameters/project_is_domain'
        - $ref: '#/components/parameters/project_name'
        - $ref: '#/components/parameters/project_parent_id'
      description: |-
        Get project or list projects.

        GET/HEAD /v3/projects
        GET/HEAD /v3/projects/{project_id}
      operationId: projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGetResponse'
      tags:
        - projects
    post:
      description: |-
        Create project.

        POST /v3/projects
      operationId: projects:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      tags:
        - projects
    head:
      description: |-
        Get project or list projects.

        GET/HEAD /v3/projects
        GET/HEAD /v3/projects/{project_id}
      operationId: projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/tags:
    parameters:
      - $ref: '#/components/parameters/projects_tags_project_id'
    get:
      description: |-
        List tags associated with a given project.

        GET /v3/projects/{project_id}/tags
      operationId: projects/project_id/tags:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagsGetResponse'
      tags:
        - projects
    delete:
      description: |-
        Delete all tags associated with a given project.

        DELETE /v3/projects/{project_id}/tags
      operationId: projects/project_id/tags:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    put:
      description: |-
        Update all tags associated with a given project.

        PUT /v3/projects/{project_id}/tags
      operationId: projects/project_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsTagsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagsPutResponse'
      tags:
        - projects
    head:
      description: |-
        List tags associated with a given project.

        GET /v3/projects/{project_id}/tags
      operationId: projects/project_id/tags:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/tags/{value}:
    parameters:
      - $ref: '#/components/parameters/projects_tags_project_id'
      - $ref: '#/components/parameters/projects_tags_value'
    get:
      description: |-
        Get information for a single tag associated with a given project.

        GET /v3/projects/{project_id}/tags/{value}
      operationId: projects/project_id/tags/value:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    delete:
      description: |-
        Delete a single tag from a project.

        /v3/projects/{project_id}/tags/{value}
      operationId: projects/project_id/tags/value:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    put:
      description: |-
        Add a single tag to a project.

        PUT /v3/projects/{project_id}/tags/{value}
      operationId: projects/project_id/tags/value:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsTagPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagPutResponse'
      tags:
        - projects
    head:
      description: |-
        Get information for a single tag associated with a given project.

        GET /v3/projects/{project_id}/tags/{value}
      operationId: projects/project_id/tags/value:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/projects_users_roles_project_id'
      - $ref: '#/components/parameters/projects_users_roles_user_id'
      - $ref: '#/components/parameters/projects_users_roles_role_id'
    get:
      description: |-
        Check grant for project, user, role.

        GET/HEAD /v3/projects/{project_id/users/{user_id}/roles/{role_id}
      operationId: projects/project_id/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    delete:
      description: |-
        Delete grant of role for user on project.

        DELETE /v3/projects/{project_id}/users/{user_id}/roles/{role_id}
      operationId: projects/project_id/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    put:
      description: |-
        Grant role for user on project.

        PUT /v3/projects/{project_id}/users/{user_id}/roles/{role_id}
      operationId: projects/project_id/users/user_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    head:
      description: |-
        Check grant for project, user, role.

        GET/HEAD /v3/projects/{project_id/users/{user_id}/roles/{role_id}
      operationId: projects/project_id/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/projects_users_roles_project_id'
      - $ref: '#/components/parameters/projects_users_roles_user_id'
    get:
      description: |-
        List grants for user on project.

        GET/HEAD /v3/projects/{project_id}/users/{user_id}
      operationId: projects/project_id/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - projects
    head:
      description: |-
        List grants for user on project.

        GET/HEAD /v3/projects/{project_id}/users/{user_id}
      operationId: projects/project_id/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/projects_groups_roles_project_id'
      - $ref: '#/components/parameters/projects_groups_roles_group_id'
      - $ref: '#/components/parameters/projects_groups_roles_role_id'
    get:
      description: |-
        Check grant for project, group, role.

        GET/HEAD /v3/projects/{project_id/groups/{group_id}/roles/{role_id}
      operationId: projects/project_id/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
    delete:
      description: |-
        Delete grant of role for group on project.

        DELETE /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}
      operationId: projects/project_id/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    put:
      description: |-
        Grant role for group on project.

        PUT /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}
      operationId: projects/project_id/groups/group_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - projects
    head:
      description: |-
        Check grant for project, group, role.

        GET/HEAD /v3/projects/{project_id/groups/{group_id}/roles/{role_id}
      operationId: projects/project_id/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/projects_groups_roles_project_id'
      - $ref: '#/components/parameters/projects_groups_roles_group_id'
    get:
      description: |-
        List grants for group on project.

        GET/HEAD /v3/projects/{project_id}/groups/{group_id}
      operationId: projects/project_id/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - projects
    head:
      description: |-
        List grants for group on project.

        GET/HEAD /v3/projects/{project_id}/groups/{group_id}
      operationId: projects/project_id/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/regions/{region_id}:
    parameters:
      - $ref: '#/components/parameters/regions_region_id'
    get:
      description: |-
        GET operation on /v3/regions/{region_id}
      operationId: regions/region_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      tags:
        - regions
    delete:
      description: |-
        DELETE operation on /v3/regions/{region_id}
      operationId: regions/region_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - regions
    put:
      description: |-
        PUT operation on /v3/regions/{region_id}
      operationId: regions/region_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionPutResponse'
      tags:
        - regions
    patch:
      description: |-
        PATCH operation on /v3/regions/{region_id}
      operationId: regions/region_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      tags:
        - regions
    head:
      description: |-
        HEAD operation on /v3/regions/{region_id}
      operationId: regions/region_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - regions
  /v3/regions:
    get:
      parameters:
        - $ref: '#/components/parameters/region_parent_region_id'
      description: |-
        GET operation on /v3/regions
      operationId: regions:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsGetResponse'
      tags:
        - regions
    post:
      description: |-
        POST operation on /v3/regions
      operationId: regions:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      tags:
        - regions
    head:
      description: |-
        HEAD operation on /v3/regions
      operationId: regions:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - regions
  /v3/registered_limits/{registered_limit_id}:
    parameters:
      - $ref: '#/components/parameters/registered_limits_registered_limit_id'
    get:
      description: |-
        GET operation on /v3/registered_limits/{registered_limit_id}
      operationId: registered_limits/registered_limit_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitGetResponse'
      tags:
        - registered_limits
    delete:
      description: |-
        DELETE operation on /v3/registered_limits/{registered_limit_id}
      operationId: registered_limits/registered_limit_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - registered_limits
    patch:
      description: |-
        PATCH operation on /v3/registered_limits/{registered_limit_id}
      operationId: registered_limits/registered_limit_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registered_LimitPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitPatchResponse'
      tags:
        - registered_limits
    head:
      description: |-
        HEAD operation on /v3/registered_limits/{registered_limit_id}
      operationId: registered_limits/registered_limit_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - registered_limits
  /v3/registered_limits:
    get:
      description: |-
        GET operation on /v3/registered_limits
      operationId: registered_limits:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitsGetResponse'
      tags:
        - registered_limits
    post:
      description: |-
        POST operation on /v3/registered_limits
      operationId: registered_limits:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registered_LimitsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitsPostResponse'
      tags:
        - registered_limits
    head:
      description: |-
        HEAD operation on /v3/registered_limits
      operationId: registered_limits:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - registered_limits
  /v3/role_assignments:
    get:
      parameters:
        - $ref: '#/components/parameters/role_assignment_group_id'
        - $ref: '#/components/parameters/role_assignment_role_id'
        - $ref: '#/components/parameters/role_assignment_user_id'
        - $ref: '#/components/parameters/role_assignment_scope_domain_id'
        - $ref: '#/components/parameters/role_assignment_scope_project_id'
        - $ref: '#/components/parameters/role_assignment_inherit'
        - $ref: '#/components/parameters/role_assignment_effective'
        - $ref: '#/components/parameters/role_assignment_include_names'
        - $ref: '#/components/parameters/role_assignment_include_subtree'
      description: |-
        List all role assignments.

        GET/HEAD /v3/role_assignments
      operationId: role_assignments:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role_AssignmentsGetResponse'
      tags:
        - role_assignments
    head:
      parameters:
        - $ref: '#/components/parameters/role_assignment_group_id'
        - $ref: '#/components/parameters/role_assignment_role_id'
        - $ref: '#/components/parameters/role_assignment_user_id'
        - $ref: '#/components/parameters/role_assignment_scope_domain_id'
        - $ref: '#/components/parameters/role_assignment_scope_project_id'
        - $ref: '#/components/parameters/role_assignment_inherit'
      description: |-
        List all role assignments.

        GET/HEAD /v3/role_assignments
      operationId: role_assignments:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - role_assignments
  /v3/role_inferences:
    get:
      description: |-
        List role inference rules.

        GET/HEAD /v3/role_inferences
      operationId: role_inferences:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role_InferencesGetResponse'
      tags:
        - role_inferences
    head:
      description: |-
        List role inference rules.

        GET/HEAD /v3/role_inferences
      operationId: role_inferences:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - role_inferences
  /v3/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/roles_role_id'
    get:
      description: |-
        Get role or list roles.

        GET/HEAD /v3/roles
        GET/HEAD /v3/roles/{role_id}
      operationId: roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      tags:
        - roles
    delete:
      description: |-
        Delete role.

        DELETE /v3/roles/{role_id}
      operationId: roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
    patch:
      description: |-
        Update role.

        PATCH /v3/roles/{role_id}
      operationId: roles/role_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      tags:
        - roles
    head:
      description: |-
        Get role or list roles.

        GET/HEAD /v3/roles
        GET/HEAD /v3/roles/{role_id}
      operationId: roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles:
    get:
      parameters:
        - $ref: '#/components/parameters/role_domain_id'
      description: |-
        Get role or list roles.

        GET/HEAD /v3/roles
        GET/HEAD /v3/roles/{role_id}
      operationId: roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetResponse'
      tags:
        - roles
    post:
      description: |-
        Create role.

        POST /v3/roles
      operationId: roles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      tags:
        - roles
    head:
      description: |-
        Get role or list roles.

        GET/HEAD /v3/roles
        GET/HEAD /v3/roles/{role_id}
      operationId: roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{prior_role_id}/implies:
    parameters:
      - $ref: '#/components/parameters/roles_implies_prior_role_id'
    get:
      description: |-
        List Implied Roles.

        GET/HEAD /v3/roles/{prior_role_id}/implies
      operationId: roles/prior_role_id/implies:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImpliesGetResponse'
      tags:
        - roles
    head:
      description: |-
        List Implied Roles.

        GET/HEAD /v3/roles/{prior_role_id}/implies
      operationId: roles/prior_role_id/implies:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{prior_role_id}/implies/{implied_role_id}:
    parameters:
      - $ref: '#/components/parameters/roles_implies_prior_role_id'
      - $ref: '#/components/parameters/roles_implies_implied_role_id'
    get:
      description: |-
        Get implied role.

        GET/HEAD /v3/roles/{prior_role_id}/implies/{implied_role_id}
      operationId: roles/prior_role_id/implies/implied_role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImplyGetResponse'
      tags:
        - roles
    delete:
      description: |-
        Delete implied role.

        DELETE /v3/roles/{prior_role_id}/implies/{implied_role_id}
      operationId: roles/prior_role_id/implies/implied_role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
    put:
      description: |-
        Create implied role.

        PUT /v3/roles/{prior_role_id}/implies/{implied_role_id}
      operationId: roles/prior_role_id/implies/implied_role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesImplyPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImplyPutResponse'
      tags:
        - roles
    head:
      description: |-
        Get implied role.

        GET/HEAD /v3/roles/{prior_role_id}/implies/{implied_role_id}
      operationId: roles/prior_role_id/implies/implied_role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/s3tokens:
    get:
      description: |-
        GET operation on /v3/s3tokens
      operationId: s3tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3TokensGetResponse'
      tags:
        - s3tokens
    post:
      description: |-
        Authenticate s3token.

        POST /v3/s3tokens
      operationId: s3tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3TokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3TokensPostResponse'
      tags:
        - s3tokens
    head:
      description: |-
        HEAD operation on /v3/s3tokens
      operationId: s3tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - s3tokens
  /v3/services/{service_id}:
    parameters:
      - $ref: '#/components/parameters/services_service_id'
    get:
      description: |-
        GET operation on /v3/services/{service_id}
      operationId: services/service_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      tags:
        - services
    delete:
      description: |-
        DELETE operation on /v3/services/{service_id}
      operationId: services/service_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - services
    patch:
      description: |-
        PATCH operation on /v3/services/{service_id}
      operationId: services/service_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      tags:
        - services
    head:
      description: |-
        HEAD operation on /v3/services/{service_id}
      operationId: services/service_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - services
  /v3/services:
    get:
      parameters:
        - $ref: '#/components/parameters/service_type'
      description: |-
        GET operation on /v3/services
      operationId: services:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesGetResponse'
      tags:
        - services
    post:
      description: |-
        POST operation on /v3/services
      operationId: services:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      tags:
        - services
    head:
      description: |-
        HEAD operation on /v3/services
      operationId: services:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - services
  /v3/system/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/system_users_roles_user_id'
    get:
      description: |-
        List all system grants for a specific user.

        GET/HEAD /system/users/{user_id}/roles
      operationId: system/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRolesGetResponse'
      tags:
        - system
    head:
      description: |-
        List all system grants for a specific user.

        GET/HEAD /system/users/{user_id}/roles
      operationId: system/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/system_users_roles_user_id'
      - $ref: '#/components/parameters/system_users_roles_role_id'
    get:
      description: |-
        Check if a user has a specific role on the system.

        GET/HEAD /system/users/{user_id}/roles/{role_id}
      operationId: system/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRoleGetResponse'
      tags:
        - system
    delete:
      description: |-
        Revoke a role from user on the system.

        DELETE /system/users/{user_id}/roles/{role_id}
      operationId: system/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - system
    put:
      description: |-
        Grant a role to a user on the system.

        PUT /system/users/{user_id}/roles/{role_id}
      operationId: system/users/user_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUsersRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRolePutResponse'
      tags:
        - system
    head:
      description: |-
        Check if a user has a specific role on the system.

        GET/HEAD /system/users/{user_id}/roles/{role_id}
      operationId: system/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/system_groups_roles_group_id'
    get:
      description: |-
        List all system grants for a specific group.

        GET/HEAD /system/groups/{group_id}/roles
      operationId: system/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRolesGetResponse'
      tags:
        - system
    head:
      description: |-
        List all system grants for a specific group.

        GET/HEAD /system/groups/{group_id}/roles
      operationId: system/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/system_groups_roles_group_id'
      - $ref: '#/components/parameters/system_groups_roles_role_id'
    get:
      description: |-
        Check if a group has a specific role on the system.

        GET/HEAD /system/groups/{group_id}/roles/{role_id}
      operationId: system/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRoleGetResponse'
      tags:
        - system
    delete:
      description: |-
        Revoke a role from the group on the system.

        DELETE /system/groups/{group_id}/roles/{role_id}
      operationId: system/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - system
    put:
      description: |-
        Grant a role to a group on the system.

        PUT /system/groups/{group_id}/roles/{role_id}
      operationId: system/groups/group_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemGroupsRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRolePutResponse'
      tags:
        - system
    head:
      description: |-
        Check if a group has a specific role on the system.

        GET/HEAD /system/groups/{group_id}/roles/{role_id}
      operationId: system/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/OS-TRUST/trusts/{trust_id}:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_trust_id'
    get:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts/trust_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustGetResponse'
      tags:
        - OS-TRUST
    delete:
      description: |-
        DELETE operation on /v3/OS-TRUST/trusts/{trust_id}
      operationId: OS-TRUST/trusts/trust_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-TRUST
    head:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts/trust_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts:
    get:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsGetResponse'
      tags:
        - OS-TRUST
    post:
      description: |-
        Create a new trust.

        The User creating the trust must be the trustor.
      operationId: OS-TRUST/trusts:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_TrustTrustsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsPostResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}/roles:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_trust_id'
    get:
      description: |-
        GET operation on /v3/OS-TRUST/trusts/{trust_id}/roles
      operationId: OS-TRUST/trusts/trust_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsRolesGetResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        HEAD operation on /v3/OS-TRUST/trusts/{trust_id}/roles
      operationId: OS-TRUST/trusts/trust_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_trust_id'
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_role_id'
    get:
      description: |-
        Get a role that has been assigned to a trust.
      operationId: OS-TRUST/trusts/trust_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsRoleGetResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        Get a role that has been assigned to a trust.
      operationId: OS-TRUST/trusts/trust_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |-
        Get a user resource or list users.

        GET/HEAD /v3/users
        GET/HEAD /v3/users/{user_id}
      operationId: users/user_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete a user.

        DELETE /v3/users/{user_id}
      operationId: users/user_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    patch:
      description: |-
        Update a user.

        PATCH /v3/users/{user_id}
      operationId: users/user_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPatchResponse'
      tags:
        - users
    head:
      description: |-
        Get a user resource or list users.

        GET/HEAD /v3/users
        GET/HEAD /v3/users/{user_id}
      operationId: users/user_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users:
    get:
      parameters:
        - $ref: '#/components/parameters/domain_id'
        - $ref: '#/components/parameters/enabled'
        - $ref: '#/components/parameters/idp_id'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/password_expires_at'
        - $ref: '#/components/parameters/protocol_id'
        - $ref: '#/components/parameters/unique_id'
      description: |-
        Get a user resource or list users.

        GET/HEAD /v3/users
        GET/HEAD /v3/users/{user_id}
      operationId: users:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetResponse'
      tags:
        - users
    post:
      description: |-
        Create a user.

        POST /v3/users
      operationId: users:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPostResponse'
      tags:
        - users
    head:
      description: |-
        Get a user resource or list users.

        GET/HEAD /v3/users
        GET/HEAD /v3/users/{user_id}
      operationId: users:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/password:
    parameters:
      - $ref: '#/components/parameters/users_password_user_id'
    post:
      description: |-
        POST operation on /v3/users/{user_id}/password
      operationId: users/user_id/password:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPasswordPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/groups:
    parameters:
      - $ref: '#/components/parameters/users_groups_user_id'
    get:
      description: |-
        Get groups for a user.

        GET/HEAD /v3/users/{user_id}/groups
      operationId: users/user_id/groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGroupsGetResponse'
      tags:
        - users
    head:
      description: |-
        Get groups for a user.

        GET/HEAD /v3/users/{user_id}/groups
      operationId: users/user_id/groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/projects:
    parameters:
      - $ref: '#/components/parameters/users_projects_user_id'
    get:
      description: |-
        GET operation on /v3/users/{user_id}/projects
      operationId: users/user_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersProjectsGetResponse'
      tags:
        - users
    head:
      description: |-
        HEAD operation on /v3/users/{user_id}/projects
      operationId: users/user_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/credentials/OS-EC2:
    parameters:
      - $ref: '#/components/parameters/users_credentials_OS_EC2_user_id'
    get:
      description: |-
        List EC2 Credentials for user.

        GET/HEAD /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2GetResponse'
      tags:
        - users
    post:
      description: |-
        Create EC2 Credential for user.

        POST /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersCredentialsOs_Ec2PostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2PostResponse'
      tags:
        - users
    head:
      description: |-
        List EC2 Credentials for user.

        GET/HEAD /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/credentials/OS-EC2/{credential_id}:
    parameters:
      - $ref: '#/components/parameters/users_credentials_OS_EC2_user_id'
      - $ref: '#/components/parameters/users_credentials_OS_EC2_credential_id'
    get:
      description: |-
        Get a specific EC2 credential.

        GET/HEAD /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2GetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete a specific EC2 credential.

        DELETE /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get a specific EC2 credential.

        GET/HEAD /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_user_id'
    get:
      description: |-
        List OAuth1 Access Tokens for user.

        GET /v3/users/{user_id}/OS-OAUTH1/access_tokens
      operationId: users/user_id/OS-OAUTH1/access_tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensGetResponse'
      tags:
        - users
    head:
      description: |-
        List OAuth1 Access Tokens for user.

        GET /v3/users/{user_id}/OS-OAUTH1/access_tokens
      operationId: users/user_id/OS-OAUTH1/access_tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_access_token_id'
    get:
      description: |-
        Get specific access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokenGetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete specific access token.

        DELETE /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get specific access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_access_token_id'
    get:
      description: |-
        List roles for a user access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensRolesGetResponse'
      tags:
        - users
    head:
      description: |-
        List roles for a user access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_access_token_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_role_id'
    get:
      description: |-
        Get role for access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles/{role_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensRoleGetResponse'
      tags:
        - users
    head:
      description: |-
        Get role for access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles/{role_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/application_credentials:
    parameters:
      - $ref: '#/components/parameters/users_application_credentials_user_id'
    get:
      parameters:
        - $ref: '#/components/parameters/application_credentials_name'
      description: |-
        List application credentials for user.

        GET/HEAD /v3/users/{user_id}/application_credentials
      operationId: users/user_id/application_credentials:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialsGetResponse'
      tags:
        - users
    post:
      description: |-
        Create application credential.

        POST /v3/users/{user_id}/application_credentials
      operationId: users/user_id/application_credentials:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersApplication_CredentialsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialsPostResponse'
      tags:
        - users
    head:
      description: |-
        List application credentials for user.

        GET/HEAD /v3/users/{user_id}/application_credentials
      operationId: users/user_id/application_credentials:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/application_credentials/{application_credential_id}:
    parameters:
      - $ref: '#/components/parameters/users_application_credentials_user_id'
      - $ref: '#/components/parameters/users_application_credentials_application_credential_id'
    get:
      description: |-
        Get application credential resource.

        GET/HEAD /v3/users/{user_id}/application_credentials/
                 {application_credential_id}
      operationId: users/user_id/application_credentials/application_credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialGetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete application credential resource.

        DELETE /v3/users/{user_id}/application_credentials/
               {application_credential_id}
      operationId: users/user_id/application_credentials/application_credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get application credential resource.

        GET/HEAD /v3/users/{user_id}/application_credentials/
                 {application_credential_id}
      operationId: users/user_id/application_credentials/application_credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/access_rules:
    parameters:
      - $ref: '#/components/parameters/users_access_rules_user_id'
    get:
      description: |-
        List access rules for user.

        GET/HEAD /v3/users/{user_id}/access_rules
      operationId: users/user_id/access_rules:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAccess_RulesGetResponse'
      tags:
        - users
    head:
      description: |-
        List access rules for user.

        GET/HEAD /v3/users/{user_id}/access_rules
      operationId: users/user_id/access_rules:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/access_rules/{access_rule_id}:
    parameters:
      - $ref: '#/components/parameters/users_access_rules_user_id'
      - $ref: '#/components/parameters/users_access_rules_access_rule_id'
    get:
      description: |-
        Get access rule resource.

        GET/HEAD /v3/users/{user_id}/access_rules/{access_rule_id}
      operationId: users/user_id/access_rules/access_rule_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAccess_RuleGetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete access rule resource.

        DELETE /v3/users/{user_id}/access_rules/{access_rule_id}
      operationId: users/user_id/access_rules/access_rule_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get access rule resource.

        GET/HEAD /v3/users/{user_id}/access_rules/{access_rule_id}
      operationId: users/user_id/access_rules/access_rule_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
components:
  schemas:
    RootGetResponse:
      type: object
      description: Response of the versions:get operation
    AuthProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              domain_id:
                type: string
                format: uuid
                description: The ID of the domain for the project.
              id:
                type: string
                format: uuid
                description: The ID of the project.
              name:
                type: string
                description: The name of the project
              enabled:
                type: boolean
                description: If set to true, project is enabled. If set to false,
                  project is disabled.
              links:
                type: array
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    Os_FederationProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              domain_id:
                type: string
                format: uuid
                description: The ID of the domain for the project.
              id:
                type: string
                format: uuid
                description: The ID of the project.
              name:
                type: string
                description: The name of the project
              enabled:
                type: boolean
                description: If set to true, project is enabled. If set to false,
                  project is disabled.
              links:
                type: array
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    AuthDomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The ID of the domain.
              name:
                type: string
                description: The name of the domain
              description:
                type: string
                description: The description of the domain.
              enabled:
                type: boolean
                description: If set to true, domain is enabled. If set to false, domain
                  is disabled.
              links:
                type: array
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    Os_FederationDomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The ID of the domain.
              name:
                type: string
                description: The name of the domain
              description:
                type: string
                description: The description of the domain.
              enabled:
                type: boolean
                description: If set to true, domain is enabled. If set to false, domain
                  is disabled.
              links:
                type: array
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    AuthSystemGetResponse:
      type: object
      properties:
        system:
          type: array
          description: A list of systems to access based on role assignments.
          items:
            type: object
            additionalProperties:
              type: boolean
    AuthCatalogGetResponse:
      type: object
      properties:
        catalog:
          type: array
          items:
            type: object
            properties:
              endpoints:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The endpoint UUID
                    interface:
                      type: string
                      enum:
                        - public
                        - internal
                        - admin
                    region:
                      type: string
                      description: Region name of the endpoint
                    url:
                      type: string
                      format: uri
                      description: The endpoint url
              id:
                type: string
                format: uuid
                description: The UUID of the service to which the endpoint belongs.
              type:
                type: string
                description: The service type, which describes the API implemented
                  by the service
              name:
                type: string
                description: The service name.
    AuthTokensOs_PkiRevokedGetResponse:
      type: object
      description: Response of the auth/tokens/OS-PKI/revoked:get operation
    AuthTokensGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
            is_domain:
              type: boolean
            domain:
              type: object
              description: A domain object including the id and name representing
                the domain the token is scoped to. This is only included in tokens
                that are scoped to a domain.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A domain UUID
                name:
                  type: string
                  description: A domain name
            project:
              type: object
              description: A project object including the id, name and domain object
                representing the project the token is scoped to. This is only included
                in tokens that are scoped to a project.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user domain UUID
                name:
                  type: string
                  description: A user domain name
            roles:
              type: array
              description: A list of role objects
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: A role UUID
                  name:
                    type: string
                    description: A role name
            system:
              type: object
              description: 'A system object containing information about which parts
                of the system the token is scoped to. If the token is scoped to the
                entire deployment system, the system object will consist of {"all":
                true}. This is only included in tokens that are scoped to the system.'
              additionalProperties:
                type: boolean
    AuthTokensPostRequest:
      type: object
      properties:
        auth:
          type: object
          description: An auth object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                methods:
                  type: array
                  description: The authentication method.
                  items:
                    type: string
                    enum:
                      - password
                      - token
                      - totp
                      - application_credential
                password:
                  type: object
                  description: The password object, contains the authentication information.
                  properties:
                    user:
                      type: object
                      description: A `user` object
                      properties:
                        id:
                          type: string
                          description: User ID
                        name:
                          type: string
                          description: User Name
                        password:
                          type: string
                          format: password
                          description: User Password
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                token:
                  type: object
                  description: A `token` object
                  properties:
                    id:
                      type: string
                      format: password
                      description: Authorization Token value
                  required:
                    - id
                totp:
                  type: object
                  description: Multi Factor Authentication information
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                        passcode:
                          type: string
                          format: password
                          description: MFA passcode
                      required:
                        - passcode
                  required:
                    - user
                application_credential:
                  type: object
                  description: An application credential object.
                  properties:
                    id:
                      type: string
                      descripion: The ID of the application credential used for authentication.
                        If not provided, the application credential must be identified
                        by its name and its owning user.
                    name:
                      type: string
                      descripion: The name of the application credential used for
                        authentication. If provided, must be accompanied by a user
                        object.
                    secret:
                      type: string
                      format: password
                      description: The secret for authenticating the application credential.
                    user:
                      type: object
                      description: A user object, required if an application credential
                        is identified by name and not ID.
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                  required:
                    - secret
              required:
                - methods
            scope:
              type: object
              description: The authorization scope, including the system (Since v3.10),
                a project, or a domain (Since v3.4). If multiple scopes are specified
                in the same request (e.g. project and domain or domain and system)
                an HTTP 400 Bad Request will be returned, as a token cannot be simultaneously
                scoped to multiple authorization targets. An ID is sufficient to uniquely
                identify a project but if a project is specified by name, then the
                domain of the project must also be specified in order to uniquely
                identify the project by name. A domain scope may be specified by either
                the domain’s ID or name with equivalent results.
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Project Name
                    id:
                      type: string
                      description: Project Id
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project domain Id
                        name:
                          type: string
                          description: Project domain Name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Domain id
                    name:
                      type: string
                      description: Domain name
                OS-TRUST:trust:
                  type: object
                  properties:
                    id:
                      type: string
                system:
                  type: object
                  properties:
                    all:
                      type: boolean
          required:
            - identity
      definitions:
        user_domain:
          type: object
          description: User Domain object
          properties:
            id:
              type: string
              description: User Domain ID
            name:
              type: string
              description: User Domain Name
    AuthTokensPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
            is_domain:
              type: boolean
            domain:
              type: object
              description: A domain object including the id and name representing
                the domain the token is scoped to. This is only included in tokens
                that are scoped to a domain.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A domain UUID
                name:
                  type: string
                  description: A domain name
            project:
              type: object
              description: A project object including the id, name and domain object
                representing the project the token is scoped to. This is only included
                in tokens that are scoped to a project.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user domain UUID
                name:
                  type: string
                  description: A user domain name
            roles:
              type: array
              description: A list of role objects
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: A role UUID
                  name:
                    type: string
                    description: A role name
            system:
              type: object
              description: 'A system object containing information about which parts
                of the system the token is scoped to. If the token is scoped to the
                entire deployment system, the system object will consist of {"all":
                true}. This is only included in tokens that are scoped to the system.'
              additionalProperties:
                type: boolean
    AuthReceiptSchema:
      type: object
      properties:
        receipt:
          type: object
          properties:
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
        required_auth_methods:
          type: array
          items:
            type: string
          description: A list of authentication rules that may be used with the auth
            receipt to complete the authentication process.
    AuthOs_FederationSaml2GetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2:get operation
    AuthOs_FederationSaml2PostRequest:
      type: object
      properties:
        auth:
          type: object
          description: An auth object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                methods:
                  type: array
                  description: The authentication method.
                  items:
                    type: string
                    enum:
                      - password
                      - token
                      - totp
                      - application_credential
                password:
                  type: object
                  description: The password object, contains the authentication information.
                  properties:
                    user:
                      type: object
                      description: A `user` object
                      properties:
                        id:
                          type: string
                          description: User ID
                        name:
                          type: string
                          description: User Name
                        password:
                          type: string
                          format: password
                          description: User Password
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                token:
                  type: object
                  description: A `token` object
                  properties:
                    id:
                      type: string
                      format: password
                      description: Authorization Token value
                  required:
                    - id
                totp:
                  type: object
                  description: Multi Factor Authentication information
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                        passcode:
                          type: string
                          format: password
                          description: MFA passcode
                      required:
                        - passcode
                  required:
                    - user
                application_credential:
                  type: object
                  description: An application credential object.
                  properties:
                    id:
                      type: string
                      descripion: The ID of the application credential used for authentication.
                        If not provided, the application credential must be identified
                        by its name and its owning user.
                    name:
                      type: string
                      descripion: The name of the application credential used for
                        authentication. If provided, must be accompanied by a user
                        object.
                    secret:
                      type: string
                      format: password
                      description: The secret for authenticating the application credential.
                    user:
                      type: object
                      description: A user object, required if an application credential
                        is identified by name and not ID.
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                  required:
                    - secret
              required:
                - methods
            scope:
              type: object
              description: The authorization scope, including the system (Since v3.10),
                a project, or a domain (Since v3.4). If multiple scopes are specified
                in the same request (e.g. project and domain or domain and system)
                an HTTP 400 Bad Request will be returned, as a token cannot be simultaneously
                scoped to multiple authorization targets. An ID is sufficient to uniquely
                identify a project but if a project is specified by name, then the
                domain of the project must also be specified in order to uniquely
                identify the project by name. A domain scope may be specified by either
                the domain’s ID or name with equivalent results.
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Project Name
                    id:
                      type: string
                      description: Project Id
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project domain Id
                        name:
                          type: string
                          description: Project domain Name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Domain id
                    name:
                      type: string
                      description: Domain name
                OS-TRUST:trust:
                  type: object
                  properties:
                    id:
                      type: string
                system:
                  type: object
                  properties:
                    all:
                      type: boolean
          required:
            - identity
      definitions:
        user_domain:
          type: object
          description: User Domain object
          properties:
            id:
              type: string
              description: User Domain ID
            name:
              type: string
              description: User Domain Name
    AuthOs_FederationSaml2PostResponse:
      type: string
      format: xml
      descripion: SAML assertion in XML format
    AuthOs_FederationSaml2EcpGetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2/ecp:get operation
    AuthOs_FederationSaml2EcpPostRequest:
      type: object
      properties:
        auth:
          type: object
          description: An auth object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                methods:
                  type: array
                  description: The authentication method.
                  items:
                    type: string
                    enum:
                      - password
                      - token
                      - totp
                      - application_credential
                password:
                  type: object
                  description: The password object, contains the authentication information.
                  properties:
                    user:
                      type: object
                      description: A `user` object
                      properties:
                        id:
                          type: string
                          description: User ID
                        name:
                          type: string
                          description: User Name
                        password:
                          type: string
                          format: password
                          description: User Password
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                token:
                  type: object
                  description: A `token` object
                  properties:
                    id:
                      type: string
                      format: password
                      description: Authorization Token value
                  required:
                    - id
                totp:
                  type: object
                  description: Multi Factor Authentication information
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                        passcode:
                          type: string
                          format: password
                          description: MFA passcode
                      required:
                        - passcode
                  required:
                    - user
                application_credential:
                  type: object
                  description: An application credential object.
                  properties:
                    id:
                      type: string
                      descripion: The ID of the application credential used for authentication.
                        If not provided, the application credential must be identified
                        by its name and its owning user.
                    name:
                      type: string
                      descripion: The name of the application credential used for
                        authentication. If provided, must be accompanied by a user
                        object.
                    secret:
                      type: string
                      format: password
                      description: The secret for authenticating the application credential.
                    user:
                      type: object
                      description: A user object, required if an application credential
                        is identified by name and not ID.
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: User Domain object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                  required:
                    - secret
              required:
                - methods
            scope:
              type: object
              description: The authorization scope, including the system (Since v3.10),
                a project, or a domain (Since v3.4). If multiple scopes are specified
                in the same request (e.g. project and domain or domain and system)
                an HTTP 400 Bad Request will be returned, as a token cannot be simultaneously
                scoped to multiple authorization targets. An ID is sufficient to uniquely
                identify a project but if a project is specified by name, then the
                domain of the project must also be specified in order to uniquely
                identify the project by name. A domain scope may be specified by either
                the domain’s ID or name with equivalent results.
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Project Name
                    id:
                      type: string
                      description: Project Id
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project domain Id
                        name:
                          type: string
                          description: Project domain Name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Domain id
                    name:
                      type: string
                      description: Domain name
                OS-TRUST:trust:
                  type: object
                  properties:
                    id:
                      type: string
                system:
                  type: object
                  properties:
                    all:
                      type: boolean
          required:
            - identity
      definitions:
        user_domain:
          type: object
          description: User Domain object
          properties:
            id:
              type: string
              description: User Domain ID
            name:
              type: string
              description: User Domain Name
    AuthOs_FederationSaml2EcpPostResponse:
      type: string
      format: xml
      descripion: SAML assertion in XML format
    AuthOs_FederationWebssoGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    AuthOs_FederationWebssoPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    CredentialGetResponse:
      type: object
      description: Response of the credentials/credential_id:get operation
    CredentialPatchRequest:
      type: object
      description: Request of the credentials/credential_id:patch operation
      x-openstack:
        action-name: PATCH
    CredentialPatchResponse:
      type: object
      description: Response of the credentials/credential_id:patch operation
    CredentialsGetResponse:
      type: object
      description: Response of the credentials:get operation
    CredentialsPostRequest:
      type: object
      description: Request of the credentials:post operation
      x-openstack:
        action-name: POST
    CredentialsPostResponse:
      type: object
      description: Response of the credentials:post operation
    Domain:
      type: object
      properties:
        domain:
          type: object
          description: A domain object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            name:
              type: string
              description: The name of the domain.
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            description:
              type: string
              description: The description of the domain.
            enabled:
              type: boolean
              description: If set to true, domain is enabled. If set to false, domain
                is disabled.
            tags:
              type: array
              items:
                type: string
                pattern: ^[^,/]*$
                minLength: 1
                maxLength: 255
            options:
              type: object
              description: The resource options for the domain. Available resource
                options are immutable.
    DomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            description: A domain object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              name:
                type: string
                description: The name of the domain.
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
                description: The description of the domain.
              enabled:
                type: boolean
                description: If set to true, domain is enabled. If set to false, domain
                  is disabled.
              tags:
                type: array
                items:
                  type: string
                  pattern: ^[^,/]*$
                  minLength: 1
                  maxLength: 255
              options:
                type: object
                description: The resource options for the domain. Available resource
                  options are immutable.
    DomainConfig:
      type: object
      properties:
        config:
          type: object
          description: A config object.
          additionalProperties:
            type: object
            additionalProperties: true
    DomainConfigGroup:
      type: object
      properties:
        config:
          type: object
          description: A config object.
          additionalProperties:
            type: object
            additionalProperties: true
          maxProperties: 1
    DomainConfigGroupOption:
      type: object
      properties:
        config:
          type: object
          additionalProperties: true
          maxProperties: 1
    RolesInfos:
      type: object
      description: List of roles assigned to the resource
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The role ID.
              name:
                type: string
                description: The role name.
              description:
                type: string
                description: The role description.
              links:
                type: object
                properties:
                  self:
                    type: string
                    format: uri
                    description: The link to the resource in question.
        links:
          type: object
          additionalProperties:
            type:
              - string
              - 'null'
            format: uri
    Ec2TokensGetResponse:
      type: object
      description: Response of the ec2tokens:get operation
    Ec2TokensPostRequest:
      type: object
      description: Request of the ec2tokens:post operation
      x-openstack:
        action-name: POST
    Ec2TokensPostResponse:
      type: object
      description: Response of the ec2tokens:post operation
    Endpoint:
      type: object
      properties:
        endpoint:
          type: object
          properties:
            enabled:
              type: boolean
              description: Defines whether the service and its endpoints appear in
                the service catalog.
            id:
              type: string
              format: uuid
              description: The UUID of the service to which the endpoint belongs.
              readOnly: true
            interface:
              type: string
              enum:
                - internal
                - admin
                - public
              description: 'The interface type, which describes the visibility of
                the  Value is: - public. Visible by end users on a publicly available
                network interface. - internal. Visible by end users on an unmetered
                internal network interface. - admin. Visible by administrative users
                on a secure network interface.'
            region:
              type: string
              description: The geographic location of the service endpoint.
              x-openstack:
                max-ver: '3.2'
            region_id:
              type: string
              format: uuid
              description: 'The geographic location of the service '
              x-openstack:
                min-ver: '3.2'
            service_id:
              type: string
              format: uuid
              description: The UUID of the service to which the endpoint belongs.
            url:
              type: string
              format: uri
              description: The endpoint URL.
    EndpointPatchRequest:
      type: object
      description: Request of the endpoints/endpoint_id:patch operation
      x-openstack:
        action-name: PATCH
    EndpointsGetResponse:
      type: object
      properties:
        endpoints:
          type: array
          items:
            type: object
            properties:
              enabled:
                type: boolean
                description: Defines whether the service and its endpoints appear
                  in the service catalog.
              id:
                type: string
                format: uuid
                description: The UUID of the service to which the endpoint belongs.
                readOnly: true
              interface:
                type: string
                enum:
                  - internal
                  - admin
                  - public
                description: 'The interface type, which describes the visibility of
                  the  Value is: - public. Visible by end users on a publicly available
                  network interface. - internal. Visible by end users on an unmetered
                  internal network interface. - admin. Visible by administrative users
                  on a secure network interface.'
              region:
                type: string
                description: The geographic location of the service endpoint.
                x-openstack:
                  max-ver: '3.2'
              region_id:
                type: string
                format: uuid
                description: 'The geographic location of the service '
                x-openstack:
                  min-ver: '3.2'
              service_id:
                type: string
                format: uuid
                description: The UUID of the service to which the endpoint belongs.
              url:
                type: string
                format: uri
                description: The endpoint URL.
    EndpointsOs_Endpoint_PolicyPolicyGetResponse:
      type: object
      description: Response of the endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:get
        operation
    Group:
      type: object
      properties:
        group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            description:
              type:
                - string
                - 'null'
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
    GroupsGetResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
    GroupsUsersGetResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              default_project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              enabled:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              federated:
                type: array
                items:
                  type: object
                  properties:
                    idp_id:
                      type: string
                    protocols:
                      type: array
                      items:
                        type: object
                        properties:
                          protocol_id:
                            type: string
                          unique_id:
                            type: string
                        required:
                          - protocol_id
                          - unique_id
                      minItems: 1
                  required:
                    - idp_id
                    - protocols
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              password:
                type:
                  - string
                  - 'null'
              options:
                type: object
                properties:
                  ignore_change_password_upon_first_use:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_password_expiry:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_lockout_failure_attempts:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  lock_password:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_user_inactivity:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  multi_factor_auth_rules:
                    type:
                      - array
                      - 'null'
                    items:
                      type: array
                      items:
                        type: string
                      minItems: 1
                      uniqueItems: true
                    uniqueItems: true
                  multi_factor_auth_enabled:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
    LimitGetResponse:
      type: object
      description: Response of the limits/limit_id:get operation
    LimitPatchRequest:
      type: object
      description: Request of the limits/limit_id:patch operation
      x-openstack:
        action-name: PATCH
    LimitPatchResponse:
      type: object
      description: Response of the limits/limit_id:patch operation
    LimitsGetResponse:
      type: object
      description: Response of the limits:get operation
    LimitsPostRequest:
      type: object
      description: Request of the limits:post operation
      x-openstack:
        action-name: POST
    LimitsPostResponse:
      type: object
      description: Response of the limits:post operation
    LimitsModelGetResponse:
      type: object
      description: Response of the limits/model:get operation
    Os_Ep_FilterEndpoint_GroupGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id:get
        operation
    Os_Ep_FilterEndpoint_GroupPatchRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
        operation
      x-openstack:
        action-name: PATCH
    Os_Ep_FilterEndpoint_GroupPatchResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
        operation
    Os_Ep_FilterEndpoint_GroupsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups:get operation
    Os_Ep_FilterEndpoint_GroupsPostRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups:post operation
      x-openstack:
        action-name: POST
    Os_Ep_FilterEndpoint_GroupsPostResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups:post operation
    Os_Ep_FilterEndpointsProjectsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoints/endpoint_id/projects:get
        operation
    Os_Ep_FilterProjectsEndpointGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:get
        operation
    Os_Ep_FilterProjectsEndpointPutRequest:
      type: object
      description: Request of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
        operation
      x-openstack:
        action-name: PUT
    Os_Ep_FilterProjectsEndpointPutResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
        operation
    Os_Ep_FilterProjectsEndpointsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints:get
        operation
    Os_Ep_FilterProjectsEndpoint_GroupsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoint_groups:get
        operation
    Os_Ep_FilterEndpoint_GroupsEndpointsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectPutRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
        operation
      x-openstack:
        action-name: PUT
    Os_Ep_FilterEndpoint_GroupsProjectPutResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
        operation
    Os_FederationSaml2MetadataGetResponse:
      type: string
      format: xml
      descripion: Identity Provider metadata information in XML format
    Os_FederationIdentity_ProvidersProtocolsAuthGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    Os_FederationIdentity_ProvidersProtocolsAuthPostRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
        operation
      x-openstack:
        action-name: POST
    Os_FederationIdentity_ProvidersProtocolsAuthPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: The endpoint UUID
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    Os_FederationIdentity_ProviderGetResponse:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            id:
              type: string
              description: The Identity Provider unique ID
            description:
              type: string
              description: The Identity Provider description
            domain_id:
              type: string
              format: uuid
              description: The ID of a domain that is associated with the Identity
                Provider.
            authorization_ttl:
              type: integer
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database.
            enabled:
              type: boolean
              description: Whether the Identity Provider is enabled or not
            remote_ids:
              type: array
              description: List of the unique Identity Provider’s remote IDs
              items:
                type: string
    Os_FederationIdentity_ProviderPatchRequest:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            description:
              type:
                - string
                - 'null'
            authorization_ttl:
              type:
                - integer
                - 'null'
              minimum: 0
            remote_ids:
              type:
                - array
                - 'null'
              items:
                type: string
              uniqueItems: true
          minProperties: 1
          additionalProperties: false
    Os_FederationIdentity_ProviderPatchResponse:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            id:
              type: string
              description: The Identity Provider unique ID
            description:
              type: string
              description: The Identity Provider description
            domain_id:
              type: string
              format: uuid
              description: The ID of a domain that is associated with the Identity
                Provider.
            authorization_ttl:
              type: integer
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database.
            enabled:
              type: boolean
              description: Whether the Identity Provider is enabled or not
            remote_ids:
              type: array
              description: List of the unique Identity Provider’s remote IDs
              items:
                type: string
    Os_FederationIdentity_ProviderPutRequest:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            description:
              type:
                - string
                - 'null'
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            authorization_ttl:
              type:
                - integer
                - 'null'
              minimum: 0
            remote_ids:
              type:
                - array
                - 'null'
              items:
                type: string
              uniqueItems: true
          additionalProperties: false
    Os_FederationIdentity_ProviderPutResponse:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            id:
              type: string
              description: The Identity Provider unique ID
            description:
              type: string
              description: The Identity Provider description
            domain_id:
              type: string
              format: uuid
              description: The ID of a domain that is associated with the Identity
                Provider.
            authorization_ttl:
              type: integer
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database.
            enabled:
              type: boolean
              description: Whether the Identity Provider is enabled or not
            remote_ids:
              type: array
              description: List of the unique Identity Provider’s remote IDs
              items:
                type: string
    Os_FederationIdentity_ProvidersGetResponse:
      type: object
      properties:
        identity_providers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The Identity Provider unique ID
              description:
                type: string
                description: The Identity Provider description
              domain_id:
                type: string
                format: uuid
                description: The ID of a domain that is associated with the Identity
                  Provider.
              authorization_ttl:
                type: integer
                description: The length of validity in minutes for group memberships
                  carried over through mapping and persisted in the database.
              enabled:
                type: boolean
                description: Whether the Identity Provider is enabled or not
              remote_ids:
                type: array
                description: List of the unique Identity Provider’s remote IDs
                items:
                  type: string
    Os_FederationIdentity_ProvidersProtocolGetResponse:
      type: object
      properties:
        protocol:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The federation protocol ID
            mapping_id:
              type: string
            remote_id_attribute:
              type: string
              maxLength: 64
    Os_FederationIdentity_ProvidersProtocolPatchRequest:
      type: object
      properties:
        protocol:
          type: object
          properties:
            mapping_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-_]+$
            remote_id_attribute:
              type: string
              maxLength: 64
          minProperties: 1
          additionalProperties: false
    Os_FederationIdentity_ProvidersProtocolPatchResponse:
      type: object
      properties:
        protocol:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The federation protocol ID
            mapping_id:
              type: string
            remote_id_attribute:
              type: string
              maxLength: 64
    Os_FederationIdentity_ProvidersProtocolPutRequest:
      type: object
      properties:
        protocol:
          type: object
          properties:
            mapping_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-_]+$
            remote_id_attribute:
              type: string
              maxLength: 64
          required:
            - mapping_id
          additionalProperties: false
    Os_FederationIdentity_ProvidersProtocolPutResponse:
      type: object
      properties:
        protocol:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The federation protocol ID
            mapping_id:
              type: string
            remote_id_attribute:
              type: string
              maxLength: 64
    Os_FederationIdentity_ProvidersProtocolsGetResponse:
      type: object
      properties:
        protocols:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The federation protocol ID
              mapping_id:
                type: string
              remote_id_attribute:
                type: string
                maxLength: 64
    Os_FederationMappingGetResponse:
      type: object
      properties:
        mapping:
          type: object
          properties:
            id:
              type: string
              description: The Federation Mapping unique ID
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPatchRequest:
      type: object
      properties:
        mapping:
          type: object
          required:
            - rules
          properties:
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPatchResponse:
      type: object
      properties:
        mapping:
          type: object
          properties:
            id:
              type: string
              description: The Federation Mapping unique ID
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPutRequest:
      type: object
      properties:
        mapping:
          type: object
          required:
            - rules
          properties:
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPutResponse:
      type: object
      properties:
        mapping:
          type: object
          properties:
            id:
              type: string
              description: The Federation Mapping unique ID
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingsGetResponse:
      type: object
      properties:
        mappings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The Federation Mapping unique ID
              rules:
                minItems: 1
                type: array
                items:
                  type: object
                  required:
                    - local
                    - remote
                  additionalProperties: false
                  properties:
                    local:
                      type: array
                      items:
                        type: object
                        additionalProperties: false
                        properties:
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              email:
                                type: string
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                              type:
                                type: string
                                enum:
                                  - ephemeral
                                  - local
                            additionalProperties: false
                          projects:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - roles
                              additionalProperties: false
                              properties:
                                name:
                                  type: string
                                roles:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      name:
                                        type: string
                                    additionalProperties: false
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                          group:
                            type: object
                            oneOf:
                              - type: object
                                properties:
                                  id:
                                    type: string
                                additionalProperties: false
                                required:
                                  - id
                              - type: object
                                properties:
                                  name:
                                    type: string
                                  domain:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      name:
                                        type: string
                                    additionalProperties: false
                                additionalProperties: false
                                required:
                                  - name
                                  - domain
                          groups:
                            type: string
                          group_ids:
                            type: string
                          domain:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                            additionalProperties: false
                    remote:
                      minItems: 1
                      type: array
                      items:
                        type: object
                        oneOf:
                          - type: object
                            required:
                              - type
                            properties:
                              type:
                                type: string
                            additionalProperties: false
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - any_one_of
                            properties:
                              type:
                                type: string
                              any_one_of:
                                type: array
                              regex:
                                type: boolean
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - not_any_of
                            properties:
                              type:
                                type: string
                              not_any_of:
                                type: array
                              regex:
                                type: boolean
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - blacklist
                            properties:
                              type:
                                type: string
                              blacklist:
                                type: array
                              regex:
                                type: boolean
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - whitelist
                            properties:
                              type:
                                type: string
                              whitelist:
                                type: array
                              regex:
                                type: boolean
              schema_version:
                type: string
                description: Mapping schema version
    Os_FederationService_ProviderGetResponse:
      type: object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              description: The URL to authenticate against
            description:
              type:
                - string
                - 'null'
              description: The description of the Service Provider
            id:
              type: string
              description: The Service Provider unique ID
            enabled:
              type: boolean
              description: Whether the Service Provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
            sp_url:
              type: string
              description: The Service Provider’s URL
          required:
            - auth_url
            - sp_url
    Os_FederationService_ProviderPatchRequest:
      type: object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
            description:
              type:
                - string
                - 'null'
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            relay_state_prefix:
              type:
                - string
                - 'null'
          minProperties: 1
          additionalProperties: false
    Os_FederationService_ProviderPatchResponse:
      type: object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              description: The URL to authenticate against
            description:
              type:
                - string
                - 'null'
              description: The description of the Service Provider
            id:
              type: string
              description: The Service Provider unique ID
            enabled:
              type: boolean
              description: Whether the Service Provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
            sp_url:
              type: string
              description: The Service Provider’s URL
          required:
            - auth_url
            - sp_url
    Os_FederationService_ProviderPutRequest:
      type: object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
            description:
              type:
                - string
                - 'null'
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            relay_state_prefix:
              type:
                - string
                - 'null'
          required:
            - auth_url
            - sp_url
          additionalProperties: false
    Os_FederationService_ProviderPutResponse:
      type: object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              description: The URL to authenticate against
            description:
              type:
                - string
                - 'null'
              description: The description of the Service Provider
            id:
              type: string
              description: The Service Provider unique ID
            enabled:
              type: boolean
              description: Whether the Service Provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
            sp_url:
              type: string
              description: The Service Provider’s URL
          required:
            - auth_url
            - sp_url
    Os_FederationService_ProvidersGetResponse:
      type: object
      properties:
        service_providers:
          type: array
          items:
            type: object
            properties:
              auth_url:
                type: string
                description: The URL to authenticate against
              description:
                type:
                  - string
                  - 'null'
                description: The description of the Service Provider
              id:
                type: string
                description: The Service Provider unique ID
              enabled:
                type: boolean
                description: Whether the Service Provider is enabled or not
              relay_state_prefix:
                type:
                  - string
                  - 'null'
                description: The prefix of the RelayState SAML attribute
              sp_url:
                type: string
                description: The Service Provider’s URL
            required:
              - auth_url
              - sp_url
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritDomainsUsersRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritProjectsUsersRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_Oauth1ConsumerGetResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers/consumer_id:get operation
    Os_Oauth1ConsumerPatchRequest:
      type: object
      description: Request of the OS-OAUTH1/consumers/consumer_id:patch operation
      x-openstack:
        action-name: PATCH
    Os_Oauth1ConsumerPatchResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers/consumer_id:patch operation
    Os_Oauth1ConsumersGetResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers:get operation
    Os_Oauth1ConsumersPostRequest:
      type: object
      description: Request of the OS-OAUTH1/consumers:post operation
      x-openstack:
        action-name: POST
    Os_Oauth1ConsumersPostResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers:post operation
    Os_Oauth1Request_TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH1/request_token:get operation
    Os_Oauth1Request_TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH1/request_token:post operation
      x-openstack:
        action-name: POST
    Os_Oauth1Request_TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH1/request_token:post operation
    Os_Oauth1Access_TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH1/access_token:get operation
    Os_Oauth1Access_TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH1/access_token:post operation
      x-openstack:
        action-name: POST
    Os_Oauth1Access_TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH1/access_token:post operation
    Os_Oauth1AuthorizePutRequest:
      type: object
      description: Request of the OS-OAUTH1/authorize/request_token_id:put operation
      x-openstack:
        action-name: PUT
    Os_Oauth1AuthorizePutResponse:
      type: object
      description: Response of the OS-OAUTH1/authorize/request_token_id:put operation
    Os_Oauth2TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH2/token:get operation
    Os_Oauth2TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH2/token:post operation
      x-openstack:
        action-name: POST
    Os_Oauth2TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH2/token:post operation
    Os_Oauth2TokenPatchRequest:
      type: object
      description: Request of the OS-OAUTH2/token:patch operation
      x-openstack:
        action-name: PATCH
    Os_Oauth2TokenPatchResponse:
      type: object
      description: Response of the OS-OAUTH2/token:patch operation
    Os_Oauth2TokenPutRequest:
      type: object
      description: Request of the OS-OAUTH2/token:put operation
      x-openstack:
        action-name: PUT
    Os_Oauth2TokenPutResponse:
      type: object
      description: Response of the OS-OAUTH2/token:put operation
    Os_RevokeEventsGetResponse:
      type: object
      description: Response of the OS-REVOKE/events:get operation
    Os_Simple_CertCaGetResponse:
      type: object
      description: Response of the OS-SIMPLE-CERT/ca:get operation
    Os_Simple_CertCertificatesGetResponse:
      type: object
      description: Response of the OS-SIMPLE-CERT/certificates:get operation
    PolicyGetResponse:
      type: object
      description: Response of the policies/policy_id:get operation
    PolicyPatchRequest:
      type: object
      description: Request of the policies/policy_id:patch operation
      x-openstack:
        action-name: PATCH
    PolicyPatchResponse:
      type: object
      description: Response of the policies/policy_id:patch operation
    PoliciesGetResponse:
      type: object
      description: Response of the policies:get operation
    PoliciesPostRequest:
      type: object
      description: Request of the policies:post operation
      x-openstack:
        action-name: POST
    PoliciesPostResponse:
      type: object
      description: Response of the policies:post operation
    PoliciesOs_Endpoint_PolicyEndpointsGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints:get
        operation
    PoliciesOs_Endpoint_PolicyEndpointGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:get
        operation
    PoliciesOs_Endpoint_PolicyEndpointPutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
        operation
      x-openstack:
        action-name: PUT
    PoliciesOs_Endpoint_PolicyEndpointPutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
        operation
    PoliciesOs_Endpoint_PolicyServiceGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:get
        operation
    PoliciesOs_Endpoint_PolicyServicePutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
        operation
      x-openstack:
        action-name: PUT
    PoliciesOs_Endpoint_PolicyServicePutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:get
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionPutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
        operation
      x-openstack:
        action-name: PUT
    PoliciesOs_Endpoint_PolicyServicesRegionPutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
        operation
    Project:
      type: object
      properties:
        project:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            description:
              type:
                - string
                - 'null'
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            is_domain:
              type: boolean
              enum:
                - true
                - false
                - 
            parent_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            name:
              type: string
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          additionalProperties: true
    ProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              enabled:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              is_domain:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              parent_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              name:
                type: string
                minLength: 1
                maxLength: 64
                pattern: '[\S]+'
              tags:
                type: array
                items:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: ^[^,/]*$
                required: []
                maxItems: 80
                uniqueItems: true
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
            additionalProperties: true
    ProjectsTagsGetResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
    ProjectsTagsPutRequest:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 255
        pattern: ^[^,/]*$
      required: []
      maxItems: 80
      uniqueItems: true
    ProjectsTagsPutResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
    ProjectsTagPutRequest:
      type: string
      pattern: ^[^,/]*$
      maxLength: 255
      minLength: 1
    ProjectsTagPutResponse:
      type: object
      description: Response of the projects/project_id/tags/value:put operation
    Region:
      type: object
      properties:
        region:
          type: object
          properties:
            description:
              type: string
              description: The region description.
            id:
              type: string
              format: uuid
              description: The ID for the region.
              readOnly: true
            parent_id:
              type: string
              format: uuid
              description: To make this region a child of another region, set this
                parameter to the ID of the parent region.
    RegionPutRequest:
      type: object
      description: Request of the regions/region_id:put operation
      x-openstack:
        action-name: PUT
    RegionPutResponse:
      type: object
      description: Response of the regions/region_id:put operation
    RegionsGetResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: The region description.
              id:
                type: string
                format: uuid
                description: The ID for the region.
                readOnly: true
              parent_id:
                type: string
                format: uuid
                description: To make this region a child of another region, set this
                  parameter to the ID of the parent region.
    Registered_LimitGetResponse:
      type: object
      description: Response of the registered_limits/registered_limit_id:get operation
    Registered_LimitPatchRequest:
      type: object
      description: Request of the registered_limits/registered_limit_id:patch operation
      x-openstack:
        action-name: PATCH
    Registered_LimitPatchResponse:
      type: object
      description: Response of the registered_limits/registered_limit_id:patch operation
    Registered_LimitsGetResponse:
      type: object
      description: Response of the registered_limits:get operation
    Registered_LimitsPostRequest:
      type: object
      description: Request of the registered_limits:post operation
      x-openstack:
        action-name: POST
    Registered_LimitsPostResponse:
      type: object
      description: Response of the registered_limits:post operation
    Role_AssignmentsGetResponse:
      type: object
      properties:
        role_assignments:
          type: array
          items:
            type: object
            properties:
              role:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The role ID.
                  name:
                    type: string
                    description: The role name.
                  description:
                    type: string
                    description: The role description.
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The link to the resource in question.
              scope:
                type: object
                description: The authorization scope, including the system (Since
                  v3.10), a project, or a domain (Since v3.4). If multiple scopes
                  are specified in the same request (e.g. project and domain or domain
                  and system) an HTTP 400 Bad Request will be returned, as a token
                  cannot be simultaneously scoped to multiple authorization targets.
                  An ID is sufficient to uniquely identify a project but if a project
                  is specified by name, then the domain of the project must also be
                  specified in order to uniquely identify the project by name. A domain
                  scope may be specified by either the domain’s ID or name with equivalent
                  results.
                properties:
                  project:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Project Name
                      id:
                        type: string
                        description: Project Id
                      domain:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Project domain Id
                          name:
                            type: string
                            description: Project domain Name
                  domain:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Domain id
                      name:
                        type: string
                        description: Domain name
                  OS-TRUST:trust:
                    type: object
                    properties:
                      id:
                        type: string
                  system:
                    type: object
                    properties:
                      all:
                        type: boolean
              user:
                type: object
                description: A user object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: A user UUID
                  name:
                    type: string
                    description: A user name
                  domain:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: A user domain UUID
                      name:
                        type: string
                        description: A user domain name
              group:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: A user ID
                  name:
                    type: string
                    description: A user name
              links:
                type: object
                properties:
                  assignment:
                    type: string
                    format: uri
                    description: a link to the assignment that gave rise to this entity
                  membership:
                    type: string
                    format: uri
    Role_InferencesGetResponse:
      type: object
      properties:
        role_inferences:
          type: array
          items:
            type: object
            properties:
              prior_role:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The role ID.
                  name:
                    type: string
                    description: The role name.
                  description:
                    type: string
                    description: The role description.
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The link to the resource in question.
              implies:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The role ID.
                    name:
                      type: string
                      description: The role name.
                    description:
                      type: string
                      description: The role description.
                    links:
                      type: object
                      properties:
                        self:
                          type: string
                          format: uri
                          description: The link to the resource in question.
    Role:
      type: object
      properties:
        role:
          type: object
          description: A role object.
          properties:
            id:
              type: string
              format: uuid
              description: The role ID.
              readOnly: true
            links:
              type: object
              additionalProperties:
                type:
                  - string
                  - 'null'
                format: uri
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            description:
              type: string
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
    RolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            description: A role object.
            properties:
              id:
                type: string
                format: uuid
                description: The role ID.
                readOnly: true
              links:
                type: object
                additionalProperties:
                  type:
                    - string
                    - 'null'
                  format: uri
                readOnly: true
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
        links:
          type: object
          additionalProperties:
            type:
              - string
              - 'null'
            format: uri
    RolesImpliesGetResponse:
      type: object
      properties:
        role_inference:
          type: object
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: The role ID.
                name:
                  type: string
                  description: The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
            implies:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The role ID.
                  name:
                    type: string
                    description: The role name.
                  description:
                    type: string
                    description: The role description.
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The link to the resource in question.
    RolesImplyGetResponse:
      type: object
      properties:
        role_inference:
          type: object
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: The role ID.
                name:
                  type: string
                  description: The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
            implies:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: The role ID.
                name:
                  type: string
                  description: The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
    RolesImplyPutRequest:
      type: object
      description: Request of the roles/prior_role_id/implies/implied_role_id:put
        operation
      x-openstack:
        action-name: PUT
    RolesImplyPutResponse:
      type: object
      properties:
        role_inference:
          type: object
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: The role ID.
                name:
                  type: string
                  description: The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
            implies:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: The role ID.
                name:
                  type: string
                  description: The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
    S3TokensGetResponse:
      type: object
      description: Response of the s3tokens:get operation
    S3TokensPostRequest:
      type: object
      description: Request of the s3tokens:post operation
      x-openstack:
        action-name: POST
    S3TokensPostResponse:
      type: object
      description: Response of the s3tokens:post operation
    Service:
      type: object
      properties:
        service:
          type: object
          properties:
            description:
              type: string
              description: The service description.
            enabled:
              type: boolean
              description: Defines whether the service and its endpoints appear in
                the service catalog.
            id:
              type: string
              format: uuid
              description: The UUID of the service to which the endpoint belongs.
              readOnly: true
            name:
              type: string
              description: The service name.
            type:
              type: string
              description: 'The service type, which describes the API implemented
                by the '
    ServicesGetResponse:
      type: object
      properties:
        services:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: The service description.
              enabled:
                type: boolean
                description: Defines whether the service and its endpoints appear
                  in the service catalog.
              id:
                type: string
                format: uuid
                description: The UUID of the service to which the endpoint belongs.
                readOnly: true
              name:
                type: string
                description: The service name.
              type:
                type: string
                description: 'The service type, which describes the API implemented
                  by the '
    SystemUsersRolesGetResponse:
      type: object
      description: Response of the system/users/user_id/roles:get operation
    SystemUsersRoleGetResponse:
      type: object
      description: Response of the system/users/user_id/roles/role_id:get operation
    SystemUsersRolePutRequest:
      type: object
      description: Request of the system/users/user_id/roles/role_id:put operation
      x-openstack:
        action-name: PUT
    SystemUsersRolePutResponse:
      type: object
      description: Response of the system/users/user_id/roles/role_id:put operation
    SystemGroupsRolesGetResponse:
      type: object
      description: Response of the system/groups/group_id/roles:get operation
    SystemGroupsRoleGetResponse:
      type: object
      description: Response of the system/groups/group_id/roles/role_id:get operation
    SystemGroupsRolePutRequest:
      type: object
      description: Request of the system/groups/group_id/roles/role_id:put operation
      x-openstack:
        action-name: PUT
    SystemGroupsRolePutResponse:
      type: object
      description: Response of the system/groups/group_id/roles/role_id:put operation
    Os_TrustTrustGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id:get operation
    Os_TrustTrustsGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts:get operation
    Os_TrustTrustsPostRequest:
      type: object
      description: Request of the OS-TRUST/trusts:post operation
      x-openstack:
        action-name: POST
    Os_TrustTrustsPostResponse:
      type: object
      description: Response of the OS-TRUST/trusts:post operation
    Os_TrustTrustsRolesGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id/roles:get operation
    Os_TrustTrustsRoleGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id/roles/role_id:get operation
    UserGetResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            description:
              type:
                - string
                - 'null'
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            password:
              type:
                - string
                - 'null'
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
    UserPatchRequest:
      type: object
      properties:
        user:
          type: object
          properties:
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            description:
              type:
                - string
                - 'null'
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            password:
              type:
                - string
                - 'null'
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          minProperties: 1
          options:
            type: object
          additionalProperties: true
    UserPatchResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            description:
              type:
                - string
                - 'null'
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            password:
              type:
                - string
                - 'null'
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
    UsersGetResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
              default_project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              enabled:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              federated:
                type: array
                items:
                  type: object
                  properties:
                    idp_id:
                      type: string
                    protocols:
                      type: array
                      items:
                        type: object
                        properties:
                          protocol_id:
                            type: string
                          unique_id:
                            type: string
                        required:
                          - protocol_id
                          - unique_id
                      minItems: 1
                  required:
                    - idp_id
                    - protocols
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              password:
                type:
                  - string
                  - 'null'
              options:
                type: object
                properties:
                  ignore_change_password_upon_first_use:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_password_expiry:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_lockout_failure_attempts:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  lock_password:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_user_inactivity:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  multi_factor_auth_rules:
                    type:
                      - array
                      - 'null'
                    items:
                      type: array
                      items:
                        type: string
                      minItems: 1
                      uniqueItems: true
                    uniqueItems: true
                  multi_factor_auth_enabled:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
    UsersPostRequest:
      type: object
      properties:
        user:
          type: object
          properties:
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            description:
              type:
                - string
                - 'null'
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            enabled:
              type: boolean
              enum:
                - true
                - false
                - 
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            password:
              type:
                - string
                - 'null'
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          required:
            - name
          options:
            type: object
          additionalProperties: true
    UsersPostResponse:
      type: object
      description: Response of the users:post operation
    UsersPasswordPostRequest:
      type: object
      properties:
        user:
          type: object
          properties:
            original_password:
              type: string
              format: password
            password:
              type: string
              format: password
          required:
            - original_password
            - password
          additionalProperties: false
    UsersGroupsGetResponse:
      type: object
      properties:
        groups:
          type: array
          description: A list of group objects
          items:
            type: object
            properties:
              description:
                type: string
                description: The description of the group.
              domain_id:
                type: string
                format: uuid
                description: The ID of the domain of the group.
              id:
                type: string
                format: uuid
                description: The ID of the group.
              name:
                type: string
                description: The name of the group.
              membership_expires_at:
                type: string
                format: date-time
                description: The date and time when the group membership expires.
                  A null value indicates that the membership never expires.
                x-openstack:
                  min-ver: '3.14'
    UsersProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          description: A list of project objects
          items:
            type: object
            properties:
              description:
                type: string
                description: The description of the project.
              domain_id:
                type: string
                format: uuid
                description: The ID of the domain of the project.
              id:
                type: string
                format: uuid
                description: The ID of the project.
              parent_id:
                type: string
                format: uuid
                description: The parent id of the project.
              name:
                type: string
                description: The name of the project.
    UsersCredentialsOs_Ec2GetResponse:
      type: object
      description: Response of the users/user_id/credentials/OS-EC2:get operation
    UsersCredentialsOs_Ec2PostRequest:
      type: object
      description: Request of the users/user_id/credentials/OS-EC2:post operation
      x-openstack:
        action-name: POST
    UsersCredentialsOs_Ec2PostResponse:
      type: object
      description: Response of the users/user_id/credentials/OS-EC2:post operation
    UsersOs_Oauth1Access_TokensGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens:get operation
    UsersOs_Oauth1Access_TokenGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id:get
        operation
    UsersOs_Oauth1Access_TokensRolesGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:get
        operation
    UsersOs_Oauth1Access_TokensRoleGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:get
        operation
    UsersApplication_CredentialsGetResponse:
      type: object
      properties:
        application_credentials:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The ID of the application credential.
              project_id:
                type: string
                format: uuid
                description: The ID of the project the application credential was
                  created for and that authentication requests using this application
                  credential will be scoped to.
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type:
                  - string
                  - 'null'
              expires_at:
                type:
                  - 'null'
                  - string
              roles:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      minLength: 1
                      maxLength: 64
                      pattern: ^[a-zA-Z0-9-]+$
                    name:
                      type: string
                      minLength: 1
                      maxLength: 255
                      pattern: '[\S]+'
                  minProperties: 1
                  maxProperties: 1
                  additionalProperties: false
              unrestricted:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              access_rules:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      minLength: 0
                      maxLength: 225
                      pattern: ^\/.*
                    method:
                      type: string
                      pattern: ^(POST|GET|HEAD|PATCH|PUT|DELETE)$
                    service:
                      type: string
                      minLength: 1
                      maxLength: 64
                      pattern: ^[a-zA-Z0-9-]+$
                    id:
                      type: string
                      minLength: 1
                      maxLength: 64
                      pattern: ^[a-zA-Z0-9-]+$
                  additionalProperties: false
    UsersApplication_CredentialsPostRequest:
      type: object
      properties:
        application_credential:
          type: object
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            description:
              type:
                - string
                - 'null'
            secret:
              type:
                - 'null'
                - string
            expires_at:
              type:
                - 'null'
                - string
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                minProperties: 1
                maxProperties: 1
                additionalProperties: false
            unrestricted:
              type: boolean
              enum:
                - true
                - false
                - 
            access_rules:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
                    minLength: 0
                    maxLength: 225
                    pattern: ^\/.*
                  method:
                    type: string
                    pattern: ^(POST|GET|HEAD|PATCH|PUT|DELETE)$
                  service:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                additionalProperties: false
          required:
            - name
          additionalProperties: true
    UsersApplication_CredentialsPostResponse:
      type: object
      properties:
        application_credential:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The ID of the application credential.
            project_id:
              type: string
              format: uuid
              description: The ID of the project the application credential was created
                for and that authentication requests using this application credential
                will be scoped to.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            description:
              type:
                - string
                - 'null'
            expires_at:
              type:
                - 'null'
                - string
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                minProperties: 1
                maxProperties: 1
                additionalProperties: false
            unrestricted:
              type: boolean
              enum:
                - true
                - false
                - 
            access_rules:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
                    minLength: 0
                    maxLength: 225
                    pattern: ^\/.*
                  method:
                    type: string
                    pattern: ^(POST|GET|HEAD|PATCH|PUT|DELETE)$
                  service:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                additionalProperties: false
            secret:
              type: string
              description: The secret for the application credential, either generated
                by the server or provided by the user. This is only ever shown once
                in the response to a create request. It is not stored nor ever shown
                again. If the secret is lost, a new application credential must be
                created.
    UsersApplication_CredentialGetResponse:
      type: object
      properties:
        application_credential:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The ID of the application credential.
            project_id:
              type: string
              format: uuid
              description: The ID of the project the application credential was created
                for and that authentication requests using this application credential
                will be scoped to.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
            description:
              type:
                - string
                - 'null'
            expires_at:
              type:
                - 'null'
                - string
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                minProperties: 1
                maxProperties: 1
                additionalProperties: false
            unrestricted:
              type: boolean
              enum:
                - true
                - false
                - 
            access_rules:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
                    minLength: 0
                    maxLength: 225
                    pattern: ^\/.*
                  method:
                    type: string
                    pattern: ^(POST|GET|HEAD|PATCH|PUT|DELETE)$
                  service:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                additionalProperties: false
    UsersAccess_RulesGetResponse:
      type: object
      properties:
        access_rules:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                minLength: 0
                maxLength: 225
                pattern: ^\/.*
              method:
                type: string
                pattern: ^(POST|GET|HEAD|PATCH|PUT|DELETE)$
              service:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
            additionalProperties: false
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    UsersAccess_RuleGetResponse:
      type: object
      properties:
        access_rule:
          type: object
          properties:
            path:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^\/.*
            method:
              type: string
              pattern: ^(POST|GET|HEAD|PATCH|PUT|DELETE)$
            service:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
          additionalProperties: false
  parameters:
    X-Auth-Token:
      in: header
      name: X-Auth-Token
      description: A valid authentication token
      schema:
        type: string
        format: secret
    X-Subject-Token:
      in: header
      name: X-Subject-Token
      description: The authentication token. An authentication response returns the
        token ID in this header rather than in the response body.
      schema:
        type: string
        format: secret
      required: true
    auth_OS_FEDERATION_websso_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/auth/OS-FEDERATION/websso/{protocol_id} API
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_identity_providers_protocols_websso_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso API
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_identity_providers_protocols_websso_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso API
      schema:
        type: string
      required: true
    credentials_credential_id:
      in: path
      name: credential_id
      description: |-
        credential_id parameter for /v3/credentials/{credential_id} API
      schema:
        type: string
      required: true
    domains_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id} API
      schema:
        type: string
      required: true
    domain_name:
      in: query
      name: name
      description: Filters the response by a domain name.
      schema:
        type: string
    domain_enabled:
      in: query
      name: enabled
      description: If set to true, then only domains that are enabled will be returned,
        if set to false only that are disabled will be returned. Any value other than
        0, including no value, will be interpreted as true.
      schema:
        type: boolean
    domains_config_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/config/{group}/{option} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    domains_config_group:
      in: path
      name: group
      description: |-
        group parameter for /v3/domains/{domain_id}/config/{group}/{option} API
      schema:
        type: string
      required: true
    domains_config_option:
      in: path
      name: option
      description: |-
        option parameter for /v3/domains/{domain_id}/config/{group}/{option} API
      schema:
        type: string
      required: true
    domains_config_default_group:
      in: path
      name: group
      description: |-
        group parameter for /v3/domains/config/{group}/{option}/default API
      schema:
        type: string
      required: true
    domains_config_default_option:
      in: path
      name: option
      description: |-
        option parameter for /v3/domains/config/{group}/{option}/default API
      schema:
        type: string
      required: true
    domains_users_roles_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    domains_users_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    domains_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_groups_roles_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    domains_groups_roles_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    endpoint_service_id:
      in: query
      name: service_id
      description: Filters the response by a service ID.
      schema:
        type: string
        format: uuid
    endpoint_region_id:
      in: query
      name: region
      description: Filters the response by a region ID.
      schema:
        type: string
        format: uuid
    endpoint_interface:
      in: query
      name: interface
      description: Filters the response by an interface.
      schema:
        type: string
        enum:
          - public
          - internal
          - admin
    endpoints_OS_ENDPOINT_POLICY_policy_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy API
      schema:
        type: string
      required: true
    groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/groups/{group_id} API
      schema:
        type: string
      required: true
    group_domain_id:
      in: query
      name: domain_id
      description: Filters the response by a domain ID.
      schema:
        type: string
        format: uuid
    groups_users_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/groups/{group_id}/users/{user_id} API
      schema:
        type: string
      required: true
    group_user_password_expires_at:
      in: query
      name: password_expires_at
      description: "Filter results based on which user passwords have expired. The
        query should include an operator and a timestamp with a colon (:) separating
        the two, for example: `password_expires_at={operator}:{timestamp}`.\nValid
        operators are: `lt`, `lte`, `gt`, `gte`, `eq`, and `neq`.\nValid timestamps
        are of the form: YYYY-MM-DDTHH:mm:ssZ."
      schema:
        type: string
        format: date-time
    groups_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/groups/{group_id}/users/{user_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    limits_limit_id:
      in: path
      name: limit_id
      description: |-
        limit_id parameter for /v3/limits/{limit_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoints_projects_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_endpoints_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoints API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_endpoint_groups_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_endpoints_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_projects_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_auth_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_auth_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id} API
      schema:
        type: string
      required: true
    idp_id:
      in: query
      name: id
      description: Filter for Identity Providers’ ID attribute
      schema:
        type: string
    idp_enabled:
      in: query
      name: enabled
      description: Filter for Identity Providers’ enabled attribute
      schema:
        type: boolean
    OS_FEDERATION_identity_providers_protocols_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_mappings_mapping_id:
      in: path
      name: mapping_id
      description: |-
        mapping_id parameter for /v3/OS-FEDERATION/mappings/{mapping_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_service_providers_sp_id:
      in: path
      name: sp_id
      description: |-
        sp_id parameter for /v3/OS-FEDERATION/service_providers/{sp_id} API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_groups_roles_inherited_to_projects_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    OS_INHERIT_domains_groups_roles_inherited_to_projects_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_groups_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_users_roles_inherited_to_projects_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    OS_INHERIT_domains_users_roles_inherited_to_projects_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    OS_INHERIT_domains_users_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_users_roles_inherited_to_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_users_roles_inherited_to_projects_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    OS_INHERIT_projects_users_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_roles_inherited_to_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_roles_inherited_to_projects_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_OAUTH1_consumers_consumer_id:
      in: path
      name: consumer_id
      description: |-
        consumer_id parameter for /v3/OS-OAUTH1/consumers/{consumer_id} API
      schema:
        type: string
      required: true
    OS_OAUTH1_authorize_request_token_id:
      in: path
      name: request_token_id
      description: |-
        request_token_id parameter for /v3/OS-OAUTH1/authorize/{request_token_id} API
      schema:
        type: string
      required: true
    policies_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_endpoints_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_region_id:
      in: path
      name: region_id
      description: |-
        region_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id} API
      schema:
        type: string
      required: true
    project_domain_id:
      in: query
      name: domain_id
      description: Filters the response by a domain ID.
      schema:
        type: string
        format: uuid
    project_enabled:
      in: query
      name: enabled
      description: If set to true, then only enabled projects will be returned. Any
        value other than 0 (including no value) will be interpreted as true.
      schema:
        type: boolean
    project_is_domain:
      in: query
      name: is_domain
      description: If this is specified as true, then only projects acting as a domain
        are included. Otherwise, only projects that are not acting as a domain are
        included.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.6'
    project_name:
      in: query
      name: name
      description: Filters the response by a resource name.
      schema:
        type: string
    project_parent_id:
      in: query
      name: parent_id
      description: Filters the response by a parent ID.
      schema:
        type: string
        format: uuid
      x-openstack:
        min-ver: '3.4'
    projects_tags_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/tags/{value} API
      schema:
        type: string
      required: true
    projects_tags_value:
      in: path
      name: value
      description: |-
        value parameter for /v3/projects/{project_id}/tags/{value} API
      schema:
        type: string
      required: true
    projects_users_roles_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/users/{user_id}/roles API
      schema:
        type: string
      required: true
    projects_users_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/projects/{project_id}/users/{user_id}/roles API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    projects_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/projects/{project_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    projects_groups_roles_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles API
      schema:
        type: string
      required: true
    projects_groups_roles_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles API
      schema:
        type: string
      required: true
    projects_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    regions_region_id:
      in: path
      name: region_id
      description: |-
        region_id parameter for /v3/regions/{region_id} API
      schema:
        type: string
      required: true
    region_parent_region_id:
      in: query
      name: parent_region_id
      description: Filters the response by a parent region, by ID.
      schema:
        type: string
        format: uuid
    registered_limits_registered_limit_id:
      in: path
      name: registered_limit_id
      description: |-
        registered_limit_id parameter for /v3/registered_limits/{registered_limit_id} API
      schema:
        type: string
      required: true
    role_assignment_group_id:
      in: query
      name: group.id
      description: Filters the response by a group ID.
      schema:
        type: string
        format: uuid
    role_assignment_role_id:
      in: query
      name: role.id
      description: Filters the response by a role ID.
      schema:
        type: string
        format: uuid
    role_assignment_user_id:
      in: query
      name: user.id
      description: Filters the response by a user ID.
      schema:
        type: string
        format: uuid
    role_assignment_scope_domain_id:
      in: query
      name: scope.domain.id
      description: Filters the response by a domain ID.
      schema:
        type: string
        format: uuid
    role_assignment_scope_project_id:
      in: query
      name: scope.project.id
      description: Filters the response by a project ID.
      schema:
        type: string
        format: uuid
    role_assignment_inherit:
      in: query
      name: scope.OS-INHERIT:inherited_to
      description: Filters based on role assignments that are inherited. The only
        value of inherited_to that is currently supported is projects.
      schema:
        type: string
        format: uuid
    role_assignment_effective:
      in: query
      name: effective
      description: Returns the effective assignments, including any assignments gained
        by virtue of group membership.
      schema:
        type: 'null'
      x-openstack:
        is-flag: true
      allowEmptyValue: true
    role_assignment_include_names:
      in: query
      name: include_names
      description: If set, then the names of any entities returned will be include
        as well as their IDs. Any value other than 0 (including no value) will be
        interpreted as true.
      schema:
        type: 'null'
      x-openstack:
        min-ver: '3.6'
        is-flag: true
      allowEmptyValue: true
    role_assignment_include_subtree:
      in: query
      name: include_subtree
      description: If set, then relevant assignments in the project hierarchy below
        the project specified in the scope.project_id query parameter are also included
        in the response. Any value other than 0 (including no value) for include_subtree
        will be interpreted as true.
      schema:
        type: 'null'
      x-openstack:
        min-ver: '3.6'
        is-flag: 'True'
      allowEmptyValue: true
    roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/roles/{role_id} API
      schema:
        type: string
      required: true
    role_domain_id:
      in: query
      name: domain_id
      description: Filters the response by a domain ID.
      schema:
        type: string
        format: uuid
    roles_implies_prior_role_id:
      in: path
      name: prior_role_id
      description: |-
        prior_role_id parameter for /v3/roles/{prior_role_id}/implies/{implied_role_id} API
      schema:
        type: string
      required: true
    roles_implies_implied_role_id:
      in: path
      name: implied_role_id
      description: |-
        implied_role_id parameter for /v3/roles/{prior_role_id}/implies/{implied_role_id} API
      schema:
        type: string
      required: true
    services_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/services/{service_id} API
      schema:
        type: string
      required: true
    service_type:
      in: query
      name: service
      description: Filters the response by a domain ID.
      schema:
        type: string
    system_users_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/system/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    system_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/system/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_groups_roles_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/system/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/system/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_trust_id:
      in: path
      name: trust_id
      description: |-
        trust_id parameter for /v3/OS-TRUST/trusts/{trust_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_roles_trust_id:
      in: path
      name: trust_id
      description: |-
        trust_id parameter for /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id} API
      schema:
        type: string
      required: true
    domain_id:
      in: query
      name: domain_id
      description: Filters the response by a domain ID.
      schema:
        type: string
        format: uuid
    enabled:
      in: query
      name: enabled
      description: If set to true, then only enabled projects will be returned. Any
        value other than 0 (including no value) will be interpreted as true.
      schema:
        type: boolean
    name:
      in: query
      name: name
      description: Filters the response by a resource name.
      schema:
        type: string
    password_expires_at:
      in: query
      name: password_expires_at
      description: "Filter results based on which user passwords have expired. The
        query should include an operator and a timestamp with a colon (:) separating
        the two, for example: `password_expires_at={operator}:{timestamp}`.\nValid
        operators are: `lt`, `lte`, `gt`, `gte`, `eq`, and `neq`.\nValid timestamps
        are of the form: YYYY-MM-DDTHH:mm:ssZ."
      schema:
        type: string
        format: date-time
    protocol_id:
      in: query
      name: protocol_id
      description: Filters the response by a protocol ID.
      schema:
        type: string
        format: uuid
    unique_id:
      in: query
      name: unique_id
      description: Filters the response by a unique ID.
      schema:
        type: string
        format: uuid
    users_password_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/password API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_groups_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/groups API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_projects_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_credentials_OS_EC2_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/credentials/OS-EC2/{credential_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_credentials_OS_EC2_credential_id:
      in: path
      name: credential_id
      description: |-
        credential_id parameter for /v3/users/{user_id}/credentials/OS-EC2/{credential_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_OS_OAUTH1_access_tokens_access_token_id:
      in: path
      name: access_token_id
      description: |-
        access_token_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_OS_OAUTH1_access_tokens_roles_access_token_id:
      in: path
      name: access_token_id
      description: |-
        access_token_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_application_credentials_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/application_credentials/{application_credential_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    application_credentials_name:
      in: query
      name: name
      description: The name of the application credential. Must be unique to a user.
      schema:
        type: string
    users_application_credentials_application_credential_id:
      in: path
      name: application_credential_id
      description: |-
        application_credential_id parameter for /v3/users/{user_id}/application_credentials/{application_credential_id} API
      schema:
        type: string
      required: true
    users_access_rules_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/access_rules/{access_rule_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_access_rules_access_rule_id:
      in: path
      name: access_rule_id
      description: |-
        access_rule_id parameter for /v3/users/{user_id}/access_rules/{access_rule_id} API
      schema:
        type: string
      required: true
  headers:
    X-Auth-Token:
      description: A valid authentication token
      schema:
        type: string
        format: secret
    X-Subject-Token:
      description: API Authorization token
      schema:
        type: string
    Openstack-Auth-Receipt:
      description: The auth receipt. A partially successful authentication response
        returns the auth receipt ID in this header rather than in the response body.
      schema:
        type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: version
    description:
  - name: v3
    description:
  - name: auth
    description:
  - name: OS-FEDERATION
    description:
  - name: credentials
    description:
  - name: domains
    description:
  - name: domain-configuration
    description:
  - name: roles
    description:
  - name: ec2tokens
    description:
  - name: endpoints
    description:
  - name: groups
    description:
  - name: limits
    description:
  - name: OS-EP-FILTER
    description:
  - name: OS-INHERIT
    description:
  - name: OS-OAUTH1
    description:
  - name: OS-OAUTH2
    description:
  - name: OS-REVOKE
    description:
  - name: OS-SIMPLE-CERT
    description:
  - name: policies
    description:
  - name: projects
    description:
  - name: regions
    description:
  - name: registered_limits
    description:
  - name: role_assignments
    description:
  - name: role_inferences
    description:
  - name: s3tokens
    description:
  - name: services
    description:
  - name: system
    description:
  - name: OS-TRUST
    description:
  - name: users
    description:
security:
  - ApiKeyAuth: []
